{"index": 0, "title": "Count Pairs That Form a Complete Day I", "title_slug": "count-pairs-that-form-a-complete-day-i", "question_id": "3421", "question_frontend_id": "3184", "difficulty": "Easy", "contest": "weekly-contest-402", "prompt": "from typing import List\n\ndef countCompleteDayPairs(hours: List[int]) -> int:\n    \"\"\"\n    Given an integer array `hours` representing times in **hours** , return an\n    integer denoting the number of pairs `i`, `j` where `i < j` and `hours[i] +\n    hours[j]` forms a **complete day**.\n    \n    A **complete day** is defined as a time duration that is an **exact**\n    **multiple** of 24 hours.  \n    \n    **Constraints:**\n    \n      * `1 <= hours.length <= 100`\n      * `1 <= hours[i] <= 10 ^ 9`\n    \"\"\"", "entry_point": "countCompleteDayPairs", "solution": "from typing import List\nfrom collections import Counter\n\ndef countCompleteDayPairs(hours: List[int]) -> int:\n    ctr = Counter(map(lambda x: x % 24, hours))\n    count = sum(ctr[i] * ctr[24 - i] for i in range(1, 12))\n    return count + (ctr[12] * (ctr[12] - 1) + ctr[0] * (ctr[0] - 1)) // 2", "challenge_tests": [], "tests": ["assert countCompleteDayPairs([12, 12, 30, 24, 24]) == 2", "assert countCompleteDayPairs([72, 48, 24, 3]) == 3", "assert countCompleteDayPairs([1, 16]) == 0", "assert countCompleteDayPairs([3, 29]) == 0", "assert countCompleteDayPairs([3, 30]) == 0", "assert countCompleteDayPairs([5, 17]) == 0", "assert countCompleteDayPairs([5, 21]) == 0", "assert countCompleteDayPairs([5, 30]) == 0", "assert countCompleteDayPairs([7, 4]) == 0", "assert countCompleteDayPairs([9, 24]) == 0", "assert countCompleteDayPairs([10, 48]) == 0", "assert countCompleteDayPairs([11, 9]) == 0", "assert countCompleteDayPairs([12, 3]) == 0", "assert countCompleteDayPairs([13, 48]) == 0", "assert countCompleteDayPairs([16, 48]) == 0", "assert countCompleteDayPairs([17, 14]) == 0", "assert countCompleteDayPairs([17, 48]) == 0", "assert countCompleteDayPairs([18, 2]) == 0", "assert countCompleteDayPairs([19, 26]) == 0", "assert countCompleteDayPairs([20, 18]) == 0", "assert countCompleteDayPairs([23, 48]) == 0", "assert countCompleteDayPairs([24, 4]) == 0", "assert countCompleteDayPairs([24, 5]) == 0", "assert countCompleteDayPairs([24, 12]) == 0", "assert countCompleteDayPairs([24, 17]) == 0", "assert countCompleteDayPairs([24, 23]) == 0", "assert countCompleteDayPairs([24, 24]) == 1", "assert countCompleteDayPairs([24, 28]) == 0", "assert countCompleteDayPairs([24, 48]) == 1", "assert countCompleteDayPairs([26, 48]) == 0", "assert countCompleteDayPairs([27, 29]) == 0", "assert countCompleteDayPairs([29, 24]) == 0", "assert countCompleteDayPairs([48, 1]) == 0", "assert countCompleteDayPairs([48, 2]) == 0", "assert countCompleteDayPairs([48, 7]) == 0", "assert countCompleteDayPairs([48, 21]) == 0", "assert countCompleteDayPairs([48, 24]) == 1", "assert countCompleteDayPairs([48, 48]) == 1", "assert countCompleteDayPairs([2, 5, 24]) == 0", "assert countCompleteDayPairs([2, 48, 48]) == 1", "assert countCompleteDayPairs([3, 4, 48]) == 0", "assert countCompleteDayPairs([4, 23, 9]) == 0", "assert countCompleteDayPairs([4, 48, 12]) == 0", "assert countCompleteDayPairs([7, 13, 12]) == 0", "assert countCompleteDayPairs([7, 21, 48]) == 0", "assert countCompleteDayPairs([7, 48, 48]) == 1", "assert countCompleteDayPairs([8, 48, 12]) == 0", "assert countCompleteDayPairs([10, 7, 24]) == 0", "assert countCompleteDayPairs([11, 11, 24]) == 0", "assert countCompleteDayPairs([11, 23, 48]) == 0", "assert countCompleteDayPairs([11, 48, 10]) == 0", "assert countCompleteDayPairs([14, 23, 18]) == 0", "assert countCompleteDayPairs([14, 24, 29]) == 0", "assert countCompleteDayPairs([15, 48, 8]) == 0", "assert countCompleteDayPairs([16, 10, 16]) == 0", "assert countCompleteDayPairs([16, 20, 48]) == 0", "assert countCompleteDayPairs([17, 15, 21]) == 0", "assert countCompleteDayPairs([18, 48, 17]) == 0", "assert countCompleteDayPairs([20, 48, 24]) == 1", "assert countCompleteDayPairs([21, 19, 3]) == 1", "assert countCompleteDayPairs([22, 29, 8]) == 0", "assert countCompleteDayPairs([23, 18, 18]) == 0", "assert countCompleteDayPairs([24, 3, 17]) == 0", "assert countCompleteDayPairs([24, 5, 48]) == 1", "assert countCompleteDayPairs([24, 7, 21]) == 0", "assert countCompleteDayPairs([24, 12, 22]) == 0", "assert countCompleteDayPairs([24, 17, 48]) == 1", "assert countCompleteDayPairs([24, 19, 29]) == 1", "assert countCompleteDayPairs([24, 21, 22]) == 0", "assert countCompleteDayPairs([24, 24, 13]) == 1", "assert countCompleteDayPairs([24, 24, 18]) == 1", "assert countCompleteDayPairs([24, 24, 23]) == 1", "assert countCompleteDayPairs([24, 24, 24]) == 3", "assert countCompleteDayPairs([24, 48, 13]) == 1", "assert countCompleteDayPairs([24, 48, 22]) == 1", "assert countCompleteDayPairs([24, 48, 26]) == 1", "assert countCompleteDayPairs([27, 24, 24]) == 1", "assert countCompleteDayPairs([29, 22, 24]) == 0", "assert countCompleteDayPairs([48, 4, 12]) == 0", "assert countCompleteDayPairs([48, 14, 29]) == 0", "assert countCompleteDayPairs([48, 15, 24]) == 1", "assert countCompleteDayPairs([48, 18, 24]) == 1", "assert countCompleteDayPairs([48, 19, 48]) == 1", "assert countCompleteDayPairs([48, 23, 28]) == 0", "assert countCompleteDayPairs([48, 24, 11]) == 1", "assert countCompleteDayPairs([48, 24, 24]) == 3", "assert countCompleteDayPairs([48, 24, 27]) == 1", "assert countCompleteDayPairs([48, 24, 48]) == 3", "assert countCompleteDayPairs([48, 27, 27]) == 0", "assert countCompleteDayPairs([48, 28, 48]) == 1", "assert countCompleteDayPairs([48, 48, 10]) == 1", "assert countCompleteDayPairs([48, 48, 23]) == 1", "assert countCompleteDayPairs([3, 26, 24, 10]) == 0", "assert countCompleteDayPairs([5, 9, 24, 16]) == 0", "assert countCompleteDayPairs([6, 14, 15, 24]) == 0", "assert countCompleteDayPairs([8, 1, 48, 23]) == 1", "assert countCompleteDayPairs([9, 12, 20, 48]) == 0", "assert countCompleteDayPairs([9, 20, 24, 48]) == 1", "assert countCompleteDayPairs([10, 14, 23, 24]) == 1", "assert countCompleteDayPairs([12, 48, 1, 5]) == 0", "assert countCompleteDayPairs([13, 22, 17, 24]) == 0", "assert countCompleteDayPairs([13, 24, 24, 48]) == 3", "assert countCompleteDayPairs([14, 13, 21, 8]) == 0", "assert countCompleteDayPairs([15, 24, 24, 48]) == 3", "assert countCompleteDayPairs([15, 48, 48, 15]) == 1", "assert countCompleteDayPairs([16, 24, 48, 16]) == 1", "assert countCompleteDayPairs([18, 24, 15, 24]) == 1", "assert countCompleteDayPairs([18, 48, 1, 24]) == 1", "assert countCompleteDayPairs([19, 14, 4, 48]) == 0", "assert countCompleteDayPairs([20, 24, 7, 24]) == 1", "assert countCompleteDayPairs([20, 24, 24, 24]) == 3", "assert countCompleteDayPairs([20, 24, 48, 24]) == 3", "assert countCompleteDayPairs([21, 24, 24, 48]) == 3", "assert countCompleteDayPairs([23, 6, 28, 24]) == 0", "assert countCompleteDayPairs([23, 24, 22, 24]) == 1", "assert countCompleteDayPairs([23, 48, 48, 24]) == 3", "assert countCompleteDayPairs([24, 3, 48, 8]) == 1", "assert countCompleteDayPairs([24, 5, 48, 24]) == 3", "assert countCompleteDayPairs([24, 6, 24, 24]) == 3", "assert countCompleteDayPairs([24, 17, 48, 48]) == 3", "assert countCompleteDayPairs([24, 21, 4, 48]) == 1", "assert countCompleteDayPairs([24, 24, 5, 48]) == 3", "assert countCompleteDayPairs([24, 24, 11, 20]) == 1", "assert countCompleteDayPairs([24, 24, 15, 2]) == 1", "assert countCompleteDayPairs([24, 24, 20, 48]) == 3", "assert countCompleteDayPairs([24, 24, 24, 24]) == 6", "assert countCompleteDayPairs([24, 24, 27, 24]) == 3", "assert countCompleteDayPairs([24, 24, 48, 3]) == 3", "assert countCompleteDayPairs([24, 26, 24, 24]) == 3", "assert countCompleteDayPairs([24, 48, 13, 48]) == 3", "assert countCompleteDayPairs([24, 48, 48, 1]) == 3", "assert countCompleteDayPairs([24, 48, 48, 27]) == 3", "assert countCompleteDayPairs([24, 48, 48, 29]) == 3", "assert countCompleteDayPairs([25, 15, 26, 12]) == 0", "assert countCompleteDayPairs([26, 48, 24, 24]) == 3", "assert countCompleteDayPairs([30, 24, 23, 48]) == 1", "assert countCompleteDayPairs([48, 10, 23, 15]) == 0", "assert countCompleteDayPairs([48, 15, 15, 24]) == 1", "assert countCompleteDayPairs([48, 16, 48, 24]) == 3", "assert countCompleteDayPairs([48, 19, 48, 24]) == 3", "assert countCompleteDayPairs([48, 24, 29, 24]) == 3", "assert countCompleteDayPairs([48, 24, 48, 17]) == 3", "assert countCompleteDayPairs([48, 24, 48, 48]) == 6", "assert countCompleteDayPairs([48, 25, 24, 48]) == 3", "assert countCompleteDayPairs([48, 25, 48, 27]) == 1", "assert countCompleteDayPairs([48, 26, 48, 1]) == 1", "assert countCompleteDayPairs([48, 48, 1, 11]) == 1", "assert countCompleteDayPairs([48, 48, 17, 1]) == 1", "assert countCompleteDayPairs([48, 48, 48, 48]) == 6", "assert countCompleteDayPairs([2, 48, 18, 5, 48]) == 1", "assert countCompleteDayPairs([2, 48, 48, 27, 4]) == 1", "assert countCompleteDayPairs([3, 3, 48, 48, 24]) == 3", "assert countCompleteDayPairs([4, 9, 9, 48, 24]) == 1", "assert countCompleteDayPairs([5, 24, 4, 48, 23]) == 1", "assert countCompleteDayPairs([5, 48, 48, 20, 48]) == 3", "assert countCompleteDayPairs([7, 18, 48, 18, 7]) == 0", "assert countCompleteDayPairs([8, 11, 48, 24, 29]) == 1", "assert countCompleteDayPairs([9, 24, 2, 7, 5]) == 0", "assert countCompleteDayPairs([11, 24, 6, 19, 13]) == 1", "assert countCompleteDayPairs([11, 48, 11, 25, 15]) == 0", "assert countCompleteDayPairs([14, 20, 24, 8, 48]) == 1", "assert countCompleteDayPairs([14, 24, 11, 4, 3]) == 0", "assert countCompleteDayPairs([15, 16, 48, 14, 14]) == 0", "assert countCompleteDayPairs([15, 20, 16, 24, 48]) == 1", "assert countCompleteDayPairs([16, 18, 48, 25, 8]) == 1", "assert countCompleteDayPairs([16, 29, 11, 28, 22]) == 0", "assert countCompleteDayPairs([21, 20, 30, 14, 26]) == 0", "assert countCompleteDayPairs([23, 48, 21, 48, 20]) == 1", "assert countCompleteDayPairs([24, 2, 23, 48, 25]) == 2", "assert countCompleteDayPairs([24, 3, 48, 48, 24]) == 6", "assert countCompleteDayPairs([24, 5, 29, 28, 48]) == 1", "assert countCompleteDayPairs([24, 6, 5, 3, 24]) == 1", "assert countCompleteDayPairs([24, 17, 24, 23, 24]) == 3", "assert countCompleteDayPairs([24, 18, 25, 24, 48]) == 3", "assert countCompleteDayPairs([24, 24, 11, 24, 22]) == 3", "assert countCompleteDayPairs([24, 24, 15, 48, 24]) == 6", "assert countCompleteDayPairs([24, 24, 24, 24, 20]) == 6", "assert countCompleteDayPairs([24, 24, 24, 48, 24]) == 10", "assert countCompleteDayPairs([24, 24, 48, 10, 10]) == 3", "assert countCompleteDayPairs([24, 28, 24, 24, 24]) == 6", "assert countCompleteDayPairs([24, 48, 8, 19, 5]) == 2", "assert countCompleteDayPairs([24, 48, 22, 22, 24]) == 3", "assert countCompleteDayPairs([24, 48, 25, 26, 24]) == 3", "assert countCompleteDayPairs([24, 48, 28, 48, 24]) == 6", "assert countCompleteDayPairs([27, 8, 6, 15, 48]) == 0", "assert countCompleteDayPairs([27, 48, 10, 48, 24]) == 3", "assert countCompleteDayPairs([28, 1, 17, 48, 48]) == 1", "assert countCompleteDayPairs([48, 6, 4, 21, 24]) == 1", "assert countCompleteDayPairs([48, 6, 11, 24, 15]) == 1", "assert countCompleteDayPairs([48, 9, 6, 24, 17]) == 1", "assert countCompleteDayPairs([48, 11, 12, 28, 26]) == 0", "assert countCompleteDayPairs([48, 16, 11, 25, 48]) == 1", "assert countCompleteDayPairs([48, 16, 24, 14, 48]) == 3", "assert countCompleteDayPairs([48, 20, 48, 48, 1]) == 3", "assert countCompleteDayPairs([48, 21, 28, 28, 48]) == 1", "assert countCompleteDayPairs([48, 24, 16, 48, 24]) == 6", "assert countCompleteDayPairs([48, 24, 21, 2, 24]) == 3", "assert countCompleteDayPairs([48, 24, 24, 19, 14]) == 3", "assert countCompleteDayPairs([48, 24, 24, 24, 26]) == 6", "assert countCompleteDayPairs([48, 28, 25, 48, 24]) == 3", "assert countCompleteDayPairs([48, 48, 6, 24, 9]) == 3", "assert countCompleteDayPairs([48, 48, 24, 48, 26]) == 6", "assert countCompleteDayPairs([1, 17, 24, 24, 48, 48]) == 6", "assert countCompleteDayPairs([2, 18, 24, 48, 28, 48]) == 3", "assert countCompleteDayPairs([2, 27, 24, 24, 48, 12]) == 3", "assert countCompleteDayPairs([3, 17, 29, 48, 13, 48]) == 1", "assert countCompleteDayPairs([4, 24, 8, 24, 11, 25]) == 1", "assert countCompleteDayPairs([5, 2, 48, 18, 1, 6]) == 1", "assert countCompleteDayPairs([5, 4, 4, 21, 28, 48]) == 0", "assert countCompleteDayPairs([5, 9, 24, 9, 24, 26]) == 1", "assert countCompleteDayPairs([6, 6, 48, 48, 15, 24]) == 3", "assert countCompleteDayPairs([6, 17, 4, 7, 3, 4]) == 1", "assert countCompleteDayPairs([7, 1, 48, 48, 16, 24]) == 3", "assert countCompleteDayPairs([8, 5, 4, 48, 48, 24]) == 3", "assert countCompleteDayPairs([8, 13, 24, 1, 1, 22]) == 0", "assert countCompleteDayPairs([9, 27, 24, 24, 48, 48]) == 6", "assert countCompleteDayPairs([9, 48, 24, 24, 7, 19]) == 3", "assert countCompleteDayPairs([10, 1, 17, 24, 30, 24]) == 1", "assert countCompleteDayPairs([10, 10, 23, 24, 48, 5]) == 1", "assert countCompleteDayPairs([11, 3, 28, 48, 6, 25]) == 0", "assert countCompleteDayPairs([11, 5, 48, 48, 48, 48]) == 6", "assert countCompleteDayPairs([11, 22, 2, 25, 19, 2]) == 2", "assert countCompleteDayPairs([11, 25, 8, 48, 25, 21]) == 0", "assert countCompleteDayPairs([12, 6, 24, 24, 27, 48]) == 3", "assert countCompleteDayPairs([12, 15, 26, 24, 24, 7]) == 1", "assert countCompleteDayPairs([15, 8, 48, 48, 48, 17]) == 3", "assert countCompleteDayPairs([16, 12, 6, 9, 7, 48]) == 0", "assert countCompleteDayPairs([16, 26, 48, 6, 4, 48]) == 1", "assert countCompleteDayPairs([18, 24, 48, 24, 24, 48]) == 10", "assert countCompleteDayPairs([18, 28, 10, 48, 14, 24]) == 2", "assert countCompleteDayPairs([20, 30, 48, 48, 10, 5]) == 1", "assert countCompleteDayPairs([20, 48, 48, 25, 48, 24]) == 6", "assert countCompleteDayPairs([24, 3, 48, 24, 24, 48]) == 10", "assert countCompleteDayPairs([24, 15, 5, 24, 24, 18]) == 3", "assert countCompleteDayPairs([24, 15, 48, 48, 48, 48]) == 10", "assert countCompleteDayPairs([24, 20, 3, 24, 21, 48]) == 4", "assert countCompleteDayPairs([24, 24, 15, 48, 24, 4]) == 6", "assert countCompleteDayPairs([24, 27, 48, 11, 6, 24]) == 3", "assert countCompleteDayPairs([24, 48, 1, 48, 18, 30]) == 4", "assert countCompleteDayPairs([24, 48, 24, 3, 21, 17]) == 4", "assert countCompleteDayPairs([24, 48, 24, 27, 48, 7]) == 6", "assert countCompleteDayPairs([24, 48, 48, 21, 24, 14]) == 6", "assert countCompleteDayPairs([28, 26, 48, 24, 24, 24]) == 6", "assert countCompleteDayPairs([30, 9, 17, 24, 13, 9]) == 0", "assert countCompleteDayPairs([30, 24, 18, 48, 48, 5]) == 4", "assert countCompleteDayPairs([48, 4, 24, 24, 28, 24]) == 6", "assert countCompleteDayPairs([48, 9, 24, 24, 8, 24]) == 6", "assert countCompleteDayPairs([48, 13, 13, 26, 1, 48]) == 1", "assert countCompleteDayPairs([48, 18, 4, 27, 9, 48]) == 1", "assert countCompleteDayPairs([48, 19, 24, 48, 48, 48]) == 10", "assert countCompleteDayPairs([48, 24, 17, 48, 48, 24]) == 10", "assert countCompleteDayPairs([48, 24, 24, 15, 48, 48]) == 10", "assert countCompleteDayPairs([48, 24, 24, 24, 28, 25]) == 6", "assert countCompleteDayPairs([48, 24, 25, 13, 48, 48]) == 6", "assert countCompleteDayPairs([48, 28, 48, 24, 1, 24]) == 6", "assert countCompleteDayPairs([48, 29, 1, 24, 24, 48]) == 6", "assert countCompleteDayPairs([48, 48, 11, 11, 24, 24]) == 6", "assert countCompleteDayPairs([48, 48, 11, 24, 20, 12]) == 3", "assert countCompleteDayPairs([48, 48, 23, 48, 24, 21]) == 6", "assert countCompleteDayPairs([48, 48, 24, 21, 24, 24]) == 10", "assert countCompleteDayPairs([48, 48, 48, 16, 22, 24]) == 6", "assert countCompleteDayPairs([1, 16, 24, 48, 48, 48, 48]) == 10", "assert countCompleteDayPairs([2, 48, 15, 12, 24, 24, 28]) == 3", "assert countCompleteDayPairs([2, 48, 24, 6, 16, 19, 48]) == 3", "assert countCompleteDayPairs([3, 48, 24, 48, 24, 48, 24]) == 15", "assert countCompleteDayPairs([5, 20, 48, 15, 48, 48, 48]) == 6", "assert countCompleteDayPairs([6, 12, 24, 22, 48, 48, 8]) == 3", "assert countCompleteDayPairs([7, 48, 11, 21, 21, 23, 24]) == 1", "assert countCompleteDayPairs([9, 24, 20, 48, 48, 48, 25]) == 6", "assert countCompleteDayPairs([10, 48, 48, 24, 9, 48, 26]) == 6", "assert countCompleteDayPairs([11, 1, 9, 12, 4, 17, 4]) == 0", "assert countCompleteDayPairs([11, 48, 48, 24, 19, 10, 48]) == 6", "assert countCompleteDayPairs([12, 25, 48, 18, 19, 24, 48]) == 3", "assert countCompleteDayPairs([13, 23, 48, 21, 48, 48, 28]) == 3", "assert countCompleteDayPairs([13, 26, 17, 24, 24, 16, 9]) == 1", "assert countCompleteDayPairs([15, 13, 9, 22, 48, 24, 24]) == 4", "assert countCompleteDayPairs([17, 2, 5, 48, 24, 48, 24]) == 6", "assert countCompleteDayPairs([17, 48, 17, 14, 18, 48, 48]) == 3", "assert countCompleteDayPairs([18, 48, 12, 19, 24, 30, 24]) == 4", "assert countCompleteDayPairs([20, 25, 24, 24, 24, 18, 6]) == 4", "assert countCompleteDayPairs([21, 1, 6, 6, 21, 18, 24]) == 2", "assert countCompleteDayPairs([22, 5, 16, 17, 18, 15, 18]) == 0", "assert countCompleteDayPairs([23, 22, 27, 24, 48, 24, 24]) == 6", "assert countCompleteDayPairs([23, 30, 25, 24, 24, 20, 14]) == 2", "assert countCompleteDayPairs([24, 2, 5, 27, 48, 11, 48]) == 3", "assert countCompleteDayPairs([24, 11, 22, 21, 24, 10, 24]) == 3", "assert countCompleteDayPairs([24, 20, 24, 10, 5, 22, 24]) == 3", "assert countCompleteDayPairs([24, 21, 24, 48, 23, 48, 24]) == 10", "assert countCompleteDayPairs([24, 24, 22, 24, 17, 24, 24]) == 10", "assert countCompleteDayPairs([24, 24, 48, 17, 24, 48, 48]) == 15", "assert countCompleteDayPairs([24, 25, 8, 5, 24, 48, 24]) == 6", "assert countCompleteDayPairs([24, 29, 24, 1, 48, 48, 48]) == 10", "assert countCompleteDayPairs([24, 30, 24, 48, 20, 14, 24]) == 6", "assert countCompleteDayPairs([24, 48, 2, 48, 48, 19, 16]) == 6", "assert countCompleteDayPairs([24, 48, 18, 29, 24, 30, 24]) == 7", "assert countCompleteDayPairs([24, 48, 24, 29, 48, 4, 24]) == 10", "assert countCompleteDayPairs([24, 48, 48, 24, 48, 48, 48]) == 21", "assert countCompleteDayPairs([24, 48, 48, 26, 24, 26, 18]) == 6", "assert countCompleteDayPairs([24, 48, 48, 48, 11, 12, 30]) == 6", "assert countCompleteDayPairs([25, 48, 24, 18, 8, 24, 24]) == 6", "assert countCompleteDayPairs([26, 5, 25, 48, 10, 23, 14]) == 2", "assert countCompleteDayPairs([27, 27, 13, 19, 2, 30, 48]) == 0", "assert countCompleteDayPairs([27, 48, 24, 48, 48, 2, 24]) == 10", "assert countCompleteDayPairs([28, 24, 17, 12, 24, 24, 48]) == 6", "assert countCompleteDayPairs([29, 10, 14, 24, 6, 10, 24]) == 3", "assert countCompleteDayPairs([29, 21, 48, 48, 24, 29, 9]) == 3", "assert countCompleteDayPairs([30, 24, 24, 30, 29, 48, 15]) == 3", "assert countCompleteDayPairs([48, 1, 48, 48, 48, 24, 48]) == 15", "assert countCompleteDayPairs([48, 7, 25, 4, 22, 48, 24]) == 3", "assert countCompleteDayPairs([48, 8, 2, 48, 30, 24, 24]) == 6", "assert countCompleteDayPairs([48, 13, 10, 2, 14, 18, 16]) == 1", "assert countCompleteDayPairs([48, 21, 7, 48, 24, 30, 13]) == 3", "assert countCompleteDayPairs([48, 24, 24, 30, 28, 15, 48]) == 6", "assert countCompleteDayPairs([48, 24, 26, 25, 24, 6, 17]) == 3", "assert countCompleteDayPairs([48, 24, 48, 48, 16, 24, 7]) == 10", "assert countCompleteDayPairs([48, 30, 4, 29, 10, 14, 11]) == 1", "assert countCompleteDayPairs([48, 48, 15, 12, 12, 48, 48]) == 7", "assert countCompleteDayPairs([48, 48, 24, 6, 48, 48, 1]) == 10", "assert countCompleteDayPairs([48, 48, 24, 16, 48, 48, 24]) == 15", "assert countCompleteDayPairs([48, 48, 24, 48, 24, 13, 48]) == 15", "assert countCompleteDayPairs([48, 48, 26, 26, 48, 48, 30]) == 6", "assert countCompleteDayPairs([48, 48, 48, 24, 24, 25, 24]) == 15", "assert countCompleteDayPairs([48, 48, 48, 48, 25, 48, 22]) == 10", "assert countCompleteDayPairs([2, 21, 19, 48, 24, 6, 24, 19]) == 3", "assert countCompleteDayPairs([3, 24, 48, 48, 48, 24, 15, 18]) == 10", "assert countCompleteDayPairs([3, 48, 13, 13, 48, 24, 7, 23]) == 3", "assert countCompleteDayPairs([5, 3, 48, 9, 24, 24, 21, 48]) == 7", "assert countCompleteDayPairs([5, 12, 3, 9, 14, 12, 10, 13]) == 2", "assert countCompleteDayPairs([5, 19, 48, 24, 21, 24, 3, 24]) == 8", "assert countCompleteDayPairs([9, 4, 48, 24, 21, 48, 48, 4]) == 6", "assert countCompleteDayPairs([10, 48, 4, 3, 20, 29, 24, 6]) == 2", "assert countCompleteDayPairs([11, 23, 24, 11, 48, 25, 9, 9]) == 2", "assert countCompleteDayPairs([13, 13, 1, 7, 48, 48, 23, 24]) == 4", "assert countCompleteDayPairs([14, 17, 17, 22, 2, 21, 16, 3]) == 2", "assert countCompleteDayPairs([15, 20, 30, 24, 2, 8, 48, 24]) == 3", "assert countCompleteDayPairs([15, 24, 25, 48, 24, 23, 48, 17]) == 7", "assert countCompleteDayPairs([15, 24, 48, 24, 12, 24, 25, 17]) == 6", "assert countCompleteDayPairs([16, 7, 7, 13, 19, 19, 24, 48]) == 1", "assert countCompleteDayPairs([18, 2, 48, 48, 2, 48, 48, 5]) == 6", "assert countCompleteDayPairs([18, 18, 48, 19, 24, 18, 48, 48]) == 6", "assert countCompleteDayPairs([19, 14, 48, 27, 8, 24, 18, 6]) == 2", "assert countCompleteDayPairs([19, 24, 25, 19, 15, 48, 16, 24]) == 3", "assert countCompleteDayPairs([21, 28, 24, 3, 19, 14, 24, 26]) == 2", "assert countCompleteDayPairs([22, 5, 22, 48, 9, 13, 18, 48]) == 1", "assert countCompleteDayPairs([23, 4, 24, 5, 24, 27, 28, 48]) == 3", "assert countCompleteDayPairs([23, 30, 24, 24, 48, 7, 29, 6]) == 3", "assert countCompleteDayPairs([24, 5, 12, 17, 24, 24, 7, 24]) == 7", "assert countCompleteDayPairs([24, 9, 10, 48, 25, 24, 48, 24]) == 10", "assert countCompleteDayPairs([24, 13, 24, 48, 48, 19, 24, 24]) == 15", "assert countCompleteDayPairs([24, 24, 3, 28, 26, 27, 48, 24]) == 6", "assert countCompleteDayPairs([24, 24, 18, 48, 24, 17, 11, 24]) == 10", "assert countCompleteDayPairs([24, 24, 20, 48, 19, 24, 22, 48]) == 10", "assert countCompleteDayPairs([24, 24, 48, 20, 48, 25, 12, 48]) == 10", "assert countCompleteDayPairs([24, 24, 48, 27, 48, 48, 5, 24]) == 15", "assert countCompleteDayPairs([24, 30, 4, 8, 28, 25, 48, 48]) == 3", "assert countCompleteDayPairs([24, 48, 19, 48, 23, 1, 48, 24]) == 11", "assert countCompleteDayPairs([24, 48, 24, 48, 7, 48, 8, 21]) == 10", "assert countCompleteDayPairs([24, 48, 48, 19, 48, 23, 7, 11]) == 6", "assert countCompleteDayPairs([24, 48, 48, 48, 25, 24, 24, 24]) == 21", "assert countCompleteDayPairs([25, 15, 24, 24, 11, 48, 11, 2]) == 3", "assert countCompleteDayPairs([26, 8, 24, 2, 12, 24, 24, 21]) == 3", "assert countCompleteDayPairs([27, 24, 24, 3, 48, 24, 24, 2]) == 10", "assert countCompleteDayPairs([27, 48, 21, 6, 23, 24, 24, 48]) == 7", "assert countCompleteDayPairs([28, 24, 14, 13, 27, 7, 48, 30]) == 1", "assert countCompleteDayPairs([29, 24, 17, 24, 7, 1, 19, 24]) == 5", "assert countCompleteDayPairs([29, 48, 8, 19, 48, 21, 24, 14]) == 4", "assert countCompleteDayPairs([48, 1, 28, 19, 27, 48, 11, 10]) == 1", "assert countCompleteDayPairs([48, 5, 48, 48, 12, 48, 48, 4]) == 10", "assert countCompleteDayPairs([48, 10, 3, 30, 24, 48, 3, 48]) == 6", "assert countCompleteDayPairs([48, 12, 17, 48, 48, 48, 3, 48]) == 10", "assert countCompleteDayPairs([48, 16, 30, 24, 6, 9, 24, 48]) == 6", "assert countCompleteDayPairs([48, 18, 19, 21, 24, 24, 17, 24]) == 6", "assert countCompleteDayPairs([48, 22, 24, 28, 9, 48, 22, 25]) == 3", "assert countCompleteDayPairs([48, 24, 24, 48, 24, 27, 26, 24]) == 15", "assert countCompleteDayPairs([48, 24, 48, 48, 16, 24, 24, 30]) == 15", "assert countCompleteDayPairs([48, 24, 48, 48, 24, 28, 5, 14]) == 10", "assert countCompleteDayPairs([48, 27, 3, 7, 25, 24, 24, 14]) == 3", "assert countCompleteDayPairs([48, 48, 20, 30, 22, 3, 20, 20]) == 1", "assert countCompleteDayPairs([48, 48, 24, 14, 17, 24, 24, 13]) == 10", "assert countCompleteDayPairs([48, 48, 24, 48, 24, 24, 24, 24]) == 28", "assert countCompleteDayPairs([6, 24, 24, 15, 17, 24, 24, 9, 24]) == 11", "assert countCompleteDayPairs([6, 26, 48, 48, 19, 48, 19, 18, 48]) == 7", "assert countCompleteDayPairs([6, 48, 24, 48, 24, 48, 24, 48, 48]) == 28", "assert countCompleteDayPairs([7, 23, 24, 27, 48, 7, 1, 6, 48]) == 4", "assert countCompleteDayPairs([7, 24, 24, 8, 48, 24, 20, 11, 48]) == 10", "assert countCompleteDayPairs([9, 2, 18, 24, 24, 24, 11, 48, 10]) == 6", "assert countCompleteDayPairs([9, 48, 48, 21, 24, 22, 28, 48, 28]) == 6", "assert countCompleteDayPairs([10, 48, 23, 28, 24, 24, 24, 24, 21]) == 10", "assert countCompleteDayPairs([10, 48, 29, 14, 24, 48, 48, 48, 24]) == 16", "assert countCompleteDayPairs([11, 48, 48, 16, 24, 10, 9, 27, 48]) == 6", "assert countCompleteDayPairs([12, 24, 18, 24, 3, 14, 11, 48, 24]) == 6", "assert countCompleteDayPairs([12, 24, 48, 23, 12, 12, 10, 48, 5]) == 6", "assert countCompleteDayPairs([13, 1, 30, 48, 9, 24, 24, 17, 30]) == 3", "assert countCompleteDayPairs([20, 10, 48, 25, 48, 23, 24, 48, 48]) == 11", "assert countCompleteDayPairs([20, 20, 15, 16, 11, 20, 10, 5, 18]) == 0", "assert countCompleteDayPairs([20, 24, 28, 24, 5, 48, 24, 24, 13]) == 11", "assert countCompleteDayPairs([21, 21, 16, 19, 21, 10, 6, 2, 8]) == 1", "assert countCompleteDayPairs([21, 22, 1, 6, 24, 48, 21, 48, 24]) == 6", "assert countCompleteDayPairs([23, 18, 19, 14, 15, 6, 14, 21, 15]) == 1", "assert countCompleteDayPairs([24, 2, 30, 25, 8, 24, 48, 48, 23]) == 7", "assert countCompleteDayPairs([24, 4, 2, 48, 48, 2, 18, 48, 16]) == 6", "assert countCompleteDayPairs([24, 5, 7, 24, 48, 14, 29, 29, 24]) == 6", "assert countCompleteDayPairs([24, 6, 48, 2, 19, 16, 24, 1, 48]) == 6", "assert countCompleteDayPairs([24, 7, 24, 48, 24, 12, 48, 48, 24]) == 21", "assert countCompleteDayPairs([24, 14, 8, 16, 23, 2, 1, 24, 20]) == 3", "assert countCompleteDayPairs([24, 24, 10, 24, 25, 48, 48, 20, 14]) == 11", "assert countCompleteDayPairs([24, 27, 19, 24, 24, 24, 4, 48, 24]) == 15", "assert countCompleteDayPairs([24, 29, 48, 21, 4, 30, 8, 48, 48]) == 6", "assert countCompleteDayPairs([24, 48, 8, 21, 48, 24, 48, 24, 1]) == 15", "assert countCompleteDayPairs([24, 48, 12, 3, 48, 4, 5, 26, 22]) == 4", "assert countCompleteDayPairs([24, 48, 14, 21, 24, 48, 14, 5, 24]) == 10", "assert countCompleteDayPairs([24, 48, 25, 18, 21, 8, 48, 48, 15]) == 6", "assert countCompleteDayPairs([24, 48, 48, 15, 20, 24, 48, 48, 48]) == 21", "assert countCompleteDayPairs([24, 48, 48, 48, 48, 48, 48, 48, 23]) == 28", "assert countCompleteDayPairs([26, 30, 24, 17, 48, 25, 24, 29, 5]) == 3", "assert countCompleteDayPairs([29, 24, 48, 13, 48, 24, 48, 17, 14]) == 10", "assert countCompleteDayPairs([48, 1, 4, 18, 29, 48, 48, 4, 24]) == 6", "assert countCompleteDayPairs([48, 2, 48, 8, 24, 24, 48, 48, 48]) == 21", "assert countCompleteDayPairs([48, 2, 48, 18, 20, 24, 6, 48, 48]) == 11", "assert countCompleteDayPairs([48, 6, 48, 24, 24, 24, 24, 24, 24]) == 28", "assert countCompleteDayPairs([48, 13, 12, 48, 18, 24, 48, 48, 23]) == 10", "assert countCompleteDayPairs([48, 15, 1, 24, 24, 24, 2, 12, 2]) == 6", "assert countCompleteDayPairs([48, 18, 29, 24, 48, 26, 2, 48, 17]) == 6", "assert countCompleteDayPairs([48, 24, 24, 48, 10, 24, 24, 12, 18]) == 15", "assert countCompleteDayPairs([48, 24, 48, 1, 48, 29, 15, 2, 24]) == 10", "assert countCompleteDayPairs([48, 48, 12, 11, 17, 24, 48, 30, 13]) == 7", "assert countCompleteDayPairs([48, 48, 13, 7, 16, 24, 24, 48, 23]) == 10", "assert countCompleteDayPairs([48, 48, 25, 18, 29, 10, 1, 24, 22]) == 3", "assert countCompleteDayPairs([48, 48, 48, 28, 28, 48, 48, 18, 24]) == 15", "assert countCompleteDayPairs([1, 2, 18, 11, 48, 16, 24, 4, 48, 17]) == 3", "assert countCompleteDayPairs([1, 48, 6, 24, 21, 3, 17, 15, 24, 4]) == 4", "assert countCompleteDayPairs([1, 48, 12, 10, 24, 14, 3, 7, 4, 9]) == 2", "assert countCompleteDayPairs([2, 3, 4, 6, 4, 24, 24, 20, 16, 23]) == 3", "assert countCompleteDayPairs([2, 11, 12, 6, 19, 3, 20, 15, 16, 6]) == 0", "assert countCompleteDayPairs([2, 24, 24, 48, 9, 24, 20, 9, 48, 24]) == 15", "assert countCompleteDayPairs([2, 48, 48, 3, 24, 48, 6, 48, 24, 26]) == 15", "assert countCompleteDayPairs([3, 48, 24, 48, 24, 9, 2, 23, 26, 48]) == 10", "assert countCompleteDayPairs([6, 8, 3, 48, 48, 24, 24, 29, 22, 30]) == 6", "assert countCompleteDayPairs([6, 24, 24, 24, 48, 16, 21, 48, 48, 24]) == 21", "assert countCompleteDayPairs([6, 24, 48, 24, 13, 48, 23, 2, 24, 24]) == 15", "assert countCompleteDayPairs([7, 24, 24, 26, 48, 24, 24, 48, 24, 24]) == 28", "assert countCompleteDayPairs([7, 48, 7, 48, 29, 21, 15, 25, 48, 48]) == 6", "assert countCompleteDayPairs([8, 14, 19, 24, 24, 24, 24, 2, 48, 24]) == 15", "assert countCompleteDayPairs([11, 48, 21, 24, 48, 9, 6, 24, 48, 18]) == 11", "assert countCompleteDayPairs([12, 48, 23, 1, 8, 8, 18, 24, 24, 24]) == 7", "assert countCompleteDayPairs([14, 24, 2, 4, 48, 24, 48, 24, 5, 21]) == 10", "assert countCompleteDayPairs([14, 29, 48, 21, 24, 11, 24, 18, 48, 10]) == 7", "assert countCompleteDayPairs([19, 48, 9, 24, 28, 48, 24, 48, 21, 24]) == 15", "assert countCompleteDayPairs([20, 24, 24, 24, 24, 23, 48, 24, 14, 48]) == 21", "assert countCompleteDayPairs([21, 19, 48, 48, 24, 48, 48, 48, 23, 16]) == 15", "assert countCompleteDayPairs([22, 2, 48, 48, 24, 48, 24, 48, 24, 48]) == 29", "assert countCompleteDayPairs([22, 9, 18, 24, 48, 17, 24, 5, 48, 17]) == 6", "assert countCompleteDayPairs([23, 21, 20, 21, 18, 7, 10, 24, 12, 16]) == 0", "assert countCompleteDayPairs([23, 21, 24, 15, 4, 48, 24, 12, 23, 48]) == 6", "assert countCompleteDayPairs([24, 11, 48, 48, 48, 26, 48, 5, 1, 24]) == 15", "assert countCompleteDayPairs([24, 15, 24, 48, 25, 24, 48, 48, 24, 30]) == 21", "assert countCompleteDayPairs([24, 17, 26, 24, 24, 30, 24, 24, 48, 48]) == 21", "assert countCompleteDayPairs([24, 23, 48, 24, 24, 48, 48, 24, 8, 2]) == 21", "assert countCompleteDayPairs([24, 24, 7, 24, 15, 17, 48, 24, 24, 30]) == 16", "assert countCompleteDayPairs([24, 25, 48, 1, 17, 10, 8, 27, 24, 48]) == 6", "assert countCompleteDayPairs([24, 25, 48, 48, 48, 48, 48, 7, 27, 24]) == 21", "assert countCompleteDayPairs([24, 27, 4, 2, 48, 5, 20, 48, 24, 19]) == 8", "assert countCompleteDayPairs([24, 27, 24, 10, 24, 24, 48, 6, 24, 24]) == 21", "assert countCompleteDayPairs([24, 30, 48, 24, 24, 24, 24, 6, 48, 3]) == 21", "assert countCompleteDayPairs([24, 48, 2, 48, 24, 48, 24, 20, 48, 30]) == 21", "assert countCompleteDayPairs([24, 48, 20, 24, 17, 24, 48, 48, 24, 5]) == 21", "assert countCompleteDayPairs([24, 48, 24, 24, 24, 20, 24, 19, 24, 48]) == 28", "assert countCompleteDayPairs([24, 48, 24, 29, 24, 24, 7, 7, 4, 48]) == 15", "assert countCompleteDayPairs([25, 4, 24, 15, 48, 48, 48, 24, 3, 48]) == 15", "assert countCompleteDayPairs([25, 29, 28, 24, 48, 48, 9, 9, 21, 3]) == 4", "assert countCompleteDayPairs([26, 24, 15, 4, 24, 5, 48, 23, 24, 24]) == 10", "assert countCompleteDayPairs([26, 30, 24, 48, 24, 9, 24, 48, 48, 15]) == 16", "assert countCompleteDayPairs([30, 14, 8, 11, 48, 16, 48, 48, 24, 24]) == 11", "assert countCompleteDayPairs([48, 3, 28, 3, 48, 28, 1, 24, 12, 24]) == 6", "assert countCompleteDayPairs([48, 5, 2, 21, 24, 9, 48, 48, 5, 48]) == 10", "assert countCompleteDayPairs([48, 5, 24, 16, 24, 19, 6, 3, 48, 24]) == 11", "assert countCompleteDayPairs([48, 9, 19, 24, 48, 48, 13, 48, 4, 24]) == 15", "assert countCompleteDayPairs([48, 9, 24, 7, 48, 24, 25, 24, 12, 48]) == 15", "assert countCompleteDayPairs([48, 15, 9, 4, 2, 10, 27, 3, 24, 2]) == 2", "assert countCompleteDayPairs([48, 20, 24, 24, 48, 24, 48, 24, 6, 24]) == 28", "assert countCompleteDayPairs([48, 24, 4, 48, 24, 2, 3, 24, 24, 22]) == 16", "assert countCompleteDayPairs([48, 24, 8, 24, 18, 2, 14, 24, 1, 15]) == 6", "assert countCompleteDayPairs([48, 24, 10, 12, 48, 24, 24, 13, 48, 19]) == 15", "assert countCompleteDayPairs([48, 24, 15, 48, 13, 48, 48, 21, 48, 4]) == 15", "assert countCompleteDayPairs([48, 24, 23, 48, 12, 48, 24, 24, 24, 24]) == 28", "assert countCompleteDayPairs([48, 24, 24, 24, 9, 48, 12, 13, 24, 24]) == 21", "assert countCompleteDayPairs([48, 24, 25, 24, 48, 24, 13, 14, 4, 24]) == 15", "assert countCompleteDayPairs([48, 24, 28, 20, 27, 26, 48, 24, 14, 48]) == 11", "assert countCompleteDayPairs([48, 24, 48, 5, 24, 48, 6, 17, 13, 48]) == 15", "assert countCompleteDayPairs([48, 26, 48, 24, 24, 24, 48, 24, 27, 24]) == 28", "assert countCompleteDayPairs([48, 29, 48, 2, 24, 24, 24, 5, 1, 48]) == 15", "assert countCompleteDayPairs([48, 48, 24, 6, 14, 48, 24, 48, 23, 24]) == 21", "assert countCompleteDayPairs([48, 48, 24, 24, 48, 24, 29, 12, 24, 48]) == 28", "assert countCompleteDayPairs([48, 48, 24, 30, 48, 16, 48, 20, 48, 27]) == 15", "assert countCompleteDayPairs([48, 48, 48, 24, 9, 22, 14, 14, 48, 48]) == 15", "assert countCompleteDayPairs([48, 48, 48, 24, 24, 11, 48, 30, 24, 24]) == 28", "assert countCompleteDayPairs([48, 48, 48, 48, 48, 24, 27, 24, 7, 12]) == 21", "assert countCompleteDayPairs([17, 16, 4, 16, 22, 22, 15, 6, 12, 6, 8]) == 2", "assert countCompleteDayPairs([19, 9, 20, 7, 7, 21, 1, 3, 24, 6, 12]) == 1", "assert countCompleteDayPairs([9, 12, 22, 18, 15, 5, 21, 20, 14, 17, 23, 15]) == 2", "assert countCompleteDayPairs([21, 10, 17, 6, 10, 7, 11, 12, 23, 19, 5, 12]) == 3", "assert countCompleteDayPairs([4, 4, 12, 2, 14, 8, 7, 13, 21, 13, 4, 4, 18, 14]) == 0", "assert countCompleteDayPairs([3, 17, 19, 18, 1, 16, 18, 9, 21, 21, 17, 3, 13, 12, 2]) == 4", "assert countCompleteDayPairs([11, 2, 2, 2, 12, 21, 23, 22, 16, 12, 18, 11, 14, 1, 1]) == 6", "assert countCompleteDayPairs([2, 15, 23, 7, 19, 2, 3, 21, 10, 15, 14, 5, 6, 23, 1, 23]) == 6", "assert countCompleteDayPairs([12, 22, 23, 2, 13, 14, 21, 11, 11, 7, 12, 4, 23, 15, 3, 6]) == 5", "assert countCompleteDayPairs([7, 6, 9, 21, 1, 9, 4, 15, 19, 24, 3, 18, 17, 24, 20, 18, 21]) == 9", "assert countCompleteDayPairs([17, 4, 17, 1, 12, 8, 22, 1, 1, 9, 10, 2, 16, 1, 8, 7, 20]) == 6", "assert countCompleteDayPairs([20, 15, 1, 13, 2, 20, 1, 9, 15, 23, 10, 9, 23, 20, 7, 16, 12]) == 8", "assert countCompleteDayPairs([6, 2, 8, 8, 18, 13, 8, 13, 13, 16, 13, 12, 17, 7, 18, 5, 10, 20]) == 6", "assert countCompleteDayPairs([4, 22, 8, 5, 4, 2, 22, 4, 15, 21, 17, 17, 10, 19, 2, 2, 18, 18, 7]) == 9", "assert countCompleteDayPairs([19, 13, 16, 24, 7, 21, 13, 18, 10, 21, 16, 20, 12, 16, 17, 12, 2, 14, 5]) == 4", "assert countCompleteDayPairs([24, 3, 21, 9, 10, 22, 22, 18, 23, 13, 23, 12, 19, 7, 1, 13, 23, 4, 1]) == 7", "assert countCompleteDayPairs([5, 11, 21, 23, 1, 15, 6, 14, 16, 10, 21, 10, 16, 18, 6, 5, 1, 13, 11, 13]) == 10", "assert countCompleteDayPairs([7, 6, 11, 6, 19, 23, 3, 19, 19, 20, 12, 17, 16, 2, 21, 10, 15, 11, 21, 16]) == 3", "assert countCompleteDayPairs([10, 11, 22, 15, 14, 7, 7, 17, 7, 14, 11, 16, 10, 6, 11, 14, 8, 14, 1, 5]) == 12", "assert countCompleteDayPairs([22, 4, 8, 12, 9, 11, 13, 1, 6, 3, 9, 5, 16, 11, 3, 8, 21, 16, 2, 15, 8]) == 13", "assert countCompleteDayPairs([3, 19, 3, 4, 19, 4, 24, 3, 16, 10, 12, 10, 23, 23, 19, 2, 6, 9, 16, 5, 19, 15, 14, 22, 21, 12, 11]) == 12", "assert countCompleteDayPairs([18, 13, 6, 17, 23, 2, 9, 11, 22, 9, 17, 20, 15, 9, 16, 1, 24, 22, 22, 6, 20, 16, 8, 5, 8, 12, 23]) == 15", "assert countCompleteDayPairs([24, 18, 1, 4, 8, 5, 5, 12, 11, 4, 22, 17, 23, 13, 21, 20, 22, 12, 10, 22, 22, 23, 5, 1, 5, 19, 4]) == 13", "assert countCompleteDayPairs([18, 12, 16, 5, 3, 1, 24, 15, 19, 3, 22, 14, 24, 8, 2, 13, 11, 14, 15, 13, 11, 17, 15, 16, 23, 5, 14, 5]) == 12", "assert countCompleteDayPairs([22, 2, 2, 12, 24, 17, 22, 18, 15, 13, 21, 22, 22, 17, 4, 3, 23, 18, 18, 9, 20, 8, 12, 20, 4, 6, 24, 22]) == 21", "assert countCompleteDayPairs([17, 1, 20, 9, 19, 5, 13, 20, 7, 18, 6, 16, 15, 22, 24, 5, 6, 23, 12, 23, 9, 20, 19, 3, 16, 3, 5, 16, 10]) == 13", "assert countCompleteDayPairs([9, 17, 6, 5, 4, 18, 3, 7, 6, 21, 6, 24, 12, 6, 1, 20, 1, 21, 1, 1, 18, 2, 20, 16, 19, 13, 9, 22, 23, 21]) == 20", "assert countCompleteDayPairs([15, 7, 10, 5, 1, 14, 5, 24, 12, 21, 19, 1, 21, 8, 18, 6, 19, 22, 1, 2, 4, 11, 5, 2, 23, 8, 10, 19, 10, 7]) == 18", "assert countCompleteDayPairs([2, 14, 1, 12, 13, 10, 24, 19, 9, 15, 16, 22, 18, 21, 15, 15, 16, 2, 13, 4, 13, 6, 6, 2, 22, 15, 20, 2, 4, 11, 14]) == 21", "assert countCompleteDayPairs([13, 11, 17, 19, 16, 15, 19, 2, 7, 22, 12, 19, 9, 7, 20, 3, 7, 15, 2, 23, 20, 18, 3, 24, 8, 10, 18, 11, 8, 1, 17]) == 15", "assert countCompleteDayPairs([23, 18, 9, 11, 12, 10, 22, 2, 6, 10, 20, 15, 12, 21, 22, 19, 21, 18, 21, 24, 18, 15, 16, 3, 21, 1, 11, 21, 1, 5, 2, 23, 23]) == 22", "assert countCompleteDayPairs([5, 9, 24, 22, 1, 3, 16, 3, 15, 24, 2, 12, 14, 17, 15, 2, 3, 23, 13, 23, 3, 5, 12, 2, 3, 14, 13, 13, 10, 3, 14, 12, 18, 15]) == 15", "assert countCompleteDayPairs([14, 9, 5, 19, 10, 17, 12, 4, 18, 21, 21, 9, 19, 20, 11, 12, 20, 7, 18, 8, 21, 6, 13, 9, 6, 2, 10, 20, 11, 23, 19, 21, 14, 16, 7]) == 20", "assert countCompleteDayPairs([8, 11, 11, 18, 5, 15, 9, 3, 13, 24, 9, 1, 23, 12, 23, 19, 2, 23, 7, 7, 16, 1, 11, 21, 3, 20, 1, 9, 21, 22, 9, 8, 8, 20, 3, 9]) == 28", "assert countCompleteDayPairs([8, 20, 3, 18, 13, 19, 11, 24, 11, 1, 2, 14, 9, 16, 17, 17, 11, 17, 6, 23, 20, 23, 11, 15, 23, 17, 4, 1, 6, 1, 13, 24, 18, 1, 23, 2]) == 33", "assert countCompleteDayPairs([19, 17, 1, 19, 23, 24, 4, 5, 4, 8, 16, 13, 10, 12, 21, 15, 12, 21, 20, 8, 22, 9, 1, 9, 17, 3, 11, 19, 6, 18, 2, 21, 11, 5, 14, 10]) == 24", "assert countCompleteDayPairs([14, 3, 8, 15, 21, 20, 22, 22, 4, 13, 17, 17, 7, 19, 3, 13, 3, 12, 24, 17, 6, 14, 10, 3, 4, 14, 23, 13, 1, 22, 6, 4, 2, 17, 24, 9, 1]) == 21", "assert countCompleteDayPairs([16, 9, 15, 22, 8, 3, 1, 7, 24, 9, 5, 20, 11, 23, 18, 23, 22, 3, 20, 3, 8, 16, 13, 3, 23, 12, 3, 3, 21, 17, 9, 5, 15, 12, 21, 15, 4]) == 33", "assert countCompleteDayPairs([1, 11, 1, 22, 18, 6, 8, 14, 1, 8, 13, 8, 20, 9, 22, 20, 16, 3, 3, 1, 11, 23, 18, 8, 18, 23, 21, 12, 10, 17, 13, 18, 3, 22, 7, 17, 3, 3]) == 28", "assert countCompleteDayPairs([17, 20, 5, 23, 19, 14, 24, 11, 2, 18, 7, 1, 18, 5, 10, 14, 12, 3, 5, 17, 17, 16, 8, 8, 20, 8, 15, 7, 12, 20, 5, 6, 17, 5, 7, 12, 4, 3]) == 31", "assert countCompleteDayPairs([11, 13, 23, 3, 4, 7, 8, 11, 13, 3, 10, 18, 1, 7, 13, 1, 15, 19, 15, 7, 9, 4, 1, 9, 21, 11, 17, 6, 22, 23, 21, 24, 12, 14, 23, 20, 3, 5, 21, 23]) == 42", "assert countCompleteDayPairs([3, 9, 4, 6, 21, 8, 10, 21, 8, 5, 20, 23, 10, 1, 7, 17, 9, 18, 20, 15, 14, 13, 17, 8, 13, 10, 24, 10, 9, 3, 3, 18, 5, 16, 3, 9, 9, 22, 24, 15, 24]) == 35", "assert countCompleteDayPairs([12, 23, 8, 20, 11, 23, 23, 6, 16, 22, 18, 19, 19, 15, 1, 5, 19, 5, 14, 15, 14, 15, 7, 13, 8, 21, 7, 7, 18, 5, 15, 5, 23, 21, 20, 5, 6, 21, 14, 16, 8]) == 30", "assert countCompleteDayPairs([2, 2, 7, 11, 3, 7, 7, 11, 13, 20, 3, 20, 12, 15, 17, 22, 6, 9, 15, 7, 2, 20, 18, 23, 3, 1, 22, 21, 10, 1, 24, 19, 5, 23, 24, 13, 24, 14, 17, 11, 13, 4]) == 41", "assert countCompleteDayPairs([5, 7, 19, 2, 9, 15, 12, 11, 6, 21, 8, 13, 2, 16, 17, 3, 3, 18, 15, 17, 6, 12, 10, 13, 10, 8, 3, 17, 20, 8, 23, 17, 19, 1, 19, 4, 11, 19, 12, 21, 24, 7]) == 34", "assert countCompleteDayPairs([15, 12, 12, 4, 11, 22, 7, 11, 4, 13, 15, 3, 3, 8, 5, 24, 20, 1, 18, 21, 24, 1, 3, 10, 18, 19, 21, 4, 10, 23, 19, 5, 15, 10, 11, 5, 18, 11, 17, 24, 8, 7]) == 27", "assert countCompleteDayPairs([15, 18, 6, 22, 11, 7, 24, 11, 20, 1, 17, 17, 21, 21, 2, 24, 15, 4, 16, 1, 1, 7, 5, 17, 4, 11, 16, 24, 4, 18, 8, 22, 20, 24, 11, 6, 20, 20, 23, 22, 9, 21]) == 38", "assert countCompleteDayPairs([21, 3, 6, 11, 5, 11, 9, 5, 12, 19, 21, 14, 20, 16, 22, 1, 11, 14, 13, 15, 21, 6, 22, 6, 20, 11, 23, 12, 4, 17, 14, 19, 4, 14, 23, 4, 23, 4, 10, 14, 2, 17]) == 31", "assert countCompleteDayPairs([16, 1, 6, 17, 1, 13, 17, 14, 3, 11, 8, 8, 8, 5, 24, 10, 5, 22, 12, 23, 4, 9, 8, 2, 3, 11, 4, 1, 18, 17, 16, 23, 9, 14, 12, 11, 23, 1, 21, 8, 24, 19, 11]) == 36", "assert countCompleteDayPairs([18, 16, 22, 20, 6, 2, 15, 16, 5, 21, 11, 1, 21, 2, 12, 4, 1, 3, 11, 17, 13, 14, 1, 14, 24, 15, 16, 12, 14, 2, 20, 17, 15, 22, 5, 16, 12, 17, 17, 5, 5, 15, 9]) == 20", "assert countCompleteDayPairs([22, 2, 6, 1, 5, 9, 5, 16, 17, 22, 14, 15, 11, 13, 10, 11, 17, 17, 18, 13, 1, 20, 21, 10, 10, 2, 12, 10, 22, 21, 11, 1, 9, 5, 24, 12, 20, 20, 7, 13, 21, 23, 7]) == 32", "assert countCompleteDayPairs([5, 14, 9, 13, 23, 17, 4, 11, 20, 1, 3, 12, 7, 8, 12, 21, 9, 1, 23, 20, 15, 23, 16, 23, 17, 9, 12, 6, 23, 9, 19, 13, 17, 2, 14, 4, 5, 23, 9, 18, 11, 16, 15, 11]) == 44", "assert countCompleteDayPairs([6, 16, 15, 24, 1, 17, 6, 6, 11, 4, 18, 12, 5, 17, 13, 5, 6, 14, 20, 14, 12, 14, 10, 9, 4, 7, 21, 4, 24, 17, 4, 15, 4, 21, 20, 3, 4, 16, 20, 24, 6, 21, 4, 21, 3, 8, 15, 22]) == 50", "assert countCompleteDayPairs([13, 15, 17, 16, 22, 24, 24, 16, 18, 18, 6, 19, 3, 6, 18, 14, 5, 21, 11, 11, 24, 22, 21, 21, 14, 14, 7, 5, 3, 3, 4, 19, 22, 2, 8, 7, 3, 20, 5, 21, 11, 19, 18, 12, 7, 10, 13, 4]) == 55", "assert countCompleteDayPairs([18, 2, 20, 4, 17, 10, 11, 13, 17, 7, 24, 2, 17, 12, 2, 12, 10, 3, 5, 20, 10, 2, 23, 15, 24, 20, 4, 2, 16, 10, 23, 13, 20, 24, 13, 3, 15, 9, 20, 6, 23, 1, 24, 13, 1, 8, 9, 4]) == 41", "assert countCompleteDayPairs([4, 17, 21, 13, 21, 15, 24, 10, 7, 20, 20, 21, 24, 21, 11, 23, 17, 5, 20, 7, 13, 2, 4, 11, 5, 23, 11, 15, 2, 17, 19, 12, 21, 12, 7, 15, 7, 22, 14, 5, 23, 19, 16, 21, 14, 2, 5, 13, 4]) == 45", "assert countCompleteDayPairs([16, 19, 19, 24, 5, 5, 6, 5, 1, 9, 14, 23, 18, 5, 13, 13, 6, 7, 15, 20, 22, 11, 17, 18, 16, 17, 17, 14, 22, 24, 1, 9, 11, 22, 23, 16, 18, 7, 19, 14, 22, 16, 24, 19, 12, 22, 9, 14, 20]) == 42", "assert countCompleteDayPairs([11, 22, 16, 23, 9, 5, 13, 17, 11, 2, 6, 14, 18, 7, 20, 8, 16, 22, 4, 17, 19, 20, 16, 9, 9, 8, 7, 19, 11, 22, 16, 20, 8, 18, 11, 23, 6, 19, 18, 2, 11, 21, 10, 15, 5, 2, 12, 6, 10, 23]) == 53", "assert countCompleteDayPairs([10, 2, 17, 9, 9, 3, 17, 13, 1, 1, 1, 8, 10, 19, 21, 6, 9, 18, 7, 17, 8, 15, 5, 15, 22, 3, 16, 20, 20, 14, 2, 21, 24, 4, 22, 14, 2, 23, 1, 22, 5, 24, 18, 8, 24, 16, 21, 10, 8, 2, 6]) == 56", "assert countCompleteDayPairs([21, 20, 2, 17, 4, 22, 15, 14, 6, 3, 1, 6, 10, 13, 14, 3, 18, 11, 10, 13, 16, 12, 17, 24, 8, 8, 14, 21, 6, 20, 6, 3, 15, 16, 1, 2, 17, 10, 18, 7, 10, 23, 9, 10, 9, 11, 23, 7, 23, 18, 7, 17, 23]) == 69", "assert countCompleteDayPairs([23, 15, 16, 19, 6, 6, 23, 1, 15, 16, 5, 6, 17, 1, 21, 19, 20, 2, 14, 11, 19, 19, 17, 15, 8, 14, 17, 13, 2, 7, 19, 5, 24, 3, 9, 19, 4, 17, 9, 8, 10, 19, 8, 6, 17, 8, 12, 18, 18, 23, 13, 17, 23]) == 56", "assert countCompleteDayPairs([19, 22, 19, 10, 4, 3, 4, 18, 4, 7, 20, 4, 5, 15, 22, 5, 6, 24, 21, 22, 6, 1, 20, 21, 2, 20, 1, 9, 22, 15, 12, 3, 19, 6, 20, 19, 15, 11, 13, 13, 7, 2, 9, 7, 9, 11, 2, 7, 10, 18, 11, 20, 24, 11]) == 68", "assert countCompleteDayPairs([7, 1, 13, 15, 21, 1, 7, 10, 12, 11, 6, 20, 24, 2, 8, 2, 18, 19, 10, 23, 17, 22, 22, 10, 1, 14, 22, 5, 15, 16, 19, 14, 14, 2, 21, 4, 2, 6, 15, 1, 1, 23, 4, 13, 15, 3, 5, 22, 24, 4, 6, 13, 2, 5, 18]) == 63", "assert countCompleteDayPairs([6, 2, 23, 4, 2, 19, 11, 24, 19, 24, 6, 18, 11, 21, 6, 8, 18, 8, 6, 22, 18, 6, 1, 16, 16, 16, 19, 4, 17, 22, 16, 5, 18, 18, 17, 24, 11, 14, 12, 20, 18, 1, 15, 15, 14, 21, 18, 13, 19, 8, 11, 14, 4, 24, 22, 5, 3]) == 78", "assert countCompleteDayPairs([7, 17, 1, 1, 19, 2, 8, 19, 20, 3, 24, 7, 21, 18, 22, 9, 4, 19, 20, 12, 20, 8, 16, 24, 21, 24, 11, 20, 24, 17, 24, 6, 4, 4, 8, 6, 23, 10, 17, 17, 19, 20, 9, 16, 8, 22, 24, 9, 23, 6, 3, 16, 14, 8, 8, 9, 12]) == 71", "assert countCompleteDayPairs([22, 8, 20, 23, 3, 17, 9, 19, 11, 21, 1, 11, 1, 15, 20, 15, 18, 18, 5, 10, 18, 19, 8, 7, 5, 6, 15, 20, 11, 21, 2, 21, 18, 16, 2, 9, 23, 14, 13, 8, 23, 11, 10, 4, 10, 13, 24, 4, 5, 17, 21, 19, 20, 21, 4, 13, 3]) == 69", "assert countCompleteDayPairs([6, 17, 13, 15, 14, 18, 11, 6, 23, 3, 2, 7, 3, 24, 18, 21, 8, 22, 12, 17, 11, 11, 13, 12, 16, 6, 11, 16, 1, 4, 9, 12, 1, 3, 9, 21, 14, 17, 15, 23, 1, 7, 15, 2, 2, 9, 1, 14, 3, 18, 23, 18, 14, 14, 17, 14, 21, 19]) == 69", "assert countCompleteDayPairs([14, 8, 5, 5, 16, 5, 24, 20, 11, 4, 20, 20, 2, 14, 1, 6, 8, 19, 12, 11, 20, 21, 6, 16, 2, 5, 9, 19, 10, 9, 9, 9, 18, 10, 15, 16, 13, 2, 3, 1, 20, 19, 13, 17, 18, 2, 5, 9, 17, 17, 19, 16, 9, 7, 7, 9, 7, 20]) == 63", "assert countCompleteDayPairs([15, 19, 8, 13, 4, 23, 3, 10, 13, 24, 19, 16, 12, 17, 8, 22, 17, 2, 15, 22, 9, 9, 23, 18, 24, 15, 5, 1, 16, 19, 13, 23, 5, 11, 14, 21, 3, 24, 22, 3, 9, 23, 24, 17, 24, 6, 10, 14, 16, 16, 23, 23, 1, 3, 13, 15, 17, 14, 15]) == 69", "assert countCompleteDayPairs([16, 9, 3, 19, 3, 5, 21, 15, 18, 4, 23, 5, 17, 11, 10, 19, 1, 12, 13, 12, 9, 24, 23, 17, 20, 16, 12, 7, 9, 13, 9, 10, 12, 2, 12, 1, 3, 5, 3, 11, 21, 10, 9, 6, 13, 18, 9, 14, 9, 11, 12, 14, 2, 21, 19, 13, 22, 13, 3]) == 78", "assert countCompleteDayPairs([16, 21, 5, 14, 10, 19, 24, 17, 18, 5, 9, 5, 4, 22, 4, 17, 5, 20, 10, 22, 3, 24, 5, 15, 17, 12, 11, 15, 13, 8, 1, 22, 1, 18, 19, 10, 12, 18, 20, 2, 15, 5, 9, 15, 11, 18, 12, 19, 11, 18, 21, 12, 23, 18, 21, 13, 14, 5, 18]) == 61", "assert countCompleteDayPairs([19, 17, 10, 2, 16, 14, 3, 15, 8, 6, 5, 21, 10, 10, 3, 21, 20, 18, 21, 23, 5, 15, 13, 16, 22, 3, 4, 18, 20, 7, 14, 23, 17, 9, 14, 18, 13, 9, 11, 21, 13, 16, 11, 18, 11, 12, 9, 12, 23, 19, 21, 3, 21, 5, 19, 18, 16, 22, 1]) == 76", "assert countCompleteDayPairs([24, 16, 13, 9, 10, 9, 8, 21, 7, 3, 23, 2, 3, 22, 24, 8, 24, 20, 22, 3, 6, 14, 14, 13, 17, 4, 13, 23, 8, 12, 12, 24, 5, 13, 2, 8, 13, 21, 7, 2, 12, 2, 19, 15, 6, 24, 12, 19, 21, 9, 9, 9, 14, 20, 8, 15, 3, 4, 19]) == 63", "assert countCompleteDayPairs([11, 22, 22, 14, 11, 23, 15, 10, 17, 22, 9, 24, 1, 10, 21, 22, 7, 11, 23, 14, 9, 17, 21, 10, 14, 17, 21, 3, 8, 12, 3, 11, 24, 17, 16, 3, 19, 5, 19, 10, 5, 5, 7, 12, 13, 2, 2, 11, 10, 13, 24, 8, 6, 3, 11, 12, 14, 2, 20, 6]) == 82", "assert countCompleteDayPairs([12, 22, 6, 14, 16, 8, 9, 18, 8, 7, 5, 22, 22, 17, 7, 4, 4, 17, 18, 18, 10, 16, 15, 6, 18, 10, 5, 7, 22, 7, 8, 5, 22, 12, 5, 13, 17, 7, 6, 10, 12, 14, 24, 15, 22, 6, 20, 17, 15, 10, 9, 12, 24, 7, 5, 15, 9, 1, 2, 8]) == 83", "assert countCompleteDayPairs([20, 12, 20, 7, 11, 17, 11, 20, 2, 13, 17, 9, 20, 10, 5, 16, 24, 2, 12, 22, 10, 23, 6, 15, 14, 6, 13, 15, 24, 12, 8, 22, 9, 24, 4, 21, 13, 15, 21, 19, 11, 8, 3, 11, 19, 22, 1, 20, 2, 15, 15, 21, 18, 5, 14, 23, 2, 11, 13, 6]) == 73", "assert countCompleteDayPairs([21, 22, 4, 10, 9, 15, 2, 19, 23, 13, 5, 11, 12, 16, 17, 24, 20, 1, 23, 18, 22, 5, 23, 22, 3, 20, 5, 17, 5, 21, 24, 8, 4, 10, 18, 2, 14, 3, 12, 4, 3, 5, 21, 9, 15, 1, 24, 8, 21, 5, 10, 17, 3, 23, 3, 6, 18, 19, 22, 4]) == 73", "assert countCompleteDayPairs([20, 21, 20, 2, 18, 9, 21, 17, 22, 3, 10, 17, 1, 13, 18, 20, 2, 5, 20, 15, 17, 7, 3, 16, 15, 4, 13, 8, 12, 17, 15, 15, 8, 13, 2, 7, 7, 12, 19, 3, 1, 15, 23, 24, 8, 1, 22, 14, 15, 10, 11, 8, 18, 10, 12, 6, 4, 11, 2, 14, 23]) == 69", "assert countCompleteDayPairs([6, 2, 23, 14, 9, 11, 7, 21, 18, 15, 2, 2, 24, 7, 4, 23, 5, 14, 5, 6, 19, 10, 9, 24, 11, 7, 1, 11, 3, 6, 6, 10, 17, 10, 6, 5, 11, 3, 10, 24, 20, 1, 2, 18, 12, 23, 19, 21, 7, 22, 7, 3, 14, 14, 10, 9, 9, 3, 5, 16, 2, 12, 11]) == 71", "assert countCompleteDayPairs([23, 23, 20, 24, 18, 21, 17, 2, 16, 9, 21, 5, 21, 20, 13, 3, 18, 6, 1, 12, 9, 3, 18, 14, 24, 6, 19, 13, 11, 9, 23, 10, 23, 13, 12, 15, 22, 4, 13, 9, 6, 1, 14, 22, 24, 16, 16, 7, 4, 9, 10, 3, 18, 7, 2, 19, 19, 17, 2, 8, 22, 21, 6]) == 76", "assert countCompleteDayPairs([14, 17, 19, 4, 21, 9, 13, 22, 14, 23, 18, 1, 11, 18, 5, 9, 9, 6, 9, 21, 12, 16, 4, 12, 24, 1, 6, 20, 10, 6, 1, 5, 3, 6, 20, 1, 10, 20, 6, 21, 17, 15, 16, 11, 3, 6, 16, 21, 15, 21, 14, 6, 9, 6, 20, 20, 19, 7, 6, 15, 3, 19, 4, 16]) == 84", "assert countCompleteDayPairs([1, 8, 4, 23, 15, 3, 3, 20, 11, 21, 24, 1, 23, 9, 16, 9, 21, 5, 9, 23, 2, 2, 7, 10, 21, 6, 23, 22, 13, 19, 21, 17, 21, 11, 21, 17, 8, 16, 6, 7, 3, 14, 23, 3, 12, 24, 14, 16, 24, 17, 11, 16, 2, 2, 8, 14, 4, 22, 1, 10, 3, 7, 16, 22, 14]) == 101", "assert countCompleteDayPairs([2, 1, 6, 14, 21, 16, 23, 5, 7, 12, 17, 6, 6, 4, 12, 12, 17, 21, 12, 20, 22, 12, 21, 5, 19, 18, 5, 4, 6, 18, 16, 21, 24, 24, 22, 22, 24, 5, 11, 24, 23, 11, 11, 2, 24, 4, 12, 24, 6, 7, 8, 15, 22, 19, 11, 15, 23, 5, 12, 8, 7, 22, 23, 21, 13]) == 87", "assert countCompleteDayPairs([3, 4, 24, 5, 8, 11, 19, 19, 19, 5, 10, 14, 2, 23, 7, 20, 18, 21, 4, 6, 20, 17, 6, 19, 1, 1, 17, 16, 7, 11, 5, 2, 5, 12, 8, 5, 12, 11, 7, 13, 18, 17, 3, 5, 8, 17, 15, 8, 13, 14, 3, 18, 14, 21, 4, 19, 4, 19, 13, 2, 10, 15, 2, 17, 20]) == 97", "assert countCompleteDayPairs([23, 5, 1, 22, 20, 14, 23, 16, 6, 6, 14, 23, 14, 17, 1, 17, 15, 7, 11, 15, 18, 17, 15, 21, 4, 15, 11, 3, 23, 1, 23, 21, 13, 2, 3, 1, 6, 12, 22, 20, 5, 24, 7, 24, 16, 24, 14, 14, 14, 7, 7, 22, 2, 8, 18, 4, 19, 3, 14, 20, 22, 6, 6, 4, 16]) == 75", "assert countCompleteDayPairs([15, 9, 13, 24, 10, 22, 23, 10, 5, 3, 13, 2, 18, 22, 11, 20, 12, 5, 19, 13, 7, 1, 23, 15, 6, 15, 13, 22, 24, 18, 22, 12, 17, 23, 15, 19, 13, 5, 15, 20, 11, 3, 5, 20, 11, 14, 12, 21, 2, 9, 15, 4, 22, 10, 3, 23, 16, 17, 16, 24, 15, 16, 4, 20, 10, 21]) == 79", "assert countCompleteDayPairs([17, 11, 12, 24, 4, 10, 9, 19, 10, 20, 9, 14, 9, 17, 1, 2, 14, 18, 10, 20, 24, 9, 4, 2, 5, 11, 22, 18, 14, 24, 16, 5, 15, 15, 20, 5, 12, 16, 14, 21, 5, 10, 15, 1, 9, 4, 14, 3, 22, 1, 10, 5, 4, 7, 17, 23, 8, 19, 15, 3, 18, 11, 18, 20, 11, 12]) == 91", "assert countCompleteDayPairs([24, 21, 10, 7, 23, 19, 24, 22, 17, 21, 5, 20, 3, 22, 22, 1, 19, 21, 17, 21, 10, 17, 14, 4, 19, 19, 1, 12, 17, 16, 11, 14, 10, 14, 16, 10, 10, 12, 11, 16, 16, 10, 12, 14, 11, 17, 1, 7, 1, 18, 19, 11, 16, 6, 10, 19, 6, 10, 13, 19, 12, 11, 9, 9, 2, 12, 7]) == 84", "assert countCompleteDayPairs([12, 1, 18, 3, 1, 8, 11, 3, 3, 17, 18, 11, 2, 16, 11, 5, 6, 22, 24, 22, 13, 3, 11, 9, 2, 6, 24, 6, 11, 4, 18, 13, 4, 12, 14, 8, 9, 3, 1, 18, 11, 8, 12, 14, 23, 23, 9, 3, 18, 24, 17, 7, 21, 1, 2, 23, 2, 5, 19, 18, 2, 18, 7, 1, 18, 18, 14, 12]) == 88", "assert countCompleteDayPairs([12, 7, 12, 9, 23, 14, 5, 15, 2, 1, 13, 5, 11, 1, 14, 6, 20, 20, 18, 9, 20, 24, 2, 16, 13, 20, 11, 19, 4, 22, 23, 21, 8, 2, 2, 18, 24, 9, 18, 18, 3, 21, 22, 8, 14, 21, 21, 13, 4, 23, 11, 24, 7, 20, 1, 2, 10, 21, 14, 19, 6, 9, 15, 8, 13, 5, 11, 18, 11]) == 89", "assert countCompleteDayPairs([21, 20, 1, 18, 1, 24, 18, 10, 21, 12, 23, 23, 13, 18, 7, 8, 24, 24, 7, 11, 13, 10, 20, 4, 19, 9, 6, 17, 8, 17, 22, 24, 18, 21, 6, 15, 19, 7, 1, 19, 14, 2, 14, 19, 9, 16, 22, 7, 10, 3, 9, 14, 10, 11, 20, 20, 19, 21, 22, 8, 20, 1, 21, 16, 8, 16, 23, 10, 17]) == 85", "assert countCompleteDayPairs([13, 6, 12, 3, 10, 9, 13, 12, 4, 4, 8, 14, 6, 2, 7, 1, 6, 9, 18, 6, 16, 22, 7, 6, 20, 22, 10, 23, 17, 6, 12, 13, 3, 17, 6, 2, 2, 10, 18, 18, 17, 10, 15, 23, 20, 2, 20, 12, 21, 2, 4, 23, 2, 1, 9, 14, 22, 14, 1, 14, 4, 11, 18, 1, 24, 14, 23, 17, 3, 1, 24]) == 123", "assert countCompleteDayPairs([19, 17, 20, 18, 5, 8, 16, 10, 10, 2, 2, 19, 12, 8, 1, 9, 23, 20, 18, 6, 13, 8, 7, 3, 17, 9, 2, 3, 8, 10, 21, 4, 5, 6, 17, 20, 10, 10, 16, 22, 3, 10, 2, 11, 19, 3, 24, 22, 23, 12, 12, 10, 6, 4, 18, 3, 20, 15, 11, 2, 11, 19, 19, 19, 2, 4, 15, 13, 23, 5, 24]) == 84", "assert countCompleteDayPairs([3, 17, 3, 6, 12, 11, 12, 16, 23, 7, 12, 13, 18, 7, 23, 20, 17, 10, 23, 11, 23, 8, 3, 22, 24, 13, 15, 21, 8, 3, 12, 8, 20, 17, 5, 16, 17, 16, 15, 11, 7, 10, 23, 2, 14, 23, 7, 11, 17, 7, 14, 19, 5, 6, 12, 21, 3, 1, 6, 5, 5, 5, 5, 16, 9, 19, 16, 9, 9, 11, 21, 23]) == 108", "assert countCompleteDayPairs([5, 5, 17, 19, 23, 11, 12, 21, 16, 1, 6, 22, 4, 13, 23, 2, 6, 5, 4, 13, 6, 22, 22, 16, 14, 22, 1, 14, 15, 15, 17, 17, 9, 18, 4, 6, 9, 1, 15, 9, 5, 19, 4, 10, 8, 22, 1, 3, 3, 9, 11, 10, 4, 21, 12, 22, 2, 24, 19, 21, 22, 10, 11, 24, 17, 12, 15, 9, 21, 21, 10, 2]) == 95", "assert countCompleteDayPairs([7, 7, 19, 18, 1, 20, 8, 16, 2, 11, 1, 5, 19, 19, 15, 7, 7, 9, 8, 10, 7, 12, 19, 19, 23, 20, 8, 1, 23, 16, 4, 16, 4, 14, 3, 14, 2, 14, 20, 3, 5, 4, 3, 17, 18, 9, 11, 5, 2, 11, 21, 7, 8, 10, 8, 14, 23, 4, 20, 16, 16, 11, 15, 5, 24, 14, 18, 18, 7, 9, 15, 22]) == 102", "assert countCompleteDayPairs([8, 1, 22, 24, 1, 3, 21, 24, 2, 8, 10, 4, 2, 23, 6, 9, 18, 6, 24, 17, 8, 16, 16, 16, 20, 20, 21, 5, 17, 18, 20, 4, 19, 5, 2, 8, 16, 22, 21, 22, 4, 9, 3, 3, 23, 19, 5, 3, 8, 3, 8, 11, 16, 22, 24, 11, 4, 18, 9, 3, 14, 2, 16, 24, 4, 3, 23, 23, 24, 2, 18, 17]) == 130", "assert countCompleteDayPairs([4, 24, 20, 12, 24, 7, 2, 9, 11, 19, 4, 19, 5, 8, 17, 17, 3, 18, 6, 2, 13, 19, 16, 18, 23, 20, 21, 4, 18, 2, 9, 20, 4, 13, 13, 9, 24, 24, 23, 15, 17, 12, 16, 18, 4, 23, 12, 12, 23, 1, 10, 18, 13, 16, 20, 12, 19, 11, 8, 8, 14, 10, 6, 11, 18, 21, 8, 6, 15, 11, 3, 1, 5]) == 113", "assert countCompleteDayPairs([12, 18, 18, 1, 2, 23, 12, 11, 4, 10, 10, 5, 1, 18, 1, 22, 10, 21, 11, 20, 11, 15, 1, 18, 16, 4, 20, 11, 4, 23, 22, 19, 20, 18, 24, 3, 22, 22, 8, 9, 20, 11, 9, 1, 23, 22, 13, 8, 11, 3, 10, 6, 7, 5, 2, 22, 18, 1, 7, 12, 9, 6, 17, 18, 14, 23, 23, 14, 8, 15, 18, 9, 11, 5]) == 106", "assert countCompleteDayPairs([15, 1, 15, 3, 19, 2, 2, 2, 3, 2, 4, 9, 23, 7, 15, 14, 7, 9, 17, 21, 6, 13, 20, 5, 11, 7, 15, 3, 6, 13, 6, 8, 1, 12, 5, 23, 6, 7, 1, 7, 4, 5, 14, 8, 5, 15, 6, 12, 17, 11, 19, 22, 18, 16, 23, 2, 3, 10, 23, 14, 2, 8, 10, 21, 24, 21, 20, 22, 24, 3, 12, 19, 18, 21]) == 107", "assert countCompleteDayPairs([16, 17, 9, 18, 18, 12, 8, 5, 5, 10, 11, 1, 21, 6, 1, 5, 10, 1, 12, 2, 1, 12, 17, 21, 3, 5, 2, 4, 21, 21, 20, 16, 22, 21, 18, 12, 22, 15, 16, 11, 23, 19, 2, 5, 6, 7, 11, 8, 23, 1, 21, 20, 9, 18, 13, 22, 22, 22, 2, 7, 1, 19, 7, 13, 1, 3, 14, 14, 11, 3, 3, 6, 1, 8, 1]) == 121", "assert countCompleteDayPairs([21, 22, 12, 4, 12, 12, 12, 23, 5, 15, 2, 18, 15, 11, 16, 2, 1, 23, 23, 23, 10, 7, 5, 13, 23, 23, 8, 8, 21, 17, 18, 2, 22, 21, 1, 16, 12, 22, 13, 18, 13, 9, 11, 12, 9, 9, 9, 12, 21, 14, 2, 17, 4, 15, 3, 2, 2, 2, 7, 1, 19, 8, 18, 4, 20, 16, 14, 10, 3, 3, 19, 1, 6, 22, 10, 8]) == 136", "assert countCompleteDayPairs([19, 14, 6, 18, 23, 19, 13, 19, 14, 23, 9, 16, 7, 17, 23, 24, 19, 11, 14, 21, 3, 4, 13, 3, 13, 21, 22, 19, 23, 22, 10, 8, 5, 2, 14, 20, 10, 10, 14, 1, 11, 2, 6, 4, 12, 7, 6, 19, 15, 2, 20, 22, 7, 5, 22, 5, 16, 24, 1, 8, 12, 11, 7, 21, 24, 1, 3, 13, 15, 20, 2, 2, 17, 22, 17, 15, 20]) == 125", "assert countCompleteDayPairs([19, 23, 13, 10, 22, 11, 8, 14, 7, 13, 21, 15, 5, 19, 19, 14, 16, 23, 9, 4, 23, 3, 17, 19, 2, 11, 12, 23, 19, 12, 9, 22, 3, 20, 12, 17, 7, 4, 2, 14, 11, 12, 20, 5, 22, 12, 21, 12, 9, 1, 22, 24, 24, 22, 13, 1, 1, 14, 19, 17, 17, 5, 1, 7, 2, 14, 19, 9, 4, 19, 19, 24, 3, 19, 12, 17, 11, 5]) == 144", "assert countCompleteDayPairs([12, 7, 9, 1, 3, 12, 14, 20, 20, 13, 19, 5, 6, 16, 13, 3, 20, 22, 8, 3, 10, 2, 18, 5, 18, 10, 24, 22, 17, 18, 4, 24, 17, 19, 22, 17, 24, 20, 5, 18, 1, 2, 1, 12, 15, 2, 5, 18, 18, 22, 3, 6, 22, 15, 15, 23, 4, 11, 13, 18, 13, 21, 12, 15, 7, 19, 2, 12, 6, 9, 22, 2, 8, 6, 11, 14, 18, 16, 10]) == 134", "assert countCompleteDayPairs([18, 8, 4, 18, 21, 20, 2, 10, 20, 8, 2, 11, 3, 5, 9, 14, 14, 6, 19, 8, 21, 10, 20, 20, 16, 9, 1, 15, 18, 11, 19, 5, 17, 8, 2, 6, 3, 15, 22, 8, 13, 14, 4, 6, 11, 6, 7, 10, 16, 1, 8, 1, 16, 2, 5, 18, 19, 21, 11, 3, 12, 12, 13, 15, 8, 8, 7, 6, 5, 19, 2, 8, 22, 3, 11, 22, 16, 10, 23]) == 141", "assert countCompleteDayPairs([23, 15, 10, 10, 5, 12, 2, 7, 20, 5, 12, 19, 15, 11, 15, 19, 22, 7, 12, 9, 24, 5, 19, 13, 5, 21, 6, 13, 11, 16, 5, 15, 12, 17, 21, 8, 18, 10, 21, 17, 2, 3, 12, 5, 5, 14, 22, 12, 8, 1, 22, 17, 23, 1, 1, 3, 11, 8, 10, 2, 19, 22, 6, 9, 10, 7, 13, 23, 14, 2, 15, 19, 2, 5, 23, 21, 8, 6, 13]) == 143", "assert countCompleteDayPairs([1, 5, 19, 13, 3, 7, 8, 7, 7, 18, 12, 20, 11, 3, 23, 15, 22, 9, 12, 1, 1, 4, 15, 13, 13, 19, 16, 13, 12, 16, 13, 14, 2, 14, 17, 23, 3, 10, 11, 2, 10, 2, 8, 7, 3, 17, 22, 12, 17, 5, 6, 22, 24, 12, 4, 10, 4, 13, 14, 2, 6, 16, 1, 23, 24, 24, 23, 18, 14, 8, 14, 1, 3, 4, 23, 16, 12, 22, 3, 19]) == 126", "assert countCompleteDayPairs([5, 14, 20, 5, 7, 19, 9, 10, 12, 5, 19, 18, 10, 8, 15, 4, 23, 12, 23, 4, 1, 24, 24, 10, 18, 13, 15, 3, 15, 6, 24, 5, 4, 5, 3, 6, 14, 8, 13, 22, 1, 19, 3, 23, 5, 17, 15, 22, 13, 10, 7, 5, 5, 6, 22, 1, 8, 13, 8, 15, 9, 6, 18, 15, 21, 7, 19, 11, 4, 7, 5, 5, 8, 15, 14, 23, 18, 24, 17, 15]) == 122", "assert countCompleteDayPairs([7, 12, 4, 7, 19, 18, 23, 2, 14, 6, 13, 3, 16, 18, 10, 16, 22, 11, 15, 10, 10, 21, 16, 7, 19, 13, 24, 4, 20, 18, 18, 4, 23, 12, 1, 8, 20, 20, 19, 1, 4, 24, 19, 4, 8, 22, 4, 6, 13, 20, 14, 4, 1, 14, 24, 20, 9, 17, 18, 1, 23, 10, 19, 10, 5, 9, 12, 11, 15, 5, 4, 13, 23, 4, 20, 24, 24, 7, 23, 3, 4]) == 154", "assert countCompleteDayPairs([8, 12, 9, 8, 4, 17, 18, 7, 13, 14, 20, 19, 11, 21, 14, 3, 23, 23, 12, 13, 16, 6, 6, 11, 1, 23, 21, 7, 24, 3, 8, 15, 2, 18, 7, 6, 3, 20, 3, 6, 14, 23, 20, 4, 16, 11, 18, 12, 7, 16, 21, 9, 23, 4, 4, 17, 18, 22, 20, 23, 3, 9, 21, 19, 17, 14, 16, 19, 11, 17, 2, 11, 5, 2, 17, 8, 24, 6, 16, 22, 13]) == 133", "assert countCompleteDayPairs([22, 14, 23, 8, 15, 5, 13, 16, 12, 8, 14, 15, 9, 1, 18, 24, 15, 22, 6, 2, 1, 4, 20, 21, 18, 16, 19, 17, 9, 17, 13, 21, 6, 11, 21, 18, 21, 9, 23, 23, 18, 20, 1, 15, 8, 6, 8, 9, 13, 19, 5, 11, 8, 5, 18, 4, 24, 17, 3, 13, 18, 17, 10, 11, 6, 2, 23, 21, 4, 5, 1, 9, 17, 1, 18, 22, 18, 10, 11, 18, 22, 19]) == 138", "assert countCompleteDayPairs([17, 8, 9, 4, 2, 3, 9, 6, 11, 16, 3, 10, 10, 1, 3, 8, 5, 17, 23, 21, 22, 6, 17, 20, 4, 19, 16, 14, 7, 12, 19, 20, 3, 19, 18, 2, 14, 18, 6, 2, 10, 17, 24, 5, 12, 6, 11, 22, 9, 23, 11, 5, 16, 19, 18, 7, 24, 17, 21, 14, 11, 10, 1, 21, 22, 22, 24, 9, 12, 6, 12, 8, 24, 16, 14, 3, 14, 16, 7, 1, 18, 6, 23]) == 138", "assert countCompleteDayPairs([17, 22, 21, 15, 21, 23, 11, 12, 11, 14, 10, 17, 12, 18, 21, 4, 5, 4, 5, 11, 6, 5, 14, 4, 19, 9, 16, 20, 18, 24, 11, 8, 3, 19, 20, 15, 2, 19, 22, 14, 7, 3, 5, 10, 23, 21, 19, 7, 8, 10, 7, 9, 21, 6, 17, 15, 22, 21, 19, 24, 20, 11, 18, 10, 3, 20, 4, 6, 3, 19, 1, 15, 13, 18, 22, 23, 7, 11, 6, 23, 8, 11, 8]) == 133", "assert countCompleteDayPairs([22, 22, 6, 22, 1, 2, 7, 16, 23, 21, 15, 22, 3, 5, 1, 10, 5, 13, 3, 22, 9, 20, 1, 19, 18, 3, 15, 8, 23, 20, 17, 15, 13, 7, 16, 11, 23, 18, 21, 20, 4, 24, 11, 22, 21, 22, 24, 23, 23, 7, 23, 7, 22, 17, 4, 23, 5, 14, 5, 11, 14, 1, 12, 1, 8, 5, 7, 7, 2, 15, 16, 10, 12, 11, 18, 13, 23, 22, 17, 9, 22, 11, 23]) == 141", "assert countCompleteDayPairs([3, 6, 20, 1, 18, 23, 22, 19, 13, 18, 10, 7, 3, 1, 10, 12, 1, 10, 18, 3, 9, 9, 1, 2, 7, 24, 9, 11, 21, 20, 24, 13, 7, 6, 9, 17, 17, 2, 1, 16, 8, 15, 12, 22, 7, 3, 5, 14, 15, 14, 19, 10, 24, 5, 7, 11, 13, 23, 12, 10, 20, 20, 8, 7, 16, 9, 18, 2, 23, 16, 23, 9, 16, 22, 2, 15, 1, 2, 11, 9, 5, 19, 11, 5, 12, 23, 9]) == 144", "assert countCompleteDayPairs([4, 13, 4, 20, 21, 15, 24, 10, 3, 16, 2, 15, 13, 21, 15, 8, 4, 7, 16, 9, 7, 12, 15, 16, 2, 15, 21, 15, 16, 3, 9, 20, 5, 1, 18, 2, 8, 5, 21, 1, 12, 14, 9, 17, 20, 14, 4, 13, 2, 14, 19, 10, 12, 2, 12, 24, 19, 17, 22, 19, 6, 21, 20, 14, 8, 12, 3, 14, 21, 3, 14, 1, 19, 4, 4, 23, 18, 10, 12, 2, 22, 16, 22, 5, 8, 22, 10]) == 171", "assert countCompleteDayPairs([21, 24, 3, 10, 16, 4, 15, 11, 15, 21, 24, 7, 12, 9, 9, 22, 18, 2, 10, 1, 8, 15, 10, 24, 3, 20, 5, 14, 21, 23, 15, 8, 23, 12, 2, 15, 18, 12, 20, 10, 24, 4, 1, 1, 12, 3, 14, 23, 2, 9, 10, 12, 15, 10, 19, 19, 4, 20, 24, 5, 15, 18, 24, 18, 2, 23, 19, 22, 2, 15, 13, 2, 22, 1, 16, 9, 3, 1, 14, 18, 1, 8, 5, 6, 15, 11, 21]) == 168", "assert countCompleteDayPairs([24, 12, 21, 14, 5, 10, 12, 6, 18, 7, 18, 15, 23, 16, 2, 4, 6, 6, 8, 5, 2, 18, 10, 13, 23, 9, 19, 14, 10, 7, 17, 8, 14, 5, 24, 22, 13, 24, 1, 23, 16, 8, 2, 19, 11, 11, 14, 19, 17, 10, 18, 4, 12, 12, 16, 2, 11, 17, 23, 18, 20, 16, 20, 24, 17, 20, 3, 5, 23, 9, 11, 12, 6, 11, 14, 20, 16, 18, 13, 13, 20, 10, 4, 4, 22, 14, 2]) == 163", "assert countCompleteDayPairs([12, 13, 19, 23, 13, 17, 23, 15, 10, 16, 17, 24, 15, 17, 11, 23, 16, 15, 12, 19, 8, 23, 15, 8, 17, 10, 12, 1, 22, 9, 15, 7, 15, 18, 18, 22, 20, 6, 12, 16, 17, 15, 13, 15, 19, 18, 21, 1, 9, 4, 2, 10, 11, 13, 20, 7, 1, 23, 11, 16, 5, 19, 11, 23, 6, 20, 17, 7, 18, 10, 13, 20, 6, 7, 16, 21, 14, 20, 3, 4, 8, 5, 17, 4, 7, 11, 4, 1]) == 169", "assert countCompleteDayPairs([18, 11, 4, 1, 15, 4, 8, 22, 3, 24, 7, 23, 23, 1, 15, 13, 2, 7, 4, 1, 6, 21, 24, 11, 17, 22, 8, 18, 19, 22, 17, 16, 20, 1, 4, 18, 4, 1, 6, 16, 19, 19, 19, 5, 11, 20, 10, 23, 18, 24, 11, 11, 16, 14, 4, 16, 24, 17, 18, 4, 18, 1, 19, 23, 22, 15, 5, 19, 8, 6, 6, 10, 12, 9, 10, 6, 24, 14, 15, 1, 14, 18, 21, 5, 11, 8, 6, 22]) == 160", "assert countCompleteDayPairs([15, 22, 10, 4, 11, 22, 1, 14, 22, 9, 1, 14, 14, 21, 21, 5, 12, 19, 18, 2, 20, 14, 17, 6, 15, 21, 6, 15, 5, 1, 7, 18, 17, 23, 14, 16, 7, 2, 20, 17, 9, 19, 1, 10, 4, 10, 22, 14, 6, 1, 16, 11, 9, 8, 9, 15, 12, 6, 16, 20, 2, 12, 9, 23, 23, 3, 18, 22, 13, 20, 16, 17, 8, 2, 21, 14, 2, 21, 17, 12, 2, 12, 8, 20, 4, 9, 3, 2, 19]) == 172", "assert countCompleteDayPairs([20, 20, 23, 10, 14, 8, 22, 17, 11, 8, 11, 7, 15, 12, 9, 23, 16, 14, 14, 1, 8, 15, 1, 7, 11, 9, 20, 24, 14, 12, 24, 4, 15, 18, 2, 21, 23, 10, 22, 19, 10, 14, 7, 3, 1, 21, 11, 1, 11, 9, 20, 3, 13, 13, 22, 15, 14, 10, 16, 20, 8, 18, 8, 9, 21, 22, 13, 9, 15, 21, 18, 18, 8, 18, 10, 24, 5, 14, 22, 13, 21, 17, 22, 17, 6, 17, 3, 15, 10, 18, 6]) == 171", "assert countCompleteDayPairs([12, 19, 14, 19, 7, 9, 21, 6, 10, 22, 21, 21, 22, 3, 4, 7, 12, 16, 22, 5, 24, 1, 8, 12, 16, 14, 6, 8, 22, 8, 23, 7, 7, 4, 12, 23, 23, 14, 18, 23, 18, 21, 20, 23, 9, 16, 20, 10, 7, 13, 9, 21, 9, 24, 24, 22, 12, 8, 17, 8, 20, 17, 17, 24, 21, 22, 5, 23, 15, 22, 14, 19, 6, 24, 11, 5, 1, 2, 17, 4, 10, 2, 14, 10, 5, 15, 14, 14, 17, 19, 3, 10]) == 173", "assert countCompleteDayPairs([19, 8, 13, 5, 3, 23, 16, 9, 17, 22, 1, 19, 6, 5, 18, 10, 2, 13, 19, 15, 15, 21, 23, 23, 18, 22, 14, 8, 17, 12, 7, 22, 5, 1, 9, 23, 11, 8, 20, 16, 9, 9, 10, 17, 6, 13, 19, 1, 6, 22, 6, 12, 20, 2, 5, 12, 13, 5, 7, 10, 1, 8, 24, 3, 6, 2, 11, 4, 1, 13, 18, 3, 4, 7, 3, 14, 8, 5, 24, 20, 6, 20, 2, 10, 7, 18, 4, 6, 6, 20, 2, 20]) == 170", "assert countCompleteDayPairs([23, 9, 21, 15, 17, 17, 16, 17, 15, 24, 6, 5, 23, 14, 19, 19, 9, 15, 18, 7, 12, 15, 3, 23, 2, 13, 9, 1, 14, 11, 24, 4, 13, 21, 8, 12, 17, 1, 24, 9, 11, 16, 19, 17, 15, 1, 16, 22, 12, 1, 21, 2, 9, 14, 14, 1, 17, 15, 4, 16, 10, 10, 10, 11, 10, 20, 22, 15, 23, 10, 9, 4, 17, 21, 10, 15, 21, 5, 15, 13, 22, 1, 14, 7, 2, 7, 1, 3, 2, 16, 16, 3]) == 191", "assert countCompleteDayPairs([12, 16, 16, 3, 2, 3, 9, 21, 6, 20, 11, 10, 14, 5, 22, 5, 12, 19, 9, 20, 14, 23, 3, 11, 11, 13, 14, 14, 6, 11, 5, 13, 11, 6, 13, 20, 21, 11, 10, 20, 19, 7, 16, 12, 9, 14, 10, 5, 17, 18, 4, 19, 4, 2, 7, 21, 20, 19, 6, 14, 2, 24, 11, 7, 17, 22, 13, 17, 8, 2, 3, 16, 7, 13, 2, 16, 4, 22, 10, 24, 1, 24, 15, 16, 13, 6, 19, 11, 12, 22, 20, 22, 9, 15, 5, 11, 14]) == 203", "assert countCompleteDayPairs([7, 17, 2, 8, 15, 19, 3, 3, 7, 9, 19, 14, 13, 3, 14, 1, 17, 9, 11, 24, 1, 21, 15, 17, 16, 7, 23, 6, 15, 4, 10, 2, 7, 2, 12, 8, 10, 7, 19, 23, 13, 23, 15, 6, 13, 14, 7, 20, 13, 11, 21, 5, 13, 7, 17, 13, 15, 8, 23, 24, 8, 15, 17, 1, 15, 15, 22, 22, 17, 11, 5, 1, 15, 6, 2, 20, 3, 8, 4, 16, 18, 19, 7, 12, 11, 13, 4, 13, 11, 9, 17, 19, 8, 10, 6, 22, 14, 9]) == 214", "assert countCompleteDayPairs([9, 8, 21, 2, 10, 21, 13, 6, 17, 2, 10, 20, 2, 10, 2, 9, 11, 7, 6, 23, 22, 4, 8, 12, 11, 1, 18, 12, 3, 12, 5, 4, 22, 13, 6, 16, 8, 21, 23, 17, 22, 17, 21, 21, 10, 17, 15, 21, 24, 4, 22, 9, 19, 19, 2, 18, 5, 16, 24, 15, 8, 9, 4, 5, 16, 17, 13, 12, 12, 23, 15, 22, 23, 2, 24, 13, 7, 19, 12, 7, 24, 19, 6, 2, 16, 7, 14, 18, 11, 18, 19, 14, 19, 10, 12, 6, 6, 7]) == 193", "assert countCompleteDayPairs([19, 4, 15, 21, 11, 10, 23, 16, 21, 17, 21, 21, 13, 15, 6, 18, 13, 19, 14, 18, 22, 24, 12, 18, 22, 23, 19, 16, 4, 15, 11, 15, 4, 1, 17, 8, 14, 24, 7, 6, 18, 5, 3, 17, 8, 1, 15, 6, 13, 24, 13, 3, 2, 12, 19, 11, 8, 4, 15, 10, 24, 22, 10, 20, 22, 1, 17, 6, 22, 14, 5, 18, 6, 13, 9, 3, 9, 4, 22, 8, 6, 23, 12, 5, 12, 15, 6, 23, 22, 20, 10, 17, 19, 3, 24, 15, 21, 11]) == 176", "assert countCompleteDayPairs([15, 15, 19, 8, 22, 24, 24, 20, 1, 20, 7, 3, 24, 7, 24, 10, 15, 3, 2, 15, 14, 9, 18, 22, 6, 6, 2, 21, 21, 9, 15, 8, 10, 6, 4, 11, 16, 6, 3, 16, 7, 2, 5, 15, 6, 15, 23, 6, 3, 11, 24, 21, 18, 7, 11, 4, 19, 11, 10, 17, 17, 18, 3, 9, 14, 11, 9, 24, 4, 19, 17, 1, 16, 20, 20, 15, 3, 7, 9, 14, 21, 24, 11, 8, 4, 7, 16, 9, 8, 10, 9, 7, 13, 4, 8, 19, 13, 22, 3]) == 223", "assert countCompleteDayPairs([22, 10, 8, 23, 3, 12, 4, 7, 2, 6, 4, 8, 9, 3, 4, 10, 21, 15, 15, 13, 14, 10, 12, 10, 3, 20, 14, 20, 1, 20, 11, 1, 3, 17, 10, 20, 18, 2, 2, 21, 5, 7, 23, 10, 19, 20, 12, 17, 9, 10, 8, 21, 19, 24, 18, 12, 5, 14, 2, 16, 6, 16, 18, 18, 24, 11, 10, 6, 11, 11, 10, 14, 11, 24, 4, 13, 20, 10, 18, 20, 23, 6, 5, 24, 6, 9, 24, 20, 11, 2, 2, 9, 9, 11, 21, 22, 23, 13, 8]) == 198", "assert countCompleteDayPairs([17, 14, 19, 21, 5, 24, 20, 12, 24, 3, 14, 9, 17, 7, 14, 11, 12, 9, 14, 22, 16, 18, 15, 12, 20, 5, 13, 3, 5, 23, 17, 20, 20, 2, 18, 2, 16, 2, 18, 8, 3, 9, 13, 12, 10, 7, 1, 7, 16, 12, 24, 17, 15, 2, 15, 11, 23, 5, 11, 7, 1, 24, 12, 19, 3, 1, 8, 13, 3, 18, 16, 10, 6, 18, 6, 8, 11, 23, 14, 3, 22, 21, 20, 13, 4, 21, 22, 10, 24, 15, 23, 14, 18, 20, 6, 23, 23, 4, 12, 13]) == 195", "assert countCompleteDayPairs([1]) == 0", "assert countCompleteDayPairs([23]) == 0", "assert countCompleteDayPairs([24]) == 0", "assert countCompleteDayPairs([48]) == 0", "assert countCompleteDayPairs([1000000000]) == 0", "assert countCompleteDayPairs([1000000000, 1000000000]) == 0", "assert countCompleteDayPairs([999999984, 999999984, 999999984, 999999984, 999999984, 999999984]) == 15", "assert countCompleteDayPairs([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]) == 11", "assert countCompleteDayPairs([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]) == 12", "assert countCompleteDayPairs([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]) == 204", "assert countCompleteDayPairs([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1, 2, 3, 4]) == 204", "assert countCompleteDayPairs([488535984, 931588248, 449144064, 313295448, 641591520, 582316080, 916283472, 385220784, 431886792, 839931984, 783078936, 942036360, 177781056, 325011720, 959215656, 698560584, 26785608, 670457280, 888471240, 93069576, 186823152, 81737400, 285334128, 762163680, 401685096, 859960896, 240194760, 546656160, 503676312, 127675560, 709979592, 824401656, 165711552, 897000624, 71466648, 877333464, 952312272, 878083176, 905056992, 316345128, 657894168, 759602544, 285852912, 123097608, 105068184, 713945208, 836875680, 915320952, 879793896, 178556088, 154094976, 438243696, 401223480, 95908368, 553220880, 125904792, 690611280, 640747896, 367199232, 62981424, 229580280, 779492304, 199959336, 116725464, 767444400, 66765672, 746604840, 868999056, 86861952, 218607048, 464951280, 819342744, 804020616, 405374904, 148270872, 358960320, 663641616, 361417920, 743826624, 66388536, 483498240, 389979192, 324081792, 231786696, 53471184, 285759504, 715669704, 872236560, 80874312, 411253752, 265310904, 539156160, 744284688, 666731928, 374703216, 329558400, 284385528, 842815104, 622113504, 398474016]) == 4950", "assert countCompleteDayPairs([257418192, 639306720, 491819760, 373788096, 388688736, 178322400, 756422304, 539116464, 788920752, 447599472, 392212176, 605211552, 479145264, 329100720, 350840592, 620490336, 164070240, 890914896, 271387056, 615125424, 506958288, 403216512, 908606112, 802060176, 162302256, 647414928, 224643552, 580410768, 723847248, 770735328, 954786480, 241826016, 346778160, 187170528, 567002832, 879667152, 969270912, 858098928, 178329120, 839120016, 622389552, 126873600, 998585328, 620700288, 646485984, 89652624, 213744192, 129634944, 93905520, 499196880, 468732048, 859813440, 804398544, 343589664, 538056336, 576453888, 736095552, 993217248, 574335312, 21859200, 326705712, 780950640, 632053296, 651523920, 712007712, 236828544, 388868496, 389474208, 187617024, 277040208, 862780176, 895686000, 709005840, 742097280, 157714032, 930523488, 797821008, 20155680, 881967552, 324980928, 536455968, 384151488, 272279136, 788199120, 240008736, 113141760, 855910656, 691433952, 287912256, 223071024, 153809136, 427349712, 769635504, 888332016, 756167664, 370150608, 202954944, 78998928, 457151424, 820114560]) == 4950", "assert countCompleteDayPairs([201553020, 953765688, 81898356, 866110008, 764523372, 57455316, 44473716, 339819708, 841112880, 824488440, 183886260, 329999640, 512329188, 357765636, 74933448, 310723080, 140909880, 381871692, 216560484, 28930200, 630730932, 554621364, 188149044, 579790584, 919454652, 530429520, 140613960, 472890072, 20027796, 60708564, 224181288, 204479832, 918946968, 401120088, 624096984, 92361396, 815507304, 413758200, 121566552, 229475724, 854360772, 627358104, 225022224, 708389004, 447619956, 80385900, 598911816, 402940092, 38397240, 687319164, 980318892, 745052028, 955194540, 847149144, 340345236, 865430856, 319210752, 132059568, 758778960, 768479796, 214603140, 449164452, 712190736, 529933800, 895960212, 21990252, 635993184, 100259940, 346829868, 718788912, 762274812, 489667404, 59637192, 510489936, 455631648, 647349024, 844913028, 249857352, 798814680, 661857672, 19095684, 857217264, 49169796, 441277836, 477022980, 551787840, 787600572, 514573896, 597655176, 560096136, 851868288, 424652076, 385894212, 402282084, 478152720, 533510688, 951308388, 398814984, 640337196, 283334184]) == 2451", "assert countCompleteDayPairs([72686994, 814956372, 514203270, 87380964, 796990068, 74607090, 975294654, 673052706, 913405962, 699046752, 206120412, 985107408, 983094468, 360362700, 860574198, 297494232, 524011962, 784240128, 698802096, 628518726, 634681044, 247855236, 899202138, 570419436, 307390272, 84669354, 316558332, 829200654, 323636754, 844429848, 239721804, 601838064, 460521618, 480489840, 294543738, 494132286, 862741140, 483172062, 129490404, 514451064, 444454008, 903980562, 10189986, 67082940, 81997008, 966747168, 18987888, 897230016, 901534662, 648900288, 672299376, 129549504, 838066542, 110895342, 154790616, 715089264, 525445854, 967002102, 359952816, 52377672, 291814662, 7867728, 779877774, 60136218, 942413556, 535913520, 690741798, 289752978, 485655606, 561789696, 579682506, 753788436, 469716174, 996332898, 599089716, 106746102, 560185272, 137107308, 380302710, 737284440, 24090420, 840383160, 137745936, 981880404, 957423366, 403314828, 787212672, 415177104, 856938396, 647634252, 862845378, 407444196, 644160000, 696138816, 425050872, 804666864, 912745704, 130201518, 795850638, 712923204]) == 1304"], "public_tests": ["assert countCompleteDayPairs([12, 12, 30, 24, 24]) == 2", "assert countCompleteDayPairs([72, 48, 24, 3]) == 3"], "prompt_full": "from typing import List\n\ndef countCompleteDayPairs(hours: List[int]) -> int:\n    \"\"\"\n    Given an integer array `hours` representing times in **hours** , return an\n    integer denoting the number of pairs `i`, `j` where `i < j` and `hours[i] +\n    hours[j]` forms a **complete day**.\n    \n    A **complete day** is defined as a time duration that is an **exact**\n    **multiple** of 24 hours.\n    \n    For example, 1 day is 24 hours, 2 days is 48 hours, 3 days is 72 hours, and so\n    on.\n    \n    \n    \n    **Example 1:**\n    \n    **Input:** hours = [12,12,30,24,24]\n    \n    **Output:** 2\n    \n    **Explanation:**\n    \n    The pairs of indices that form a complete day are `(0, 1)` and `(3, 4)`.\n    \n    **Example 2:**\n    \n    **Input:** hours = [72,48,24,3]\n    \n    **Output:** 3\n    \n    **Explanation:**\n    \n    The pairs of indices that form a complete day are `(0, 1)`, `(0, 2)`, and `(1,\n    2)`.\n    \n    \n    \n    **Constraints:**\n    \n      * `1 <= hours.length <= 100`\n      * `1 <= hours[i] <= 10 ^ 9`\n    \"\"\""}
{"index": 1, "title": "Find the Child Who Has the Ball After K Seconds", "title_slug": "find-the-child-who-has-the-ball-after-k-seconds", "question_id": "3450", "question_frontend_id": "3178", "difficulty": "Easy", "contest": "weekly-contest-401", "prompt": "def numberOfChild(n: int, k: int) -> int:\n    \"\"\"\n    You are given two **positive** integers `n` and `k`. There are `n` children\n    numbered from `0` to `n - 1` standing in a queue _in order_ from left to\n    right.\n    \n    Initially, child 0 holds a ball and the direction of passing the ball is\n    towards the right direction. After each second, the child holding the ball\n    passes it to the child next to them. Once the ball reaches **either** end of\n    the line, i.e. child 0 or child `n - 1`, the direction of passing is\n    **reversed**.\n    \n    Return the number of the child who receives the ball after `k` seconds.\n    \n    \n    **Constraints:**\n    \n      * `2 <= n <= 50`\n      * `1 <= k <= 50`\n    \"\"\"", "entry_point": "numberOfChild", "solution": "def numberOfChild(n: int, k: int) -> int:\n    n -= 1\n    rounds = k // n\n    rem = k % n\n    if rounds % 2 == 0:\n        return rem\n    else:\n        return n - rem", "challenge_tests": [], "tests": ["assert numberOfChild(3, 5) == 1", "assert numberOfChild(5, 6) == 2", "assert numberOfChild(4, 2) == 2", "assert numberOfChild(2, 1) == 1", "assert numberOfChild(2, 2) == 0", "assert numberOfChild(2, 3) == 1", "assert numberOfChild(3, 1) == 1", "assert numberOfChild(3, 2) == 2", "assert numberOfChild(3, 3) == 1", "assert numberOfChild(2, 4) == 0", "assert numberOfChild(3, 4) == 0", "assert numberOfChild(4, 1) == 1", "assert numberOfChild(4, 3) == 3", "assert numberOfChild(4, 4) == 2", "assert numberOfChild(2, 5) == 1", "assert numberOfChild(4, 5) == 1", "assert numberOfChild(5, 1) == 1", "assert numberOfChild(5, 2) == 2", "assert numberOfChild(5, 3) == 3", "assert numberOfChild(5, 4) == 4", "assert numberOfChild(5, 5) == 3", "assert numberOfChild(2, 6) == 0", "assert numberOfChild(3, 6) == 2", "assert numberOfChild(4, 6) == 0", "assert numberOfChild(6, 1) == 1", "assert numberOfChild(6, 2) == 2", "assert numberOfChild(6, 3) == 3", "assert numberOfChild(6, 4) == 4", "assert numberOfChild(6, 5) == 5", "assert numberOfChild(6, 6) == 4", "assert numberOfChild(2, 7) == 1", "assert numberOfChild(3, 7) == 1", "assert numberOfChild(4, 7) == 1", "assert numberOfChild(5, 7) == 1", "assert numberOfChild(6, 7) == 3", "assert numberOfChild(7, 1) == 1", "assert numberOfChild(7, 2) == 2", "assert numberOfChild(7, 3) == 3", "assert numberOfChild(7, 4) == 4", "assert numberOfChild(7, 5) == 5", "assert numberOfChild(7, 6) == 6", "assert numberOfChild(7, 7) == 5", "assert numberOfChild(2, 8) == 0", "assert numberOfChild(3, 8) == 0", "assert numberOfChild(4, 8) == 2", "assert numberOfChild(5, 8) == 0", "assert numberOfChild(6, 8) == 2", "assert numberOfChild(7, 8) == 4", "assert numberOfChild(8, 1) == 1", "assert numberOfChild(8, 2) == 2", "assert numberOfChild(8, 3) == 3", "assert numberOfChild(8, 4) == 4", "assert numberOfChild(8, 5) == 5", "assert numberOfChild(8, 6) == 6", "assert numberOfChild(8, 7) == 7", "assert numberOfChild(8, 8) == 6", "assert numberOfChild(2, 9) == 1", "assert numberOfChild(3, 9) == 1", "assert numberOfChild(4, 9) == 3", "assert numberOfChild(5, 9) == 1", "assert numberOfChild(6, 9) == 1", "assert numberOfChild(7, 9) == 3", "assert numberOfChild(8, 9) == 5", "assert numberOfChild(9, 1) == 1", "assert numberOfChild(9, 2) == 2", "assert numberOfChild(9, 3) == 3", "assert numberOfChild(9, 4) == 4", "assert numberOfChild(9, 5) == 5", "assert numberOfChild(9, 6) == 6", "assert numberOfChild(9, 7) == 7", "assert numberOfChild(9, 8) == 8", "assert numberOfChild(9, 9) == 7", "assert numberOfChild(2, 10) == 0", "assert numberOfChild(3, 10) == 2", "assert numberOfChild(4, 10) == 2", "assert numberOfChild(5, 10) == 2", "assert numberOfChild(6, 10) == 0", "assert numberOfChild(7, 10) == 2", "assert numberOfChild(8, 10) == 4", "assert numberOfChild(9, 10) == 6", "assert numberOfChild(10, 1) == 1", "assert numberOfChild(10, 2) == 2", "assert numberOfChild(10, 3) == 3", "assert numberOfChild(10, 4) == 4", "assert numberOfChild(10, 5) == 5", "assert numberOfChild(10, 6) == 6", "assert numberOfChild(10, 7) == 7", "assert numberOfChild(10, 8) == 8", "assert numberOfChild(10, 9) == 9", "assert numberOfChild(10, 10) == 8", "assert numberOfChild(2, 11) == 1", "assert numberOfChild(3, 11) == 1", "assert numberOfChild(4, 11) == 1", "assert numberOfChild(5, 11) == 3", "assert numberOfChild(6, 11) == 1", "assert numberOfChild(7, 11) == 1", "assert numberOfChild(8, 11) == 3", "assert numberOfChild(9, 11) == 5", "assert numberOfChild(10, 11) == 7", "assert numberOfChild(11, 1) == 1", "assert numberOfChild(11, 4) == 4", "assert numberOfChild(11, 8) == 8", "assert numberOfChild(11, 9) == 9", "assert numberOfChild(11, 10) == 10", "assert numberOfChild(2, 12) == 0", "assert numberOfChild(3, 12) == 0", "assert numberOfChild(4, 12) == 0", "assert numberOfChild(5, 12) == 4", "assert numberOfChild(6, 12) == 2", "assert numberOfChild(7, 12) == 0", "assert numberOfChild(8, 12) == 2", "assert numberOfChild(9, 12) == 4", "assert numberOfChild(10, 12) == 6", "assert numberOfChild(2, 13) == 1", "assert numberOfChild(3, 13) == 1", "assert numberOfChild(4, 13) == 1", "assert numberOfChild(5, 13) == 3", "assert numberOfChild(6, 13) == 3", "assert numberOfChild(7, 13) == 1", "assert numberOfChild(8, 13) == 1", "assert numberOfChild(9, 13) == 3", "assert numberOfChild(10, 13) == 5", "assert numberOfChild(11, 13) == 7", "assert numberOfChild(12, 13) == 9", "assert numberOfChild(13, 5) == 5", "assert numberOfChild(13, 6) == 6", "assert numberOfChild(13, 11) == 11", "assert numberOfChild(13, 13) == 11", "assert numberOfChild(2, 14) == 0", "assert numberOfChild(3, 14) == 2", "assert numberOfChild(4, 14) == 2", "assert numberOfChild(5, 14) == 2", "assert numberOfChild(6, 14) == 4", "assert numberOfChild(7, 14) == 2", "assert numberOfChild(8, 14) == 0", "assert numberOfChild(9, 14) == 2", "assert numberOfChild(10, 14) == 4", "assert numberOfChild(11, 14) == 6", "assert numberOfChild(14, 2) == 2", "assert numberOfChild(14, 5) == 5", "assert numberOfChild(14, 8) == 8", "assert numberOfChild(14, 10) == 10", "assert numberOfChild(2, 15) == 1", "assert numberOfChild(3, 15) == 1", "assert numberOfChild(4, 15) == 3", "assert numberOfChild(5, 15) == 1", "assert numberOfChild(6, 15) == 5", "assert numberOfChild(7, 15) == 3", "assert numberOfChild(8, 15) == 1", "assert numberOfChild(9, 15) == 1", "assert numberOfChild(10, 15) == 3", "assert numberOfChild(15, 7) == 7", "assert numberOfChild(15, 13) == 13", "assert numberOfChild(2, 16) == 0", "assert numberOfChild(3, 16) == 0", "assert numberOfChild(4, 16) == 2", "assert numberOfChild(5, 16) == 0", "assert numberOfChild(6, 16) == 4", "assert numberOfChild(7, 16) == 4", "assert numberOfChild(8, 16) == 2", "assert numberOfChild(9, 16) == 0", "assert numberOfChild(10, 16) == 2", "assert numberOfChild(11, 16) == 4", "assert numberOfChild(12, 16) == 6", "assert numberOfChild(13, 16) == 8", "assert numberOfChild(16, 3) == 3", "assert numberOfChild(16, 8) == 8", "assert numberOfChild(16, 15) == 15", "assert numberOfChild(16, 16) == 14", "assert numberOfChild(2, 17) == 1", "assert numberOfChild(3, 17) == 1", "assert numberOfChild(4, 17) == 1", "assert numberOfChild(5, 17) == 1", "assert numberOfChild(6, 17) == 3", "assert numberOfChild(7, 17) == 5", "assert numberOfChild(8, 17) == 3", "assert numberOfChild(9, 17) == 1", "assert numberOfChild(10, 17) == 1", "assert numberOfChild(16, 17) == 13", "assert numberOfChild(17, 3) == 3", "assert numberOfChild(17, 4) == 4", "assert numberOfChild(17, 8) == 8", "assert numberOfChild(17, 13) == 13", "assert numberOfChild(17, 17) == 15", "assert numberOfChild(2, 18) == 0", "assert numberOfChild(3, 18) == 2", "assert numberOfChild(4, 18) == 0", "assert numberOfChild(5, 18) == 2", "assert numberOfChild(6, 18) == 2", "assert numberOfChild(7, 18) == 6", "assert numberOfChild(8, 18) == 4", "assert numberOfChild(9, 18) == 2", "assert numberOfChild(10, 18) == 0", "assert numberOfChild(18, 5) == 5", "assert numberOfChild(18, 6) == 6", "assert numberOfChild(18, 7) == 7", "assert numberOfChild(18, 8) == 8", "assert numberOfChild(2, 19) == 1", "assert numberOfChild(3, 19) == 1", "assert numberOfChild(4, 19) == 1", "assert numberOfChild(5, 19) == 3", "assert numberOfChild(6, 19) == 1", "assert numberOfChild(7, 19) == 5", "assert numberOfChild(8, 19) == 5", "assert numberOfChild(9, 19) == 3", "assert numberOfChild(10, 19) == 1", "assert numberOfChild(13, 19) == 5", "assert numberOfChild(14, 19) == 7", "assert numberOfChild(15, 19) == 9", "assert numberOfChild(18, 19) == 15", "assert numberOfChild(19, 4) == 4", "assert numberOfChild(2, 20) == 0", "assert numberOfChild(3, 20) == 0", "assert numberOfChild(4, 20) == 2", "assert numberOfChild(5, 20) == 4", "assert numberOfChild(6, 20) == 0", "assert numberOfChild(7, 20) == 4", "assert numberOfChild(8, 20) == 6", "assert numberOfChild(9, 20) == 4", "assert numberOfChild(10, 20) == 2", "assert numberOfChild(19, 20) == 16", "assert numberOfChild(20, 19) == 19", "assert numberOfChild(20, 20) == 18", "assert numberOfChild(2, 21) == 1", "assert numberOfChild(3, 21) == 1", "assert numberOfChild(4, 21) == 3", "assert numberOfChild(5, 21) == 3", "assert numberOfChild(6, 21) == 1", "assert numberOfChild(7, 21) == 3", "assert numberOfChild(8, 21) == 7", "assert numberOfChild(9, 21) == 5", "assert numberOfChild(10, 21) == 3", "assert numberOfChild(11, 21) == 1", "assert numberOfChild(14, 21) == 5", "assert numberOfChild(15, 21) == 7", "assert numberOfChild(21, 9) == 9", "assert numberOfChild(2, 22) == 0", "assert numberOfChild(3, 22) == 2", "assert numberOfChild(4, 22) == 2", "assert numberOfChild(5, 22) == 2", "assert numberOfChild(6, 22) == 2", "assert numberOfChild(7, 22) == 2", "assert numberOfChild(8, 22) == 6", "assert numberOfChild(9, 22) == 6", "assert numberOfChild(10, 22) == 4", "assert numberOfChild(14, 22) == 4", "assert numberOfChild(22, 3) == 3", "assert numberOfChild(22, 4) == 4", "assert numberOfChild(22, 10) == 10", "assert numberOfChild(22, 20) == 20", "assert numberOfChild(2, 23) == 1", "assert numberOfChild(3, 23) == 1", "assert numberOfChild(4, 23) == 1", "assert numberOfChild(5, 23) == 1", "assert numberOfChild(6, 23) == 3", "assert numberOfChild(7, 23) == 1", "assert numberOfChild(8, 23) == 5", "assert numberOfChild(9, 23) == 7", "assert numberOfChild(10, 23) == 5", "assert numberOfChild(12, 23) == 1", "assert numberOfChild(23, 2) == 2", "assert numberOfChild(23, 6) == 6", "assert numberOfChild(23, 15) == 15", "assert numberOfChild(2, 24) == 0", "assert numberOfChild(3, 24) == 0", "assert numberOfChild(4, 24) == 0", "assert numberOfChild(5, 24) == 0", "assert numberOfChild(6, 24) == 4", "assert numberOfChild(7, 24) == 0", "assert numberOfChild(8, 24) == 4", "assert numberOfChild(9, 24) == 8", "assert numberOfChild(10, 24) == 6", "assert numberOfChild(15, 24) == 4", "assert numberOfChild(18, 24) == 10", "assert numberOfChild(24, 11) == 11", "assert numberOfChild(24, 19) == 19", "assert numberOfChild(24, 20) == 20", "assert numberOfChild(2, 25) == 1", "assert numberOfChild(3, 25) == 1", "assert numberOfChild(4, 25) == 1", "assert numberOfChild(5, 25) == 1", "assert numberOfChild(6, 25) == 5", "assert numberOfChild(7, 25) == 1", "assert numberOfChild(8, 25) == 3", "assert numberOfChild(9, 25) == 7", "assert numberOfChild(10, 25) == 7", "assert numberOfChild(12, 25) == 3", "assert numberOfChild(14, 25) == 1", "assert numberOfChild(25, 9) == 9", "assert numberOfChild(2, 26) == 0", "assert numberOfChild(3, 26) == 2", "assert numberOfChild(4, 26) == 2", "assert numberOfChild(5, 26) == 2", "assert numberOfChild(6, 26) == 4", "assert numberOfChild(7, 26) == 2", "assert numberOfChild(8, 26) == 2", "assert numberOfChild(9, 26) == 6", "assert numberOfChild(10, 26) == 8", "assert numberOfChild(14, 26) == 0", "assert numberOfChild(23, 26) == 18", "assert numberOfChild(25, 26) == 22", "assert numberOfChild(26, 8) == 8", "assert numberOfChild(26, 10) == 10", "assert numberOfChild(26, 14) == 14", "assert numberOfChild(26, 16) == 16", "assert numberOfChild(26, 23) == 23", "assert numberOfChild(26, 24) == 24", "assert numberOfChild(2, 27) == 1", "assert numberOfChild(3, 27) == 1", "assert numberOfChild(4, 27) == 3", "assert numberOfChild(5, 27) == 3", "assert numberOfChild(6, 27) == 3", "assert numberOfChild(7, 27) == 3", "assert numberOfChild(8, 27) == 1", "assert numberOfChild(9, 27) == 5", "assert numberOfChild(10, 27) == 9", "assert numberOfChild(12, 27) == 5", "assert numberOfChild(16, 27) == 3", "assert numberOfChild(26, 27) == 23", "assert numberOfChild(27, 6) == 6", "assert numberOfChild(27, 11) == 11", "assert numberOfChild(27, 15) == 15", "assert numberOfChild(27, 23) == 23", "assert numberOfChild(2, 28) == 0", "assert numberOfChild(3, 28) == 0", "assert numberOfChild(4, 28) == 2", "assert numberOfChild(5, 28) == 4", "assert numberOfChild(6, 28) == 2", "assert numberOfChild(7, 28) == 4", "assert numberOfChild(8, 28) == 0", "assert numberOfChild(9, 28) == 4", "assert numberOfChild(10, 28) == 8", "assert numberOfChild(23, 28) == 16", "assert numberOfChild(28, 12) == 12", "assert numberOfChild(28, 16) == 16", "assert numberOfChild(28, 17) == 17", "assert numberOfChild(28, 24) == 24", "assert numberOfChild(2, 29) == 1", "assert numberOfChild(3, 29) == 1", "assert numberOfChild(4, 29) == 1", "assert numberOfChild(5, 29) == 3", "assert numberOfChild(6, 29) == 1", "assert numberOfChild(7, 29) == 5", "assert numberOfChild(8, 29) == 1", "assert numberOfChild(9, 29) == 3", "assert numberOfChild(10, 29) == 7", "assert numberOfChild(20, 29) == 9", "assert numberOfChild(26, 29) == 21", "assert numberOfChild(29, 5) == 5", "assert numberOfChild(29, 11) == 11", "assert numberOfChild(29, 14) == 14", "assert numberOfChild(2, 30) == 0", "assert numberOfChild(3, 30) == 2", "assert numberOfChild(4, 30) == 0", "assert numberOfChild(5, 30) == 2", "assert numberOfChild(6, 30) == 0", "assert numberOfChild(7, 30) == 6", "assert numberOfChild(8, 30) == 2", "assert numberOfChild(9, 30) == 2", "assert numberOfChild(10, 30) == 6", "assert numberOfChild(11, 30) == 10", "assert numberOfChild(19, 30) == 6", "assert numberOfChild(29, 30) == 26", "assert numberOfChild(30, 2) == 2", "assert numberOfChild(30, 10) == 10", "assert numberOfChild(30, 14) == 14", "assert numberOfChild(2, 31) == 1", "assert numberOfChild(3, 31) == 1", "assert numberOfChild(4, 31) == 1", "assert numberOfChild(5, 31) == 1", "assert numberOfChild(6, 31) == 1", "assert numberOfChild(7, 31) == 5", "assert numberOfChild(8, 31) == 3", "assert numberOfChild(9, 31) == 1", "assert numberOfChild(10, 31) == 5", "assert numberOfChild(11, 31) == 9", "assert numberOfChild(13, 31) == 7", "assert numberOfChild(22, 31) == 11", "assert numberOfChild(31, 2) == 2", "assert numberOfChild(31, 9) == 9", "assert numberOfChild(31, 12) == 12", "assert numberOfChild(31, 24) == 24", "assert numberOfChild(31, 25) == 25", "assert numberOfChild(31, 28) == 28", "assert numberOfChild(31, 30) == 30", "assert numberOfChild(2, 32) == 0", "assert numberOfChild(3, 32) == 0", "assert numberOfChild(4, 32) == 2", "assert numberOfChild(5, 32) == 0", "assert numberOfChild(6, 32) == 2", "assert numberOfChild(7, 32) == 4", "assert numberOfChild(8, 32) == 4", "assert numberOfChild(9, 32) == 0", "assert numberOfChild(10, 32) == 4", "assert numberOfChild(32, 6) == 6", "assert numberOfChild(32, 7) == 7", "assert numberOfChild(32, 10) == 10", "assert numberOfChild(32, 12) == 12", "assert numberOfChild(32, 32) == 30", "assert numberOfChild(2, 33) == 1", "assert numberOfChild(3, 33) == 1", "assert numberOfChild(4, 33) == 3", "assert numberOfChild(5, 33) == 1", "assert numberOfChild(6, 33) == 3", "assert numberOfChild(7, 33) == 3", "assert numberOfChild(8, 33) == 5", "assert numberOfChild(9, 33) == 1", "assert numberOfChild(10, 33) == 3", "assert numberOfChild(12, 33) == 11", "assert numberOfChild(19, 33) == 3", "assert numberOfChild(27, 33) == 19", "assert numberOfChild(33, 4) == 4", "assert numberOfChild(33, 13) == 13", "assert numberOfChild(33, 14) == 14", "assert numberOfChild(33, 25) == 25", "assert numberOfChild(2, 34) == 0", "assert numberOfChild(3, 34) == 2", "assert numberOfChild(4, 34) == 2", "assert numberOfChild(5, 34) == 2", "assert numberOfChild(6, 34) == 4", "assert numberOfChild(7, 34) == 2", "assert numberOfChild(8, 34) == 6", "assert numberOfChild(9, 34) == 2", "assert numberOfChild(10, 34) == 2", "assert numberOfChild(14, 34) == 8", "assert numberOfChild(30, 34) == 24", "assert numberOfChild(33, 34) == 30", "assert numberOfChild(34, 4) == 4", "assert numberOfChild(34, 11) == 11", "assert numberOfChild(34, 26) == 26", "assert numberOfChild(34, 28) == 28", "assert numberOfChild(34, 34) == 32", "assert numberOfChild(2, 35) == 1", "assert numberOfChild(3, 35) == 1", "assert numberOfChild(4, 35) == 1", "assert numberOfChild(5, 35) == 3", "assert numberOfChild(6, 35) == 5", "assert numberOfChild(7, 35) == 1", "assert numberOfChild(8, 35) == 7", "assert numberOfChild(9, 35) == 3", "assert numberOfChild(10, 35) == 1", "assert numberOfChild(14, 35) == 9", "assert numberOfChild(20, 35) == 3", "assert numberOfChild(21, 35) == 5", "assert numberOfChild(27, 35) == 17", "assert numberOfChild(31, 35) == 25", "assert numberOfChild(35, 15) == 15", "assert numberOfChild(35, 22) == 22", "assert numberOfChild(35, 23) == 23", "assert numberOfChild(35, 26) == 26", "assert numberOfChild(35, 31) == 31", "assert numberOfChild(35, 34) == 34", "assert numberOfChild(2, 36) == 0", "assert numberOfChild(3, 36) == 0", "assert numberOfChild(4, 36) == 0", "assert numberOfChild(5, 36) == 4", "assert numberOfChild(6, 36) == 4", "assert numberOfChild(7, 36) == 0", "assert numberOfChild(8, 36) == 6", "assert numberOfChild(9, 36) == 4", "assert numberOfChild(10, 36) == 0", "assert numberOfChild(11, 36) == 4", "assert numberOfChild(13, 36) == 12", "assert numberOfChild(24, 36) == 10", "assert numberOfChild(32, 36) == 26", "assert numberOfChild(36, 1) == 1", "assert numberOfChild(36, 6) == 6", "assert numberOfChild(36, 9) == 9", "assert numberOfChild(36, 12) == 12", "assert numberOfChild(36, 27) == 27", "assert numberOfChild(2, 37) == 1", "assert numberOfChild(3, 37) == 1", "assert numberOfChild(4, 37) == 1", "assert numberOfChild(5, 37) == 3", "assert numberOfChild(6, 37) == 3", "assert numberOfChild(7, 37) == 1", "assert numberOfChild(8, 37) == 5", "assert numberOfChild(9, 37) == 5", "assert numberOfChild(10, 37) == 1", "assert numberOfChild(13, 37) == 11", "assert numberOfChild(18, 37) == 3", "assert numberOfChild(29, 37) == 19", "assert numberOfChild(33, 37) == 27", "assert numberOfChild(35, 37) == 31", "assert numberOfChild(36, 37) == 33", "assert numberOfChild(37, 1) == 1", "assert numberOfChild(37, 6) == 6", "assert numberOfChild(37, 7) == 7", "assert numberOfChild(37, 12) == 12", "assert numberOfChild(37, 14) == 14", "assert numberOfChild(37, 24) == 24", "assert numberOfChild(37, 26) == 26", "assert numberOfChild(2, 38) == 0", "assert numberOfChild(3, 38) == 2", "assert numberOfChild(4, 38) == 2", "assert numberOfChild(5, 38) == 2", "assert numberOfChild(6, 38) == 2", "assert numberOfChild(7, 38) == 2", "assert numberOfChild(8, 38) == 4", "assert numberOfChild(9, 38) == 6", "assert numberOfChild(10, 38) == 2", "assert numberOfChild(18, 38) == 4", "assert numberOfChild(28, 38) == 16", "assert numberOfChild(29, 38) == 18", "assert numberOfChild(37, 38) == 34", "assert numberOfChild(38, 11) == 11", "assert numberOfChild(38, 13) == 13", "assert numberOfChild(38, 20) == 20", "assert numberOfChild(38, 21) == 21", "assert numberOfChild(38, 23) == 23", "assert numberOfChild(38, 25) == 25", "assert numberOfChild(38, 30) == 30", "assert numberOfChild(2, 39) == 1", "assert numberOfChild(3, 39) == 1", "assert numberOfChild(4, 39) == 3", "assert numberOfChild(5, 39) == 1", "assert numberOfChild(6, 39) == 1", "assert numberOfChild(7, 39) == 3", "assert numberOfChild(8, 39) == 3", "assert numberOfChild(9, 39) == 7", "assert numberOfChild(10, 39) == 3", "assert numberOfChild(12, 39) == 5", "assert numberOfChild(29, 39) == 17", "assert numberOfChild(35, 39) == 29", "assert numberOfChild(39, 2) == 2", "assert numberOfChild(39, 19) == 19", "assert numberOfChild(39, 31) == 31", "assert numberOfChild(39, 32) == 32", "assert numberOfChild(39, 33) == 33", "assert numberOfChild(2, 40) == 0", "assert numberOfChild(3, 40) == 0", "assert numberOfChild(4, 40) == 2", "assert numberOfChild(5, 40) == 0", "assert numberOfChild(6, 40) == 0", "assert numberOfChild(7, 40) == 4", "assert numberOfChild(8, 40) == 2", "assert numberOfChild(9, 40) == 8", "assert numberOfChild(10, 40) == 4", "assert numberOfChild(23, 40) == 4", "assert numberOfChild(25, 40) == 8", "assert numberOfChild(28, 40) == 14", "assert numberOfChild(29, 40) == 16", "assert numberOfChild(32, 40) == 22", "assert numberOfChild(36, 40) == 30", "assert numberOfChild(39, 40) == 36", "assert numberOfChild(40, 16) == 16", "assert numberOfChild(40, 18) == 18", "assert numberOfChild(40, 23) == 23", "assert numberOfChild(40, 29) == 29", "assert numberOfChild(40, 31) == 31", "assert numberOfChild(40, 32) == 32", "assert numberOfChild(40, 38) == 38", "assert numberOfChild(2, 41) == 1", "assert numberOfChild(3, 41) == 1", "assert numberOfChild(4, 41) == 1", "assert numberOfChild(5, 41) == 1", "assert numberOfChild(6, 41) == 1", "assert numberOfChild(7, 41) == 5", "assert numberOfChild(8, 41) == 1", "assert numberOfChild(9, 41) == 7", "assert numberOfChild(10, 41) == 5", "assert numberOfChild(16, 41) == 11", "assert numberOfChild(18, 41) == 7", "assert numberOfChild(30, 41) == 17", "assert numberOfChild(34, 41) == 25", "assert numberOfChild(37, 41) == 31", "assert numberOfChild(38, 41) == 33", "assert numberOfChild(41, 13) == 13", "assert numberOfChild(41, 15) == 15", "assert numberOfChild(41, 20) == 20", "assert numberOfChild(41, 23) == 23", "assert numberOfChild(41, 29) == 29", "assert numberOfChild(41, 35) == 35", "assert numberOfChild(41, 36) == 36", "assert numberOfChild(2, 42) == 0", "assert numberOfChild(3, 42) == 2", "assert numberOfChild(4, 42) == 0", "assert numberOfChild(5, 42) == 2", "assert numberOfChild(6, 42) == 2", "assert numberOfChild(7, 42) == 6", "assert numberOfChild(8, 42) == 0", "assert numberOfChild(9, 42) == 6", "assert numberOfChild(10, 42) == 6", "assert numberOfChild(11, 42) == 2", "assert numberOfChild(16, 42) == 12", "assert numberOfChild(36, 42) == 28", "assert numberOfChild(38, 42) == 32", "assert numberOfChild(42, 9) == 9", "assert numberOfChild(42, 17) == 17", "assert numberOfChild(42, 18) == 18", "assert numberOfChild(42, 20) == 20", "assert numberOfChild(42, 32) == 32", "assert numberOfChild(42, 35) == 35", "assert numberOfChild(2, 43) == 1", "assert numberOfChild(3, 43) == 1", "assert numberOfChild(4, 43) == 1", "assert numberOfChild(5, 43) == 3", "assert numberOfChild(6, 43) == 3", "assert numberOfChild(7, 43) == 5", "assert numberOfChild(8, 43) == 1", "assert numberOfChild(9, 43) == 5", "assert numberOfChild(10, 43) == 7", "assert numberOfChild(11, 43) == 3", "assert numberOfChild(15, 43) == 13", "assert numberOfChild(24, 43) == 3", "assert numberOfChild(27, 43) == 9", "assert numberOfChild(31, 43) == 17", "assert numberOfChild(34, 43) == 23", "assert numberOfChild(43, 8) == 8", "assert numberOfChild(43, 22) == 22", "assert numberOfChild(43, 27) == 27", "assert numberOfChild(43, 40) == 40", "assert numberOfChild(2, 44) == 0", "assert numberOfChild(3, 44) == 0", "assert numberOfChild(4, 44) == 2", "assert numberOfChild(5, 44) == 4", "assert numberOfChild(6, 44) == 4", "assert numberOfChild(7, 44) == 4", "assert numberOfChild(8, 44) == 2", "assert numberOfChild(9, 44) == 4", "assert numberOfChild(10, 44) == 8", "assert numberOfChild(18, 44) == 10", "assert numberOfChild(19, 44) == 8", "assert numberOfChild(20, 44) == 6", "assert numberOfChild(36, 44) == 26", "assert numberOfChild(42, 44) == 38", "assert numberOfChild(43, 44) == 40", "assert numberOfChild(44, 2) == 2", "assert numberOfChild(44, 7) == 7", "assert numberOfChild(44, 12) == 12", "assert numberOfChild(44, 15) == 15", "assert numberOfChild(44, 16) == 16", "assert numberOfChild(44, 22) == 22", "assert numberOfChild(44, 29) == 29", "assert numberOfChild(44, 35) == 35", "assert numberOfChild(44, 38) == 38", "assert numberOfChild(44, 42) == 42", "assert numberOfChild(44, 43) == 43", "assert numberOfChild(2, 45) == 1", "assert numberOfChild(3, 45) == 1", "assert numberOfChild(4, 45) == 3", "assert numberOfChild(5, 45) == 3", "assert numberOfChild(6, 45) == 5", "assert numberOfChild(7, 45) == 3", "assert numberOfChild(8, 45) == 3", "assert numberOfChild(9, 45) == 3", "assert numberOfChild(10, 45) == 9", "assert numberOfChild(34, 45) == 21", "assert numberOfChild(35, 45) == 23", "assert numberOfChild(45, 4) == 4", "assert numberOfChild(45, 8) == 8", "assert numberOfChild(45, 18) == 18", "assert numberOfChild(45, 20) == 20", "assert numberOfChild(45, 23) == 23", "assert numberOfChild(45, 30) == 30", "assert numberOfChild(45, 35) == 35", "assert numberOfChild(45, 36) == 36", "assert numberOfChild(2, 46) == 0", "assert numberOfChild(3, 46) == 2", "assert numberOfChild(4, 46) == 2", "assert numberOfChild(5, 46) == 2", "assert numberOfChild(6, 46) == 4", "assert numberOfChild(7, 46) == 2", "assert numberOfChild(8, 46) == 4", "assert numberOfChild(9, 46) == 2", "assert numberOfChild(10, 46) == 8", "assert numberOfChild(17, 46) == 14", "assert numberOfChild(29, 46) == 10", "assert numberOfChild(33, 46) == 18", "assert numberOfChild(36, 46) == 24", "assert numberOfChild(37, 46) == 26", "assert numberOfChild(39, 46) == 30", "assert numberOfChild(46, 2) == 2", "assert numberOfChild(46, 5) == 5", "assert numberOfChild(46, 8) == 8", "assert numberOfChild(2, 47) == 1", "assert numberOfChild(3, 47) == 1", "assert numberOfChild(4, 47) == 1", "assert numberOfChild(5, 47) == 1", "assert numberOfChild(6, 47) == 3", "assert numberOfChild(7, 47) == 1", "assert numberOfChild(8, 47) == 5", "assert numberOfChild(9, 47) == 1", "assert numberOfChild(10, 47) == 7", "assert numberOfChild(11, 47) == 7", "assert numberOfChild(21, 47) == 7", "assert numberOfChild(47, 4) == 4", "assert numberOfChild(47, 7) == 7", "assert numberOfChild(47, 9) == 9", "assert numberOfChild(47, 13) == 13", "assert numberOfChild(47, 26) == 26", "assert numberOfChild(47, 32) == 32", "assert numberOfChild(47, 33) == 33", "assert numberOfChild(47, 35) == 35", "assert numberOfChild(47, 37) == 37", "assert numberOfChild(47, 38) == 38", "assert numberOfChild(47, 39) == 39", "assert numberOfChild(47, 45) == 45", "assert numberOfChild(2, 48) == 0", "assert numberOfChild(3, 48) == 0", "assert numberOfChild(4, 48) == 0", "assert numberOfChild(5, 48) == 0", "assert numberOfChild(6, 48) == 2", "assert numberOfChild(7, 48) == 0", "assert numberOfChild(8, 48) == 6", "assert numberOfChild(9, 48) == 0", "assert numberOfChild(10, 48) == 6", "assert numberOfChild(17, 48) == 16", "assert numberOfChild(26, 48) == 2", "assert numberOfChild(30, 48) == 10", "assert numberOfChild(35, 48) == 20", "assert numberOfChild(37, 48) == 24", "assert numberOfChild(40, 48) == 30", "assert numberOfChild(41, 48) == 32", "assert numberOfChild(44, 48) == 38", "assert numberOfChild(48, 6) == 6", "assert numberOfChild(48, 8) == 8", "assert numberOfChild(48, 12) == 12", "assert numberOfChild(48, 15) == 15", "assert numberOfChild(48, 21) == 21", "assert numberOfChild(48, 27) == 27", "assert numberOfChild(48, 34) == 34", "assert numberOfChild(48, 48) == 46", "assert numberOfChild(2, 49) == 1", "assert numberOfChild(3, 49) == 1", "assert numberOfChild(4, 49) == 1", "assert numberOfChild(5, 49) == 1", "assert numberOfChild(6, 49) == 1", "assert numberOfChild(7, 49) == 1", "assert numberOfChild(8, 49) == 7", "assert numberOfChild(9, 49) == 1", "assert numberOfChild(10, 49) == 5", "assert numberOfChild(11, 49) == 9", "assert numberOfChild(12, 49) == 5", "assert numberOfChild(19, 49) == 13", "assert numberOfChild(21, 49) == 9", "assert numberOfChild(22, 49) == 7", "assert numberOfChild(31, 49) == 11", "assert numberOfChild(39, 49) == 27", "assert numberOfChild(42, 49) == 33", "assert numberOfChild(49, 28) == 28", "assert numberOfChild(49, 32) == 32", "assert numberOfChild(49, 40) == 40", "assert numberOfChild(49, 42) == 42", "assert numberOfChild(49, 46) == 46", "assert numberOfChild(49, 47) == 47", "assert numberOfChild(49, 48) == 48", "assert numberOfChild(2, 50) == 0", "assert numberOfChild(3, 50) == 2", "assert numberOfChild(4, 50) == 2", "assert numberOfChild(5, 50) == 2", "assert numberOfChild(6, 50) == 0", "assert numberOfChild(7, 50) == 2", "assert numberOfChild(8, 50) == 6", "assert numberOfChild(9, 50) == 2", "assert numberOfChild(10, 50) == 4", "assert numberOfChild(13, 50) == 2", "assert numberOfChild(27, 50) == 2", "assert numberOfChild(30, 50) == 8", "assert numberOfChild(38, 50) == 24", "assert numberOfChild(45, 50) == 38", "assert numberOfChild(49, 50) == 46", "assert numberOfChild(50, 2) == 2", "assert numberOfChild(50, 4) == 4", "assert numberOfChild(50, 7) == 7", "assert numberOfChild(50, 13) == 13", "assert numberOfChild(50, 22) == 22", "assert numberOfChild(50, 29) == 29", "assert numberOfChild(50, 32) == 32", "assert numberOfChild(50, 36) == 36"], "public_tests": ["assert numberOfChild(3, 5) == 1", "assert numberOfChild(5, 6) == 2", "assert numberOfChild(4, 2) == 2"], "prompt_full": "def numberOfChild(n: int, k: int) -> int:\n    \"\"\"\n    You are given two **positive** integers `n` and `k`. There are `n` children\n    numbered from `0` to `n - 1` standing in a queue _in order_ from left to\n    right.\n    \n    Initially, child 0 holds a ball and the direction of passing the ball is\n    towards the right direction. After each second, the child holding the ball\n    passes it to the child next to them. Once the ball reaches **either** end of\n    the line, i.e. child 0 or child `n - 1`, the direction of passing is\n    **reversed**.\n    \n    Return the number of the child who receives the ball after `k` seconds.\n    \n    \n    \n    **Example 1:**\n    \n    **Input:** n = 3, k = 5\n    \n    **Output:** 1\n    \n    **Explanation:**\n    \n    Time elapsed | Children  \n    ---|---  \n    `0` | `[_0_ , 1, 2]`  \n    `1` | `[0, _1_ , 2]`  \n    `2` | `[0, 1, _2_]`  \n    `3` | `[0, _1_ , 2]`  \n    `4` | `[_0_ , 1, 2]`  \n    `5` | `[0, _1_ , 2]`  \n      \n    **Example 2:**\n    \n    **Input:** n = 5, k = 6\n    \n    **Output:** 2\n    \n    **Explanation:**\n    \n    Time elapsed | Children  \n    ---|---  \n    `0` | `[_0_ , 1, 2, 3, 4]`  \n    `1` | `[0, _1_ , 2, 3, 4]`  \n    `2` | `[0, 1, _2_ , 3, 4]`  \n    `3` | `[0, 1, 2, _3_ , 4]`  \n    `4` | `[0, 1, 2, 3, _4_]`  \n    `5` | `[0, 1, 2, _3_ , 4]`  \n    `6` | `[0, 1, _2_ , 3, 4]`  \n      \n    **Example 3:**\n    \n    **Input:** n = 4, k = 2\n    \n    **Output:** 2\n    \n    **Explanation:**\n    \n    Time elapsed | Children  \n    ---|---  \n    `0` | `[_0_ , 1, 2, 3]`  \n    `1` | `[0, _1_ , 2, 3]`  \n    `2` | `[0, 1, _2_ , 3]`  \n      \n    \n    \n    **Constraints:**\n    \n      * `2 <= n <= 50`\n      * `1 <= k <= 50`\n    \"\"\""}
{"index": 2, "title": "Clear Digits", "title_slug": "clear-digits", "question_id": "3447", "question_frontend_id": "3174", "difficulty": "Easy", "contest": "biweekly-contest-132", "prompt": "def clearDigits(s: str) -> str:\n    \"\"\"\n    You are given a string `s`.\n    \n    Your task is to remove **all** digits by doing this operation repeatedly:\n    \n      * Delete the first digit and the **closest** **non-digit** character to its left.\n    \n    Return the resulting string after removing all digits.\n    \n    **Constraints:**\n    \n      * `1 <= s.length <= 100`\n      * `s` consists only of lowercase English letters and digits.\n      * The input is generated such that it is possible to delete all digits.\n    \"\"\"", "entry_point": "clearDigits", "solution": "def clearDigits(s: str) -> str:\n    st = []\n    for ch in s:\n        if '0' <= ch <= '9' and st:\n            st.pop()\n        else:\n            st.append(ch)\n    \n    s = \"\".join(st)\n    return s", "challenge_tests": [], "tests": ["assert clearDigits(\"abc\") == \"abc\"", "assert clearDigits(\"cb34\") == \"\"", "assert clearDigits(\"a\") == \"a\"", "assert clearDigits(\"b\") == \"b\"", "assert clearDigits(\"c\") == \"c\"", "assert clearDigits(\"d\") == \"d\"", "assert clearDigits(\"f\") == \"f\"", "assert clearDigits(\"g\") == \"g\"", "assert clearDigits(\"h\") == \"h\"", "assert clearDigits(\"i\") == \"i\"", "assert clearDigits(\"j\") == \"j\"", "assert clearDigits(\"l\") == \"l\"", "assert clearDigits(\"m\") == \"m\"", "assert clearDigits(\"n\") == \"n\"", "assert clearDigits(\"o\") == \"o\"", "assert clearDigits(\"p\") == \"p\"", "assert clearDigits(\"q\") == \"q\"", "assert clearDigits(\"r\") == \"r\"", "assert clearDigits(\"s\") == \"s\"", "assert clearDigits(\"t\") == \"t\"", "assert clearDigits(\"u\") == \"u\"", "assert clearDigits(\"w\") == \"w\"", "assert clearDigits(\"x\") == \"x\"", "assert clearDigits(\"y\") == \"y\"", "assert clearDigits(\"z\") == \"z\"", "assert clearDigits(\"a3\") == \"\"", "assert clearDigits(\"au\") == \"au\"", "assert clearDigits(\"b4\") == \"\"", "assert clearDigits(\"b5\") == \"\"", "assert clearDigits(\"c8\") == \"\"", "assert clearDigits(\"d1\") == \"\"", "assert clearDigits(\"d3\") == \"\"", "assert clearDigits(\"d4\") == \"\"", "assert clearDigits(\"d9\") == \"\"", "assert clearDigits(\"dl\") == \"dl\"", "assert clearDigits(\"e5\") == \"\"", "assert clearDigits(\"ey\") == \"ey\"", "assert clearDigits(\"g0\") == \"\"", "assert clearDigits(\"gs\") == \"gs\"", "assert clearDigits(\"hu\") == \"hu\"", "assert clearDigits(\"j2\") == \"\"", "assert clearDigits(\"k6\") == \"\"", "assert clearDigits(\"l0\") == \"\"", "assert clearDigits(\"lj\") == \"lj\"", "assert clearDigits(\"ls\") == \"ls\"", "assert clearDigits(\"lv\") == \"lv\"", "assert clearDigits(\"lw\") == \"lw\"", "assert clearDigits(\"m2\") == \"\"", "assert clearDigits(\"mg\") == \"mg\"", "assert clearDigits(\"mj\") == \"mj\"", "assert clearDigits(\"mz\") == \"mz\"", "assert clearDigits(\"n3\") == \"\"", "assert clearDigits(\"n4\") == \"\"", "assert clearDigits(\"oz\") == \"oz\"", "assert clearDigits(\"p0\") == \"\"", "assert clearDigits(\"p3\") == \"\"", "assert clearDigits(\"p9\") == \"\"", "assert clearDigits(\"q7\") == \"\"", "assert clearDigits(\"qk\") == \"qk\"", "assert clearDigits(\"qu\") == \"qu\"", "assert clearDigits(\"r1\") == \"\"", "assert clearDigits(\"r7\") == \"\"", "assert clearDigits(\"rr\") == \"rr\"", "assert clearDigits(\"s7\") == \"\"", "assert clearDigits(\"s8\") == \"\"", "assert clearDigits(\"sk\") == \"sk\"", "assert clearDigits(\"u2\") == \"\"", "assert clearDigits(\"ve\") == \"ve\"", "assert clearDigits(\"vo\") == \"vo\"", "assert clearDigits(\"vq\") == \"vq\"", "assert clearDigits(\"x8\") == \"\"", "assert clearDigits(\"y3\") == \"\"", "assert clearDigits(\"yh\") == \"yh\"", "assert clearDigits(\"yp\") == \"yp\"", "assert clearDigits(\"z1\") == \"\"", "assert clearDigits(\"za\") == \"za\"", "assert clearDigits(\"ze\") == \"ze\"", "assert clearDigits(\"a8f\") == \"f\"", "assert clearDigits(\"ag3\") == \"a\"", "assert clearDigits(\"as8\") == \"a\"", "assert clearDigits(\"b4i\") == \"i\"", "assert clearDigits(\"br1\") == \"b\"", "assert clearDigits(\"c0e\") == \"e\"", "assert clearDigits(\"c5c\") == \"c\"", "assert clearDigits(\"c5n\") == \"n\"", "assert clearDigits(\"cqj\") == \"cqj\"", "assert clearDigits(\"dxm\") == \"dxm\"", "assert clearDigits(\"e8d\") == \"d\"", "assert clearDigits(\"f5m\") == \"m\"", "assert clearDigits(\"f6w\") == \"w\"", "assert clearDigits(\"f7d\") == \"d\"", "assert clearDigits(\"f7y\") == \"y\"", "assert clearDigits(\"g8l\") == \"l\"", "assert clearDigits(\"h6x\") == \"x\"", "assert clearDigits(\"in1\") == \"i\"", "assert clearDigits(\"j2a\") == \"a\"", "assert clearDigits(\"jil\") == \"jil\"", "assert clearDigits(\"l5r\") == \"r\"", "assert clearDigits(\"p0d\") == \"d\"", "assert clearDigits(\"pjj\") == \"pjj\"", "assert clearDigits(\"pjl\") == \"pjl\"", "assert clearDigits(\"qml\") == \"qml\"", "assert clearDigits(\"r1f\") == \"f\"", "assert clearDigits(\"r7p\") == \"p\"", "assert clearDigits(\"rfa\") == \"rfa\"", "assert clearDigits(\"s4d\") == \"d\"", "assert clearDigits(\"t6e\") == \"e\"", "assert clearDigits(\"u1k\") == \"k\"", "assert clearDigits(\"uov\") == \"uov\"", "assert clearDigits(\"vdz\") == \"vdz\"", "assert clearDigits(\"w7n\") == \"n\"", "assert clearDigits(\"w9r\") == \"r\"", "assert clearDigits(\"wbx\") == \"wbx\"", "assert clearDigits(\"yo5\") == \"y\"", "assert clearDigits(\"yp5\") == \"y\"", "assert clearDigits(\"z0t\") == \"t\"", "assert clearDigits(\"zo5\") == \"z\"", "assert clearDigits(\"zu1\") == \"z\"", "assert clearDigits(\"b4y6\") == \"\"", "assert clearDigits(\"b9fh\") == \"fh\"", "assert clearDigits(\"bjsc\") == \"bjsc\"", "assert clearDigits(\"bnrp\") == \"bnrp\"", "assert clearDigits(\"c0m2\") == \"\"", "assert clearDigits(\"c5k5\") == \"\"", "assert clearDigits(\"cqo0\") == \"cq\"", "assert clearDigits(\"d4l8\") == \"\"", "assert clearDigits(\"du0s\") == \"ds\"", "assert clearDigits(\"e4y5\") == \"\"", "assert clearDigits(\"e6v1\") == \"\"", "assert clearDigits(\"e7f8\") == \"\"", "assert clearDigits(\"f8yd\") == \"yd\"", "assert clearDigits(\"fai7\") == \"fa\"", "assert clearDigits(\"ge1n\") == \"gn\"", "assert clearDigits(\"h6q3\") == \"\"", "assert clearDigits(\"i1nc\") == \"nc\"", "assert clearDigits(\"i2oz\") == \"oz\"", "assert clearDigits(\"i9nb\") == \"nb\"", "assert clearDigits(\"id49\") == \"\"", "assert clearDigits(\"j6m0\") == \"\"", "assert clearDigits(\"ja1v\") == \"jv\"", "assert clearDigits(\"jfho\") == \"jfho\"", "assert clearDigits(\"jnw1\") == \"jn\"", "assert clearDigits(\"jtt1\") == \"jt\"", "assert clearDigits(\"k6pu\") == \"pu\"", "assert clearDigits(\"k9ib\") == \"ib\"", "assert clearDigits(\"l4v4\") == \"\"", "assert clearDigits(\"l6ov\") == \"ov\"", "assert clearDigits(\"m0e3\") == \"\"", "assert clearDigits(\"n1g5\") == \"\"", "assert clearDigits(\"nn57\") == \"\"", "assert clearDigits(\"nt2h\") == \"nh\"", "assert clearDigits(\"oz70\") == \"\"", "assert clearDigits(\"p3m7\") == \"\"", "assert clearDigits(\"p9y2\") == \"\"", "assert clearDigits(\"q2fz\") == \"fz\"", "assert clearDigits(\"q6zc\") == \"zc\"", "assert clearDigits(\"qk5k\") == \"qk\"", "assert clearDigits(\"r3r9\") == \"\"", "assert clearDigits(\"s0j2\") == \"\"", "assert clearDigits(\"s5h7\") == \"\"", "assert clearDigits(\"smxj\") == \"smxj\"", "assert clearDigits(\"sp2a\") == \"sa\"", "assert clearDigits(\"spr7\") == \"sp\"", "assert clearDigits(\"t7dl\") == \"dl\"", "assert clearDigits(\"t9yw\") == \"yw\"", "assert clearDigits(\"u0n0\") == \"\"", "assert clearDigits(\"u5e6\") == \"\"", "assert clearDigits(\"uw9t\") == \"ut\"", "assert clearDigits(\"v0c0\") == \"\"", "assert clearDigits(\"w6fw\") == \"fw\"", "assert clearDigits(\"wguq\") == \"wguq\"", "assert clearDigits(\"xr38\") == \"\"", "assert clearDigits(\"y5hx\") == \"hx\"", "assert clearDigits(\"y6t7\") == \"\"", "assert clearDigits(\"ya9f\") == \"yf\"", "assert clearDigits(\"yso9\") == \"ys\"", "assert clearDigits(\"z2c3\") == \"\"", "assert clearDigits(\"z3cq\") == \"cq\"", "assert clearDigits(\"a0id5\") == \"i\"", "assert clearDigits(\"ba55v\") == \"v\"", "assert clearDigits(\"baz79\") == \"b\"", "assert clearDigits(\"bl0m8\") == \"b\"", "assert clearDigits(\"bmeid\") == \"bmeid\"", "assert clearDigits(\"c2yrj\") == \"yrj\"", "assert clearDigits(\"c5wdl\") == \"wdl\"", "assert clearDigits(\"df2x7\") == \"d\"", "assert clearDigits(\"drzsy\") == \"drzsy\"", "assert clearDigits(\"du78a\") == \"a\"", "assert clearDigits(\"e2tqc\") == \"tqc\"", "assert clearDigits(\"e8raq\") == \"raq\"", "assert clearDigits(\"ed72v\") == \"v\"", "assert clearDigits(\"fy9m2\") == \"f\"", "assert clearDigits(\"g0nn2\") == \"n\"", "assert clearDigits(\"g8bvb\") == \"bvb\"", "assert clearDigits(\"hc41d\") == \"d\"", "assert clearDigits(\"j4y8y\") == \"y\"", "assert clearDigits(\"j8x7y\") == \"y\"", "assert clearDigits(\"jm55x\") == \"x\"", "assert clearDigits(\"jt33s\") == \"s\"", "assert clearDigits(\"k1z4z\") == \"z\"", "assert clearDigits(\"l8uj7\") == \"u\"", "assert clearDigits(\"l9rvn\") == \"rvn\"", "assert clearDigits(\"m0br9\") == \"b\"", "assert clearDigits(\"nok44\") == \"n\"", "assert clearDigits(\"nozlr\") == \"nozlr\"", "assert clearDigits(\"o3s9c\") == \"c\"", "assert clearDigits(\"o5i0m\") == \"m\"", "assert clearDigits(\"o7vi1\") == \"v\"", "assert clearDigits(\"p7s1w\") == \"w\"", "assert clearDigits(\"p7tx2\") == \"t\"", "assert clearDigits(\"q2re1\") == \"r\"", "assert clearDigits(\"rb67c\") == \"c\"", "assert clearDigits(\"t4i6c\") == \"c\"", "assert clearDigits(\"td2w6\") == \"t\"", "assert clearDigits(\"v5dm5\") == \"d\"", "assert clearDigits(\"w3jjw\") == \"jjw\"", "assert clearDigits(\"w8l8w\") == \"w\"", "assert clearDigits(\"wg10l\") == \"l\"", "assert clearDigits(\"xms91\") == \"x\"", "assert clearDigits(\"xt40w\") == \"w\"", "assert clearDigits(\"y8oi1\") == \"o\"", "assert clearDigits(\"z6kxk\") == \"kxk\"", "assert clearDigits(\"a0l5id\") == \"id\"", "assert clearDigits(\"a4qis2\") == \"qi\"", "assert clearDigits(\"a5ie0u\") == \"iu\"", "assert clearDigits(\"a9g3xu\") == \"xu\"", "assert clearDigits(\"b2t6n4\") == \"\"", "assert clearDigits(\"bf21mh\") == \"mh\"", "assert clearDigits(\"bsilt8\") == \"bsil\"", "assert clearDigits(\"c5ba62\") == \"\"", "assert clearDigits(\"dd6fyq\") == \"dfyq\"", "assert clearDigits(\"e3bjd1\") == \"bj\"", "assert clearDigits(\"e9u3p1\") == \"\"", "assert clearDigits(\"et6s1v\") == \"ev\"", "assert clearDigits(\"f2s0zb\") == \"zb\"", "assert clearDigits(\"g2r1g4\") == \"\"", "assert clearDigits(\"gbysb5\") == \"gbys\"", "assert clearDigits(\"h0u0q1\") == \"\"", "assert clearDigits(\"h1h6cg\") == \"cg\"", "assert clearDigits(\"heg190\") == \"\"", "assert clearDigits(\"i2zm51\") == \"\"", "assert clearDigits(\"i3gydv\") == \"gydv\"", "assert clearDigits(\"i4a7ha\") == \"ha\"", "assert clearDigits(\"ifqm90\") == \"if\"", "assert clearDigits(\"jt7q1a\") == \"ja\"", "assert clearDigits(\"kav1yt\") == \"kayt\"", "assert clearDigits(\"kj73v0\") == \"\"", "assert clearDigits(\"kxww6u\") == \"kxwu\"", "assert clearDigits(\"li5i56\") == \"\"", "assert clearDigits(\"m5ya9h\") == \"yh\"", "assert clearDigits(\"n3pxg3\") == \"px\"", "assert clearDigits(\"opu587\") == \"\"", "assert clearDigits(\"otj6y4\") == \"ot\"", "assert clearDigits(\"p0o0c6\") == \"\"", "assert clearDigits(\"p3r6z7\") == \"\"", "assert clearDigits(\"p7hc43\") == \"\"", "assert clearDigits(\"phhe19\") == \"ph\"", "assert clearDigits(\"q2i3e7\") == \"\"", "assert clearDigits(\"q2q4s8\") == \"\"", "assert clearDigits(\"qbu3sp\") == \"qbsp\"", "assert clearDigits(\"qp72ua\") == \"ua\"", "assert clearDigits(\"qty232\") == \"\"", "assert clearDigits(\"r0a7fo\") == \"fo\"", "assert clearDigits(\"r5pa2e\") == \"pe\"", "assert clearDigits(\"r5z1e7\") == \"\"", "assert clearDigits(\"rrog44\") == \"rr\"", "assert clearDigits(\"s8q6um\") == \"um\"", "assert clearDigits(\"t3l0ru\") == \"ru\"", "assert clearDigits(\"t3lcnd\") == \"lcnd\"", "assert clearDigits(\"tyd2x1\") == \"ty\"", "assert clearDigits(\"u2ae3h\") == \"ah\"", "assert clearDigits(\"u2pu01\") == \"\"", "assert clearDigits(\"u6woh8\") == \"wo\"", "assert clearDigits(\"uwj14x\") == \"ux\"", "assert clearDigits(\"v1z4l6\") == \"\"", "assert clearDigits(\"v3s0zh\") == \"zh\"", "assert clearDigits(\"v6am30\") == \"\"", "assert clearDigits(\"x2b0v8\") == \"\"", "assert clearDigits(\"y0z1x0\") == \"\"", "assert clearDigits(\"y8llwa\") == \"llwa\"", "assert clearDigits(\"yk51e6\") == \"\"", "assert clearDigits(\"ys4w11\") == \"\"", "assert clearDigits(\"z6vuq2\") == \"vu\"", "assert clearDigits(\"a7a2n2n\") == \"n\"", "assert clearDigits(\"bn9udeu\") == \"budeu\"", "assert clearDigits(\"c0jez2o\") == \"jeo\"", "assert clearDigits(\"c4ix52q\") == \"q\"", "assert clearDigits(\"cg7b2d3\") == \"c\"", "assert clearDigits(\"ch19igg\") == \"igg\"", "assert clearDigits(\"cv20rb9\") == \"r\"", "assert clearDigits(\"d7h0o9w\") == \"w\"", "assert clearDigits(\"du68lwc\") == \"lwc\"", "assert clearDigits(\"e6qn3ru\") == \"qru\"", "assert clearDigits(\"f1ea54f\") == \"f\"", "assert clearDigits(\"g1m2x0g\") == \"g\"", "assert clearDigits(\"h3sa5lj\") == \"slj\"", "assert clearDigits(\"hrk3i6m\") == \"hrm\"", "assert clearDigits(\"hv6s4os\") == \"hos\"", "assert clearDigits(\"j4a4u4f\") == \"f\"", "assert clearDigits(\"k7g6o9y\") == \"y\"", "assert clearDigits(\"kmt1o52\") == \"k\"", "assert clearDigits(\"kwgk67c\") == \"kwc\"", "assert clearDigits(\"l8t6i0r\") == \"r\"", "assert clearDigits(\"ld3z88o\") == \"o\"", "assert clearDigits(\"m9fgwff\") == \"fgwff\"", "assert clearDigits(\"maqjhpk\") == \"maqjhpk\"", "assert clearDigits(\"moabrk6\") == \"moabr\"", "assert clearDigits(\"mye4h57\") == \"m\"", "assert clearDigits(\"nd2ma91\") == \"n\"", "assert clearDigits(\"nf08f2w\") == \"w\"", "assert clearDigits(\"nx57rbx\") == \"rbx\"", "assert clearDigits(\"o0e7t7t\") == \"t\"", "assert clearDigits(\"ox52vt5\") == \"v\"", "assert clearDigits(\"p1fr4a0\") == \"f\"", "assert clearDigits(\"p5icd89\") == \"i\"", "assert clearDigits(\"p6f2v3t\") == \"t\"", "assert clearDigits(\"p6qn89x\") == \"x\"", "assert clearDigits(\"qs8j5wn\") == \"qwn\"", "assert clearDigits(\"r8m2r1n\") == \"n\"", "assert clearDigits(\"spu6f23\") == \"s\"", "assert clearDigits(\"t4thjrh\") == \"thjrh\"", "assert clearDigits(\"t6zc1l5\") == \"z\"", "assert clearDigits(\"t8yedbd\") == \"yedbd\"", "assert clearDigits(\"tok2p24\") == \"t\"", "assert clearDigits(\"tt57v3f\") == \"f\"", "assert clearDigits(\"tt5wu2o\") == \"two\"", "assert clearDigits(\"tux4ne2\") == \"tun\"", "assert clearDigits(\"u1kjh25\") == \"k\"", "assert clearDigits(\"u4y2w5u\") == \"u\"", "assert clearDigits(\"v1m1o2h\") == \"h\"", "assert clearDigits(\"v6s8l6u\") == \"u\"", "assert clearDigits(\"v9o0vjl\") == \"vjl\"", "assert clearDigits(\"v9q6k4g\") == \"g\"", "assert clearDigits(\"vh2dxdi\") == \"vdxdi\"", "assert clearDigits(\"vv4kd63\") == \"v\"", "assert clearDigits(\"vw06mmj\") == \"mmj\"", "assert clearDigits(\"vxmp8da\") == \"vxmda\"", "assert clearDigits(\"w9n2xx5\") == \"x\"", "assert clearDigits(\"x2xd83e\") == \"e\"", "assert clearDigits(\"x9n7a5q\") == \"q\"", "assert clearDigits(\"y0raf3q\") == \"raq\"", "assert clearDigits(\"y9j0d5p\") == \"p\"", "assert clearDigits(\"yfc5vxu\") == \"yfvxu\"", "assert clearDigits(\"z0ty6as\") == \"tas\"", "assert clearDigits(\"z2o7nmm\") == \"nmm\"", "assert clearDigits(\"zbck7i6\") == \"zbc\"", "assert clearDigits(\"a6rx3n42\") == \"\"", "assert clearDigits(\"bw6egyh1\") == \"begy\"", "assert clearDigits(\"bx45o6m5\") == \"\"", "assert clearDigits(\"bzcd7txg\") == \"bzctxg\"", "assert clearDigits(\"c2p4yp01\") == \"\"", "assert clearDigits(\"dr56auv2\") == \"au\"", "assert clearDigits(\"f4ljcu25\") == \"lj\"", "assert clearDigits(\"f5e3o0sh\") == \"sh\"", "assert clearDigits(\"feha88wz\") == \"fewz\"", "assert clearDigits(\"fiy9srf0\") == \"fisr\"", "assert clearDigits(\"fnq30ma0\") == \"fm\"", "assert clearDigits(\"ft0bh5x1\") == \"fb\"", "assert clearDigits(\"fzrxo2z2\") == \"fzrx\"", "assert clearDigits(\"g5kdz203\") == \"\"", "assert clearDigits(\"g9m1fz75\") == \"\"", "assert clearDigits(\"gs58xx35\") == \"\"", "assert clearDigits(\"h6onhdii\") == \"onhdii\"", "assert clearDigits(\"h7p8o6x4\") == \"\"", "assert clearDigits(\"hw1pbuec\") == \"hpbuec\"", "assert clearDigits(\"i3flxv56\") == \"fl\"", "assert clearDigits(\"i6w6ok8e\") == \"oe\"", "assert clearDigits(\"jl0d3e0w\") == \"jw\"", "assert clearDigits(\"jo8a4fxu\") == \"jfxu\"", "assert clearDigits(\"k5h3mzq8\") == \"mz\"", "assert clearDigits(\"l2lwg0bs\") == \"lwbs\"", "assert clearDigits(\"ljwns518\") == \"lj\"", "assert clearDigits(\"lufw026e\") == \"le\"", "assert clearDigits(\"mdctt1f4\") == \"mdct\"", "assert clearDigits(\"n2xy8vxm\") == \"xvxm\"", "assert clearDigits(\"n5a4qn7d\") == \"qd\"", "assert clearDigits(\"n9oz4ea3\") == \"oe\"", "assert clearDigits(\"nu78p6o5\") == \"\"", "assert clearDigits(\"o2b7p1e4\") == \"\"", "assert clearDigits(\"o4t1h7mz\") == \"mz\"", "assert clearDigits(\"o5o2x4w9\") == \"\"", "assert clearDigits(\"o6c2kq07\") == \"\"", "assert clearDigits(\"o7zo3y6f\") == \"zf\"", "assert clearDigits(\"p8s1a4wx\") == \"wx\"", "assert clearDigits(\"q8r9s4so\") == \"so\"", "assert clearDigits(\"qf27te9y\") == \"ty\"", "assert clearDigits(\"qg8t7oid\") == \"qoid\"", "assert clearDigits(\"rb1d7o85\") == \"\"", "assert clearDigits(\"rxh0kyvi\") == \"rxkyvi\"", "assert clearDigits(\"s7l5w5xi\") == \"xi\"", "assert clearDigits(\"szsn7lq5\") == \"szsl\"", "assert clearDigits(\"t0k5x1ks\") == \"ks\"", "assert clearDigits(\"t1w9i3bq\") == \"bq\"", "assert clearDigits(\"t2p5bydr\") == \"bydr\"", "assert clearDigits(\"t5vkg6ku\") == \"vkku\"", "assert clearDigits(\"tq72hlqr\") == \"hlqr\"", "assert clearDigits(\"u4rrqj91\") == \"rr\"", "assert clearDigits(\"uggh9t3n\") == \"uggn\"", "assert clearDigits(\"umfnp1c4\") == \"umfn\"", "assert clearDigits(\"vp3ii533\") == \"\"", "assert clearDigits(\"vx89pf72\") == \"\"", "assert clearDigits(\"w4roh768\") == \"\"", "assert clearDigits(\"woof1e40\") == \"wo\"", "assert clearDigits(\"y2w8dqc7\") == \"dq\"", "assert clearDigits(\"y4ig1xos\") == \"ixos\"", "assert clearDigits(\"ypl25wll\") == \"ywll\"", "assert clearDigits(\"z4owpc43\") == \"ow\"", "assert clearDigits(\"zgaf84he\") == \"zghe\"", "assert clearDigits(\"zi78v3u3\") == \"\"", "assert clearDigits(\"a3rm4b94k\") == \"k\"", "assert clearDigits(\"b9ywea6v9\") == \"ywe\"", "assert clearDigits(\"c2tp24p7j\") == \"j\"", "assert clearDigits(\"c5w3ux33a\") == \"a\"", "assert clearDigits(\"coi5n0elq\") == \"coelq\"", "assert clearDigits(\"cxq0lz1bf\") == \"cxlbf\"", "assert clearDigits(\"e8yp04k3k\") == \"k\"", "assert clearDigits(\"em79m5n8h\") == \"h\"", "assert clearDigits(\"f2bl31wo4\") == \"w\"", "assert clearDigits(\"g3n3h7wyz\") == \"wyz\"", "assert clearDigits(\"g6x8pqcbx\") == \"pqcbx\"", "assert clearDigits(\"g7b9t9v4d\") == \"d\"", "assert clearDigits(\"h6o1m8gvu\") == \"gvu\"", "assert clearDigits(\"h7lhn9g1s\") == \"lhs\"", "assert clearDigits(\"her5et5xs\") == \"heexs\"", "assert clearDigits(\"i2sxr574m\") == \"m\"", "assert clearDigits(\"i3p9tsf6b\") == \"tsb\"", "assert clearDigits(\"i3qnr77li\") == \"qli\"", "assert clearDigits(\"iibsg4n50\") == \"iib\"", "assert clearDigits(\"it66c2y2d\") == \"d\"", "assert clearDigits(\"iyj25a85b\") == \"b\"", "assert clearDigits(\"j6y7o0h2v\") == \"v\"", "assert clearDigits(\"j8dxteq36\") == \"dxt\"", "assert clearDigits(\"j8l6a4clf\") == \"clf\"", "assert clearDigits(\"jksf07ot9\") == \"jko\"", "assert clearDigits(\"l7cub30k8\") == \"c\"", "assert clearDigits(\"m6f5udqff\") == \"udqff\"", "assert clearDigits(\"n7t5r8ugj\") == \"ugj\"", "assert clearDigits(\"njnmtf4cn\") == \"njnmtcn\"", "assert clearDigits(\"o3d2bus50\") == \"b\"", "assert clearDigits(\"p5t4k5vi5\") == \"v\"", "assert clearDigits(\"p5td79f4t\") == \"t\"", "assert clearDigits(\"p6m3pz4fd\") == \"pfd\"", "assert clearDigits(\"p8r4j4c3g\") == \"g\"", "assert clearDigits(\"pfxps7z1r\") == \"pfxpr\"", "assert clearDigits(\"q0mwg3oq6\") == \"mwo\"", "assert clearDigits(\"q2r6rs41l\") == \"l\"", "assert clearDigits(\"q4gi7d0xz\") == \"gxz\"", "assert clearDigits(\"qol720q8y\") == \"y\"", "assert clearDigits(\"r2km32j5u\") == \"u\"", "assert clearDigits(\"r5k8zc4d8\") == \"z\"", "assert clearDigits(\"se40me06n\") == \"n\"", "assert clearDigits(\"sk5ux4if8\") == \"sui\"", "assert clearDigits(\"t8c5y4lb7\") == \"l\"", "assert clearDigits(\"uiilq1r6j\") == \"uiilj\"", "assert clearDigits(\"ul9r0v3q1\") == \"u\"", "assert clearDigits(\"uouf2kh2r\") == \"uoukr\"", "assert clearDigits(\"w5d6n9zx5\") == \"z\"", "assert clearDigits(\"w6ozguz51\") == \"ozg\"", "assert clearDigits(\"wc63j8y1e\") == \"e\"", "assert clearDigits(\"ww4l70lq3\") == \"l\"", "assert clearDigits(\"wyd2o446z\") == \"z\"", "assert clearDigits(\"x6zt9t05c\") == \"c\"", "assert clearDigits(\"xhruqnxxe\") == \"xhruqnxxe\"", "assert clearDigits(\"xtc7govl3\") == \"xtgov\"", "assert clearDigits(\"y4h1oz8jb\") == \"ojb\"", "assert clearDigits(\"yfq661oll\") == \"oll\"", "assert clearDigits(\"z3h7j5nk5\") == \"n\"", "assert clearDigits(\"zd0iq9c00\") == \"z\"", "assert clearDigits(\"a8p6jiwf02\") == \"ji\"", "assert clearDigits(\"ap6g9w97jb\") == \"jb\"", "assert clearDigits(\"ay57t9yyk7\") == \"yy\"", "assert clearDigits(\"b7sg72b5cx\") == \"cx\"", "assert clearDigits(\"b8p7s4pyrs\") == \"pyrs\"", "assert clearDigits(\"b8u4pzb790\") == \"\"", "assert clearDigits(\"bjbd2091lp\") == \"lp\"", "assert clearDigits(\"bq44em09o7\") == \"\"", "assert clearDigits(\"bu0j31bjv2\") == \"bj\"", "assert clearDigits(\"c1nd0s6vie\") == \"nvie\"", "assert clearDigits(\"cd80u3vn39\") == \"\"", "assert clearDigits(\"cdn3z117tr\") == \"tr\"", "assert clearDigits(\"cx9t56e7nd\") == \"nd\"", "assert clearDigits(\"d2d9rq30e6\") == \"\"", "assert clearDigits(\"d8st19f1ie\") == \"ie\"", "assert clearDigits(\"d9e7wmdk89\") == \"wm\"", "assert clearDigits(\"dbkbk3t55q\") == \"dbkq\"", "assert clearDigits(\"e0yq49n0ga\") == \"ga\"", "assert clearDigits(\"e4jlf08qw4\") == \"jq\"", "assert clearDigits(\"e7vp6t6t65\") == \"\"", "assert clearDigits(\"f3y4exe5qi\") == \"exqi\"", "assert clearDigits(\"f6p9xpx0fi\") == \"xpfi\"", "assert clearDigits(\"f6wg1qz23l\") == \"wl\"", "assert clearDigits(\"fst151s3l9\") == \"\"", "assert clearDigits(\"fz85ypmge5\") == \"ypmg\"", "assert clearDigits(\"g8wus652q6\") == \"\"", "assert clearDigits(\"h3lfig541k\") == \"lk\"", "assert clearDigits(\"hsfc6042oa\") == \"oa\"", "assert clearDigits(\"i0q5ol74r0\") == \"\"", "assert clearDigits(\"i0x4i9d4gv\") == \"gv\"", "assert clearDigits(\"i4g5rlwh9n\") == \"rlwn\"", "assert clearDigits(\"il92y1u4o1\") == \"\"", "assert clearDigits(\"ixo42dx5f5\") == \"id\"", "assert clearDigits(\"jwuv6h8j82\") == \"jw\"", "assert clearDigits(\"kh3b4re99d\") == \"kd\"", "assert clearDigits(\"mef8tx7y80\") == \"me\"", "assert clearDigits(\"mj1tc0u5xl\") == \"mtxl\"", "assert clearDigits(\"mqq145kuep\") == \"kuep\"", "assert clearDigits(\"r0tfctt580\") == \"tf\"", "assert clearDigits(\"r1p2h8nt67\") == \"\"", "assert clearDigits(\"r8zrsu8jc1\") == \"zrsj\"", "assert clearDigits(\"s2mav4ix3q\") == \"maiq\"", "assert clearDigits(\"saw6s6klsz\") == \"saklsz\"", "assert clearDigits(\"t5h0m2m8t8\") == \"\"", "assert clearDigits(\"tf0il6wahh\") == \"tiwahh\"", "assert clearDigits(\"tli2t846ly\") == \"ly\"", "assert clearDigits(\"unx5u2k0r4\") == \"un\"", "assert clearDigits(\"vxgx8tz59z\") == \"vxgz\"", "assert clearDigits(\"w3thh36pky\") == \"tpky\"", "assert clearDigits(\"x7n0m6z9vs\") == \"vs\"", "assert clearDigits(\"xm40d3ogw0\") == \"og\"", "assert clearDigits(\"xns9mkq0b6\") == \"xnmk\"", "assert clearDigits(\"y0w6bck2be\") == \"bcbe\"", "assert clearDigits(\"z0s8nwutur\") == \"nwutur\"", "assert clearDigits(\"z4mpuk4v18\") == \"mp\"", "assert clearDigits(\"zbn2ao0be7\") == \"zbab\"", "assert clearDigits(\"zh15c0s1rt\") == \"rt\"", "assert clearDigits(\"c1i9r9j4r6n5\") == \"\"", "assert clearDigits(\"zkjsi36oef901\") == \"zkj\"", "assert clearDigits(\"zjh329x8jtfso8kwkty9\") == \"jtfskwkt\"", "assert clearDigits(\"vs81sl54n4j5p4l5qgr7j\") == \"qgj\"", "assert clearDigits(\"f5y4m2zf54xa54g2q2uhw3\") == \"uh\"", "assert clearDigits(\"m8tei0i53e02n4u7rem68w5ra\") == \"rra\"", "assert clearDigits(\"r0vp84m4emz923a2o8v8w9mo1t\") == \"mt\"", "assert clearDigits(\"yh53ek86xpy0c503co8lxj1y45t\") == \"clt\"", "assert clearDigits(\"ed2e4g52jit138r4p7a4ikz172a1\") == \"\"", "assert clearDigits(\"g4ls31z1a8m1oxdcnmswq63evh34\") == \"oxdcnmse\"", "assert clearDigits(\"l6uj01nvjdqs185gkss8077554q0\") == \"\"", "assert clearDigits(\"ud8nlcu7xuy8wfu5548ee2ns73s03\") == \"unlcx\"", "assert clearDigits(\"xigk5131m1cerc8jo5r8gx30x2782\") == \"c\"", "assert clearDigits(\"i2s6v5h8yergux2tuat94q17lhj1534\") == \"yergu\"", "assert clearDigits(\"r3s1geo857q7rsf256gcdhcu936y3j2\") == \"gcd\"", "assert clearDigits(\"oam1vf0r91dyte2xytti5yt56b35g8983\") == \"oadyt\"", "assert clearDigits(\"i6srdf79db08ggmss0560n9rt3f54fhc4602\") == \"sr\"", "assert clearDigits(\"q3m1r1ss07b3om5n4r2at982k8tz3h6keym5beir\") == \"tkeybeir\"", "assert clearDigits(\"n4a1l1q3o8n4s8in93ua9x98d4m3z2rzr1vaf26u7\") == \"rzv\"", "assert clearDigits(\"z2s1e8kwvzlq73i8j94o2ev6imr700ql3280cl7ug\") == \"kwcug\"", "assert clearDigits(\"w6nh0k95xou96cu04z66j9hi48rr26uqo8b8u1cdxp59y\") == \"uqcdy\"", "assert clearDigits(\"vjh4tn3089jalni54towo0p1nhf5qt9mrp2w4pe471c242\") == \"jaltownh\"", "assert clearDigits(\"tg4w40ob4s24eh46ac25cu03t4jlgl59l22m7o8r8c2n3vy\") == \"jvy\"", "assert clearDigits(\"uk46qh18z1ss2g6b43fk6th57g93tg0xj3q140s2k7qywtq\") == \"qywtq\"", "assert clearDigits(\"fbc9kc197q12ut1s28m8q5rhb4s09k54az78is6rs4kf8cq2\") == \"irkc\"", "assert clearDigits(\"k3cmt4y92r21e3oi3nes60u3c17e9vjev1v611sn3o36y096z4d\") == \"d\"", "assert clearDigits(\"n0i1v1w8y7z1t7tr8jme8c7ml7mgla3z75y5d06a7g52hr80276ub\") == \"tub\"", "assert clearDigits(\"y9e5iv0nab91s82u8jk9l8b5j2rv57r11yi4w312gbg4q6o5dd03m1\") == \"gb\"", "assert clearDigits(\"i2oa20nt9p99dbr8un13b6i328k5y1dyk18g09oiyi8v6ee1hg9140d\") == \"oid\"", "assert clearDigits(\"t4redjnkd3w4obsap9106n880x3361n349p8l3v3mmag76w10n7gq8xr\") == \"mgxr\"", "assert clearDigits(\"m4x5g6i5b0cc42m6i5nu6e7u87t7q0nvmt4po7yg4l7o7iahul41095lu\") == \"nvmpylu\"", "assert clearDigits(\"uqv6cf6147lh2c7b8z44kwqt792debo9bgdze5v94astl3qm96w62kwxh0ftf9\") == \"kdebbgdaskwxft\"", "assert clearDigits(\"y2vv8dg74xhk97b2z682jeyosc72ww3lgfh1j76519t0q9bg984u2028r4f5j5\") == \"\"", "assert clearDigits(\"y9yidqt1o56zvr5oi59886r6y68ki251y0f2actju71p6itf1pmc4se09733a5y44m\") == \"actm\"", "assert clearDigits(\"m9p5p6b8zj00hc8f11m0f0w3z0cw5szvch1wixp7qsbpiccck5r101wzkbl56agc52872\") == \"cszvcwixqsbpicw\"", "assert clearDigits(\"d4wj65jy00lbszyb276iiuc316325b59z1c2m1f8r7wxz2ox1k5kbb024ixti700w84iz750hb\") == \"wxhb\"", "assert clearDigits(\"vz1zi2i8zzqkw4c81fsm742278vzl14kz230t94ml5r175a8b3br30q2rk88f9jkyh4yu26s50\") == \"jk\"", "assert clearDigits(\"if3gl0jn3fj04ebu2i75e99e6911miv619e7jrlo2b6qxgr5rg7w2cuzq61a02hcf0jdtb9z2jm\") == \"jrlqxgrchcjdtjm\"", "assert clearDigits(\"b9b0i3fh5r12d2pu81v9srp31p57zx33xb38z8s9j2flq738emd27q5ov26e1ly65lw1o4szu8wz4z\") == \"elszwz\"", "assert clearDigits(\"yj5e3tolfg1kf24l9067vt5q9nzj02145dnbaipf8l1bj7t0wa6018x8a77cg28yh6w1u2510d1t0720bj\") == \"bj\"", "assert clearDigits(\"f6s5i0lk9b7u0lak6n76t25e4xu45a1kbkgk9t7i3ta0w66kgi52mpc8l63qwsk31xh9y6wtfsa32e3l38e\") == \"lkbkgkmqwxwte\"", "assert clearDigits(\"ybcyio38mkof2a2gge3ol90j0jl20pol80w1lc64n858v39qz10gqk1v28h40s3imgq0h1f4109x52rt5kd6\") == \"ybcymkrk\"", "assert clearDigits(\"avle6g0xfka8dc3xty3ftt4kn06lt8ooar7b9jj2p4i5pl198zu003ib628195rum2j97q5j9968b891e87o9\") == \"avlxf\"", "assert clearDigits(\"nlnnsd5v2v4k8o14w9wg01i3tirx58hz69s2qoys097ji49tu34ibik14ceqs6lsnb8lk5px505lx6n3rw7mwj95vo\") == \"nlnntiqibceqlsnlrmvo\"", "assert clearDigits(\"sl2yqa6z8i0eqyqnla250rh8olipeu4oie5t16n8p2n67e391n01s7ol11qg93u6tuoy55no117861sj4wfno27p65212\") == \"syqeqyq\"", "assert clearDigits(\"f9u8h2gnl77bnvjg6r7ya9v3m6687ny9x14n5685tmerprc64ap805ka9amr4rh6v178wl1tr83a5ji0g53ia35ye792k5\") == \"tmerka\"", "assert clearDigits(\"i8x2a9mk1ij70m87jkvh0mt91zkr48vqc0yh1q05f14fkr16izr361ubera5zrjb1i6su94o9qbc36f2j0a0r157hfszvk43t\") == \"jkvzvfuberzrhfszt\"", "assert clearDigits(\"e9i1k6n2kz5m4p44yqsbunx38bpmpv07257z6b5st7itr95b488z7aa8wbz1647p21a4r25451m2a7pd4rbhh32nz9ursbkbj3\") == \"prbnursbkb\"", "assert clearDigits(\"r5r6he21tnfs5pe94476ba8e84gy3fgd6h9mymln1n0dq0b069787012fv9d6lgnmy877431tw0tdhf91n8w9257emtwd6v335\") == \"em\"", "assert clearDigits(\"cgxv8552k0d5ai80g0b0nr69m7w2m0f8gpq43s7y2k7b23vb86uc9lfvbp1a219yow6p8x3vwnk00ego45854337s71qk94t8dn\") == \"udn\"", "assert clearDigits(\"a6mz5dn1ul6t554s31wm66n6p0v1jh8nqxm9v56hb1k9m829dv89uv4y4xj9uus9370tsqkwz7s880iduvl72ynhj7777uc7a81s\") == \"jnutsqidus\"", "assert clearDigits(\"afu0t3g2ghk7b18l9vq5512e70w2o6g6u6y8o1ei7n8s5yt519xvlat5fehym744q4hy84ynl7vf4l10dmoo4z64j2agasjhav67\") == \"xvlafeyndmagasjh\"", "assert clearDigits(\"b3e6ps3n6gln92ew22c07h70gf05acuw6914hdh9o6bymt71h26tpzg39qo61111lo6202dc7t79o6m5j5kpwl977n37h9jcl3c6\") == \"jc\"", "assert clearDigits(\"cdyh47o9zt1596d4u1u9s5mx65q6dt9pf44fc123n6iaagrz3g316h9v437m7z65hz7twx430x34vbujrg00668c74xl0eaq8s3b\") == \"xeab\"", "assert clearDigits(\"cltw4wvsrlqn30mzolka2g361324ft01v40tkpja7ao3e2w060iffq23878of08tm48q75jy79l06lf5t624gvbds3zdyy2ii4ah\") == \"cltwvsgvbdzdyiah\"", "assert clearDigits(\"ec5b3jnt77x8i0w07n59seei8m2o8805v8g7x4nt00ti49g5m0q4c0ah9iqoop0y0vxx4by7vtcx7b68fu7jd7c3e22kks4i51p1\") == \"aiqoovxbvtfk\"", "assert clearDigits(\"eg1ltq58xq04e09b49x1o9fx0ire50vmfd26n78f04sjyci4u0574dqlva4phtx3i9shrym8rim487w5j793n28f5ao27igvyd72\") == \"fisdqlvphtsigv\"", "assert clearDigits(\"evhv28f57t45xe4yh6j2y7dfey694qnx03s598y508w9xe52k9p6t1yv09z9g2jdl2yl6hwgl87345qtw6x2bjn268jzm005qt30\") == \"jdqt\"", "assert clearDigits(\"f4d0a6tbgl5tx05532j4d9u2vz7ueq5h8d8706cb17k1aro0bs542hwtta4m027pzjbqi555d5w2i6e9b8j2d73nkatuc9cis63c\") == \"ahwpznkatucc\"", "assert clearDigits(\"f7yg9uwv4tbns1p7gc4pjn93n4k89p5o20ka81f1iz6ek7a6414xcmuxoq343xjpzas45zfy42h2p6foyg1i1ddthpxh37yijlw2\") == \"yuwtbxcmuxjpzzfoyddthpyijl\"", "assert clearDigits(\"gg3gha5l10esx01z24l099xrc7i5u0x704mp0v47k5q3h5smb009ntrk66y3uqzl4j14btr6vzo9byps6j5411u0t788649p1br9\") == \"ntub\"", "assert clearDigits(\"h6p5qrj9zeh655v08kru24bzfx9o487r9881o7dqnfca26b93o4qv2m11f27w8x5zfu68488k7lw35a7g8rl86oib59a7s2r6g6d\") == \"od\"", "assert clearDigits(\"h9x1u1kwv843n6y6hqzw86fyz0px9w0l2132e1k213s7v2ucpmb7o38zka9a6zb48no97658s550w2g7cb9n49l8z7gv58hcmy8n\") == \"hcmn\"", "assert clearDigits(\"hkto8nk2zqp8m0248kc3l075w98ne875m7sfo2qun9380sziz39fl8s9gclw54f957ukew3q90098jgf900634d6xyqmo06oye4u\") == \"xyqoyu\"", "assert clearDigits(\"i0kaeh5hz4mollm4314k834a2k5zpo9g5e14117ixhdps9646mmtx82oh903e9z6e60qb6urus4893sogdbri3x17grqzpx8db4r\") == \"kixqsogdbgrqzpdr\"", "assert clearDigits(\"i5hg4j31h1pa7f6q37r1o1wy0alxx66ghsz9fp2w430xdnf43kfj2kz9b9vc641pl9152050w3mhvp645450obbysrt61sf3zzhr\") == \"waobbysszzhr\"", "assert clearDigits(\"jz69oix2zou852vktakm7hqv9b9u020qigs165u8019bw76f97x4j1a4a67sc49bpd1h1vcz32vr7i8ou6b473gygrc83tnes273\") == \"oivbpvgygt\"", "assert clearDigits(\"k9vl1i5k88aj7e4u86kd1m58e5yokp5wt7b2517sd69jg234rv17l9i5kw8ez9zecq9uuuwk3x4e7d2622bk02h0pr63dwmw03vs\") == \"kezecudwvs\"", "assert clearDigits(\"kuajla8ed875eg3u80amc61fhk0ym13yyx213c1r450x32i440t3h4izyje0q868m41rpi7j73qn726ne99k9m9204wo27x3v1u7\") == \"\"", "assert clearDigits(\"kz8mr360h8n2rb55up9yc1cdhl949cc310u3q2mvz033xm78qb9h8wbkkwah564idyoye80tytvk33x507m88ob4i9i57u37d665\") == \"uyqwbkki\"", "assert clearDigits(\"l9t9ep1c0r8xrbl0rf7k853lihk840aip76504l5ix9mpan2lfl892dr250lgz97lg81ohxwo0df8r9dapk856prs2fj427nkf99\") == \"eximplohxwddpn\"", "assert clearDigits(\"m2en24tlin6d5eu2129j48p6i7jpo15f13jyd59a13z4o3w0gd2rhm239t0u7p65y3mi8nz431rt6r32ci7znbriw3c707n3ta6w\") == \"cznbtw\"", "assert clearDigits(\"m9zi9xt08df3w5y8zrn2c8d3kz6bpvpovj4yw303ef8v273yq3m3d54m3y1m41279glw16eb43590p62zyyr7s0kf2r2d73b8sr0\") == \"zdzyys\"", "assert clearDigits(\"n1leoy5kk94jjg755s40xef3005a72gygg366x0hqz1lm50redukvahzu16pk5x78g839e81a2pp7y7645esh1v4ew743nw4jti4\") == \"ghqredenjt\"", "assert clearDigits(\"n2p2v9moslnf8j0eg9thky10tz7q559959k1ynz3m59yq78we6pqchot3010jaw1y9j9pr0h10csydf835m38z99s782ifocdpw5\") == \"moslywpqifocdp\"", "assert clearDigits(\"o2d2sw87x8h2o0h8sgfmzwko71lm8g1rl79h2o3m6yv201nkt522y12jihg09z979vdztl6n47r741493bhd7e0553t535h4xu8e\") == \"xe\"", "assert clearDigits(\"o2umivqhiqw3h0h4fw05u430a111k2ro5170k99l97x4qm63sk98x0a4rwn85y3z73kaj997u0sj4tf46e60h6jwh0wgq19ch7bt\") == \"jwwcbt\"", "assert clearDigits(\"o6t6zhspyq4vp8c8wcg42s7oz34b8j74dg685845gd13vzalp44n4w924489s4e4w5ih6azve79731ks6b1kxci1gqx6695i0puc\") == \"kkxpuc\"", "assert clearDigits(\"o7vdn646p8k4lus029n7g6ud19y3zb94nkflf0eph5uc7b927qf122n541uxoud9uuh6bb9r2rfa79q269o69k1cu92hm3ahxu19\") == \"nkuxouuhah\"", "assert clearDigits(\"ok51o2ej23z9l0q0ogdbb009hzh477dnc61kv672f62d3z68uv1c1lx5fr4r8nh84r9o53k962w4n1oaa9k495ft5g9r6s26nnbi\") == \"nnbi\"", "assert clearDigits(\"oxntx52mn360n4grm85r8a0pf69wzq555795r1f6b4x7m1sb6a02y7ec53x3q5qv7g83joozm6s99wg23fku4zetko5lqd24ny93\") == \"joofkzetkl\"", "assert clearDigits(\"p4piqik10xk9vp19l62926c1v4j6td3ek8m87h4i74w8mrl43u02y6qw89za6dp85e75a8d6yfrn18xlyg335kad2fm099co0522\") == \"yf\"", "assert clearDigits(\"p6bj4tsb1dve2bz76wg9bl7c1yq3uvncc1p206z228i2kni9z2t39nj7c31y919lntcb565sdwb2l3b44l91j58vi9247un623ic\") == \"btsdvwic\"", "assert clearDigits(\"p8ly4di78kbyp7643zwyvxzn6ml20mb02946odqh9ci6nq5u83ojgljs7m35mq7woo82z2thpl6m4jv45t280sn633gowf7s883e\") == \"lzwyodqcojglmwge\"", "assert clearDigits(\"p9zdhw87v2p3z5qf57l8w5c7c3p730nknf1zeep945giior782w97l1m05mlx5905ui6q14444iq7y6nbab7rgtpke3ijla11109\") == \"inbargtp\"", "assert clearDigits(\"qjoq30hj1l18o0clob5f2l2lt4325s83r997m6ed07r5pa43w5dv5d63mi5p2mey4hz2l9u267rlfph9dib0u2e156m6a6doynw7\") == \"mmrlfpdoyn\"", "assert clearDigits(\"r4o8qg64nf9f30fa27beaut614ysk9w68lcszj4504kfe49e08arr70h9d6e55a5me6any86d1aof42rhl93688k0s3myr679zt7\") == \"beylmz\"", "assert clearDigits(\"s5j5z2se03xu5l3geh666y63n1f7m7aa14z0l1nyapymjadjt6j771ib1hwqvx29j135x6n56lt2o150odflmkqdv51720xk11t2\") == \"nyapymjaodfl\"", "assert clearDigits(\"s7d3w3f1q7z6n5lcpzx3aqi42g16t3mcrbmcy0b5z5391s5c4pi7wzjaz7soby17ns3f0c4aork04w8fxs98fj3rvp866b43d6c6\") == \"lcpzmcrpwzjasonaof\"", "assert clearDigits(\"s9a7n5jt67n4ox3g96w1v8p3n8oiq56ce3qmt3q1d6xrzxj0461lxczth79i6xjw5n5kk78956v5yq4lh8a7876ee71b4ab39t48\") == \"ocqmxl\"", "assert clearDigits(\"sb0z9kg06pf0r88v46h8e9tpbe94anh0p1b8733otd8u566poe57so17e5w94m65a2h6pwtk48q47h3tg7t2phgitg029908g9dv\") == \"ptdv\"", "assert clearDigits(\"u5ovc061p1m9tdojvi9e9799nmx305sf01h0j72w36xt6l2mzmgr21j3a012a05i69hf9m44n6ienrm8931d43ums658uer959k1\") == \"\"", "assert clearDigits(\"u9t8v5p7s7b7vg16k8dq8ic9r613bc21pvi6cfxgsru3x5u842d4j09ea9c49bez1l3eqny4g209e33q07p37x60r65mqa560wto\") == \"pvcwto\"", "assert clearDigits(\"ues3a220svh331dn06v2f9wc9u9jq5q84r52vq76ryp2dz6ltaffjx7tdsc08vs954ol88xsh57s821mrbin182r347l4a2w9597\") == \"rydlta\"", "assert clearDigits(\"ueseawb7o5391t3bbhyy6gpw9p25g2s5qo7fajw6hx81hk7sn65h33htel5d0m34354x5vex9d2n430ovu70p0597c697dyyt5cm\") == \"uesbbhydyycm\"", "assert clearDigits(\"uzk007gwt1p48v1sgaw7kc7329aurq33v0605q71q3p1c3spl0n39u3xi344oqphb66102qpdgphngk7t3x1j21u6vvn3af5ayat\") == \"qpdgphnvvaayat\"", "assert clearDigits(\"v9p5v6o3wjjs15p8jo51zw8522o9t8l6t1ms41p0i2e5m7g4yozwr29b8965p9nm56ts54yuxm98h69ch60f8u98sdcgv47on22y\") == \"sdcy\"", "assert clearDigits(\"w0hjtwk7vn55so7a3ra1kkbh9en55oe812v32gn21epo1w13suzasg5pnd3rzzp3g14f4n1580c97w1y4hvp01u24u3vl1w7opt3\") == \"hjtwsrkesuzasvop\"", "assert clearDigits(\"x4m9eh8sujpdu3r7e0s8u52ucm4a57kn12fy29hn6af54zroo4b05b8029129c32d16sugz4o7y4ecu97ol0ut5og5dddz04xjlg\") == \"esugeouoddxjlg\"", "assert clearDigits(\"z7p2kg91i2f3p9ya8k74h4fx62b4stgj4gl4697l66c7n1a7t4t5zk9npe2f6531lkh36z29uho8at231s73z3b1k3f4tkgm992h\") == \"th\"", "assert clearDigits(\"e\") == \"e\"", "assert clearDigits(\"ap\") == \"ap\"", "assert clearDigits(\"jm\") == \"jm\"", "assert clearDigits(\"qh\") == \"qh\"", "assert clearDigits(\"rg\") == \"rg\"", "assert clearDigits(\"ss\") == \"ss\"", "assert clearDigits(\"sy\") == \"sy\"", "assert clearDigits(\"ue\") == \"ue\"", "assert clearDigits(\"b7b\") == \"b\"", "assert clearDigits(\"l5e\") == \"e\"", "assert clearDigits(\"aia9\") == \"ai\"", "assert clearDigits(\"ej4w\") == \"ew\"", "assert clearDigits(\"gpy8\") == \"gp\"", "assert clearDigits(\"i8gh\") == \"gh\"", "assert clearDigits(\"qce6\") == \"qc\"", "assert clearDigits(\"sa1o\") == \"so\"", "assert clearDigits(\"t6m3\") == \"\"", "assert clearDigits(\"z7k5\") == \"\"", "assert clearDigits(\"a9nx3\") == \"n\"", "assert clearDigits(\"aa0sc\") == \"asc\"", "assert clearDigits(\"k3ijx\") == \"ijx\"", "assert clearDigits(\"oo7h1\") == \"o\"", "assert clearDigits(\"q3ll7\") == \"l\"", "assert clearDigits(\"q9blg\") == \"blg\"", "assert clearDigits(\"efm0su\") == \"efsu\"", "assert clearDigits(\"gvf698\") == \"\"", "assert clearDigits(\"tc44r7\") == \"\"", "assert clearDigits(\"z0ww81\") == \"\"", "assert clearDigits(\"jcv5m69\") == \"j\"", "assert clearDigits(\"r1s5fhw\") == \"fhw\"", "assert clearDigits(\"hg2qqzac\") == \"hqqzac\"", "assert clearDigits(\"s6jp9cx4\") == \"jc\"", "assert clearDigits(\"x1f0i9yz\") == \"yz\"", "assert clearDigits(\"b2q2o1t1h\") == \"h\"", "assert clearDigits(\"i1i4sk69x\") == \"x\"", "assert clearDigits(\"x1zx54z2f\") == \"f\"", "assert clearDigits(\"c8j5c2pu2j\") == \"pj\"", "assert clearDigits(\"g3xxr2k9u9\") == \"xx\"", "assert clearDigits(\"jx0p3t33fy\") == \"fy\"", "assert clearDigits(\"llhz768y49\") == \"\"", "assert clearDigits(\"t3fb46ldb4\") == \"ld\"", "assert clearDigits(\"v5q6kw55us\") == \"us\"", "assert clearDigits(\"fe1ttzo86ibemg3ei131q8\") == \"fttibe\"", "assert clearDigits(\"j0n1q4b5k2a0w3ga06g7f6v6zc\") == \"zc\"", "assert clearDigits(\"w9v0h3mx67t1h9p2mdyua32582c2aq3rxs41owy\") == \"arowy\"", "assert clearDigits(\"s4wao3fdl141f4q57x81s2n7aitvpr3165v536nqer87ic9jme9up139eju7sng1z1dxg4gcfy\") == \"nqijejsndxgcfy\"", "assert clearDigits(\"o5zhqreh9487xa2qt542jm9dqjjs11ezf10toly6be1v7w695qi004g0xy429lgp1r975n73d4960ja0i57k2zdrczt60cx\") == \"zhjzdrccx\"", "assert clearDigits(\"a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0\") == \"\"", "assert clearDigits(\"h2qk80m2i0kaz2edb5049sinx00fs7gdo866c4h2r3ov7ii7qpp59kb57t2dk1j6m7y7b5895w507u0no5lu963c30i78x47h9x9\") == \"\"", "assert clearDigits(\"p9k9pw5we01hxntkgtda996cm0nh97t2sjps7hn3f608ed9d35ur7y3esuh9a73nk8r464s5cg9ex5526z66k8ni07f22m27h4wt\") == \"phxntkgcwt\"", "assert clearDigits(\"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp\") == \"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp\"", "assert clearDigits(\"rgx4at057qwpz27gv3i09790n6gmex63l675u0xg89s7n5u2k0k3kvc48r91a6hp5fkm0293yud663p7s0d6ww38hc9v32up1cee\") == \"ucee\"", "assert clearDigits(\"rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr44444444444444444444444444444444444444444444444444\") == \"\"", "assert clearDigits(\"t4hyyt4n148gxwvsu36l2zusk113auucyvuu31m87a09fs15qo7qb564ds03u7eh6c420166nc0c7pnglp8a37wv30dioag0kwtn\") == \"hgxwvznpngdioakwtn\"", "assert clearDigits(\"x8s0tt7x0j2q1ch3hb934ynji544vpl0pqjd7f91p5xfj78z4nsw86x044alv8d0cg5a0ig369eap0poa2905tvj8psm6a895184\") == \"tyvppqal\""], "public_tests": ["assert clearDigits(\"abc\") == \"abc\"", "assert clearDigits(\"cb34\") == \"\""], "prompt_full": "def clearDigits(s: str) -> str:\n    \"\"\"\n    You are given a string `s`.\n    \n    Your task is to remove **all** digits by doing this operation repeatedly:\n    \n      * Delete the first digit and the **closest** **non-digit** character to its left.\n    \n    Return the resulting string after removing all digits.\n    \n    \n    \n    **Example 1:**\n    \n    **Input:** s = \"abc\"\n    \n    **Output:** \"abc\"\n    \n    **Explanation:**\n    \n    There is no digit in the string.\n    \n    **Example 2:**\n    \n    **Input:** s = \"cb34\"\n    \n    **Output:** \"\"\n    \n    **Explanation:**\n    \n    First, we apply the operation on `s[2]`, and `s` becomes `\"c4\"`.\n    \n    Then we apply the operation on `s[1]`, and `s` becomes `\"\"`.\n    \n    \n    \n    **Constraints:**\n    \n      * `1 <= s.length <= 100`\n      * `s` consists only of lowercase English letters and digits.\n      * The input is generated such that it is possible to delete all digits.\n    \"\"\""}
